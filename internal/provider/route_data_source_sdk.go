// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"konnect/internal/sdk/pkg/models/shared"
)

func (r *RouteDataSourceModel) RefreshFromGetResponse(resp *shared.Route) {
	if resp.CreatedAt != nil {
		r.CreatedAt = types.Int64Value(*resp.CreatedAt)
	} else {
		r.CreatedAt = types.Int64Null()
	}
	if r.Headers == nil {
		r.Headers = &RouteHeaders{}
	}
	if resp.Headers == nil {
		r.Headers = nil
	} else {
		r.Headers = &RouteHeaders{}
	}
	r.Hosts = nil
	for _, v := range resp.Hosts {
		r.Hosts = append(r.Hosts, types.StringValue(v))
	}
	if resp.HTTPSRedirectStatusCode != nil {
		r.HTTPSRedirectStatusCode = types.Int64Value(*resp.HTTPSRedirectStatusCode)
	} else {
		r.HTTPSRedirectStatusCode = types.Int64Null()
	}
	if resp.ID != nil {
		r.ID = types.StringValue(*resp.ID)
	} else {
		r.ID = types.StringNull()
	}
	r.Methods = nil
	for _, v := range resp.Methods {
		r.Methods = append(r.Methods, types.StringValue(v))
	}
	if resp.Name != nil {
		r.Name = types.StringValue(*resp.Name)
	} else {
		r.Name = types.StringNull()
	}
	if resp.PathHandling != nil {
		r.PathHandling = types.StringValue(*resp.PathHandling)
	} else {
		r.PathHandling = types.StringNull()
	}
	r.Paths = nil
	for _, v := range resp.Paths {
		r.Paths = append(r.Paths, types.StringValue(v))
	}
	if resp.PreserveHost != nil {
		r.PreserveHost = types.BoolValue(*resp.PreserveHost)
	} else {
		r.PreserveHost = types.BoolNull()
	}
	r.Protocols = nil
	for _, v := range resp.Protocols {
		r.Protocols = append(r.Protocols, types.StringValue(v))
	}
	if resp.RegexPriority != nil {
		r.RegexPriority = types.Int64Value(*resp.RegexPriority)
	} else {
		r.RegexPriority = types.Int64Null()
	}
	if resp.RequestBuffering != nil {
		r.RequestBuffering = types.BoolValue(*resp.RequestBuffering)
	} else {
		r.RequestBuffering = types.BoolNull()
	}
	if resp.ResponseBuffering != nil {
		r.ResponseBuffering = types.BoolValue(*resp.ResponseBuffering)
	} else {
		r.ResponseBuffering = types.BoolNull()
	}
	if r.Service == nil {
		r.Service = &RouteService{}
	}
	if resp.Service == nil {
		r.Service = nil
	} else {
		r.Service = &RouteService{}
		if resp.Service.ID != nil {
			r.Service.ID = types.StringValue(*resp.Service.ID)
		} else {
			r.Service.ID = types.StringNull()
		}
	}
	r.Snis = nil
	for _, v := range resp.Snis {
		r.Snis = append(r.Snis, types.StringValue(v))
	}
	if resp.StripPath != nil {
		r.StripPath = types.BoolValue(*resp.StripPath)
	} else {
		r.StripPath = types.BoolNull()
	}
	r.Tags = nil
	for _, v := range resp.Tags {
		r.Tags = append(r.Tags, types.StringValue(v))
	}
	if resp.UpdatedAt != nil {
		r.UpdatedAt = types.Int64Value(*resp.UpdatedAt)
	} else {
		r.UpdatedAt = types.Int64Null()
	}
}
