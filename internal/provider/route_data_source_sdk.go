// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/pkg/models/shared"
)

func (r *RouteDataSourceModel) RefreshFromSharedRoute(resp *shared.Route) {
	r.CreatedAt = types.Int64PointerValue(resp.CreatedAt)
	if len(r.Destinations) > len(resp.Destinations) {
		r.Destinations = r.Destinations[:len(resp.Destinations)]
	}
	for destinationsCount, destinationsItem := range resp.Destinations {
		var destinations1 Destinations
		destinations1.IP = types.StringPointerValue(destinationsItem.IP)
		destinations1.Port = types.Int64PointerValue(destinationsItem.Port)
		if destinationsCount+1 > len(r.Destinations) {
			r.Destinations = append(r.Destinations, destinations1)
		} else {
			r.Destinations[destinationsCount].IP = destinations1.IP
			r.Destinations[destinationsCount].Port = destinations1.Port
		}
	}
	if resp.Headers == nil {
		r.Headers = nil
	} else {
		r.Headers = &Ordering{}
	}
	r.Hosts = nil
	for _, v := range resp.Hosts {
		r.Hosts = append(r.Hosts, types.StringValue(v))
	}
	r.HTTPSRedirectStatusCode = types.Int64PointerValue(resp.HTTPSRedirectStatusCode)
	r.ID = types.StringPointerValue(resp.ID)
	r.Methods = nil
	for _, v := range resp.Methods {
		r.Methods = append(r.Methods, types.StringValue(v))
	}
	r.Name = types.StringPointerValue(resp.Name)
	r.PathHandling = types.StringPointerValue(resp.PathHandling)
	r.Paths = nil
	for _, v := range resp.Paths {
		r.Paths = append(r.Paths, types.StringValue(v))
	}
	r.PreserveHost = types.BoolPointerValue(resp.PreserveHost)
	r.Protocols = nil
	for _, v := range resp.Protocols {
		r.Protocols = append(r.Protocols, types.StringValue(v))
	}
	r.RegexPriority = types.Int64PointerValue(resp.RegexPriority)
	r.RequestBuffering = types.BoolPointerValue(resp.RequestBuffering)
	r.ResponseBuffering = types.BoolPointerValue(resp.ResponseBuffering)
	if resp.Service == nil {
		r.Service = nil
	} else {
		r.Service = &PluginConsumer{}
		r.Service.ID = types.StringPointerValue(resp.Service.ID)
	}
	r.Snis = nil
	for _, v := range resp.Snis {
		r.Snis = append(r.Snis, types.StringValue(v))
	}
	if len(r.Sources) > len(resp.Sources) {
		r.Sources = r.Sources[:len(resp.Sources)]
	}
	for sourcesCount, sourcesItem := range resp.Sources {
		var sources1 Destinations
		sources1.IP = types.StringPointerValue(sourcesItem.IP)
		sources1.Port = types.Int64PointerValue(sourcesItem.Port)
		if sourcesCount+1 > len(r.Sources) {
			r.Sources = append(r.Sources, sources1)
		} else {
			r.Sources[sourcesCount].IP = sources1.IP
			r.Sources[sourcesCount].Port = sources1.Port
		}
	}
	r.StripPath = types.BoolPointerValue(resp.StripPath)
	r.Tags = nil
	for _, v := range resp.Tags {
		r.Tags = append(r.Tags, types.StringValue(v))
	}
	r.UpdatedAt = types.Int64PointerValue(resp.UpdatedAt)
}
