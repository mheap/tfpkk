// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/pkg/models/shared"
)

func (r *KeySetResourceModel) ToSharedCreateKeySet() *shared.CreateKeySet {
	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	var tags []string = nil
	for _, tagsItem := range r.Tags {
		tags = append(tags, tagsItem.ValueString())
	}
	out := shared.CreateKeySet{
		Name: name,
		Tags: tags,
	}
	return &out
}

func (r *KeySetResourceModel) RefreshFromSharedKeySet(resp *shared.KeySet) {
	r.CreatedAt = types.Int64PointerValue(resp.CreatedAt)
	r.ID = types.StringPointerValue(resp.ID)
	r.Name = types.StringPointerValue(resp.Name)
	r.Tags = nil
	for _, v := range resp.Tags {
		r.Tags = append(r.Tags, types.StringValue(v))
	}
	r.UpdatedAt = types.Int64PointerValue(resp.UpdatedAt)
}
