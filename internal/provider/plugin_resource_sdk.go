// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/pkg/models/shared"
)

func (r *PluginResourceModel) ToSharedPluginRequest() *shared.PluginRequest {
	var config *shared.Config
	if r.Config != nil {
		hour := new(int64)
		if !r.Config.Hour.IsUnknown() && !r.Config.Hour.IsNull() {
			*hour = r.Config.Hour.ValueInt64()
		} else {
			hour = nil
		}
		minute := new(int64)
		if !r.Config.Minute.IsUnknown() && !r.Config.Minute.IsNull() {
			*minute = r.Config.Minute.ValueInt64()
		} else {
			minute = nil
		}
		config = &shared.Config{
			Hour:   hour,
			Minute: minute,
		}
	}
	enabled := new(bool)
	if !r.Enabled.IsUnknown() && !r.Enabled.IsNull() {
		*enabled = r.Enabled.ValueBool()
	} else {
		enabled = nil
	}
	instanceName := new(string)
	if !r.InstanceName.IsUnknown() && !r.InstanceName.IsNull() {
		*instanceName = r.InstanceName.ValueString()
	} else {
		instanceName = nil
	}
	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	var protocols []shared.Protocols = nil
	for _, protocolsItem := range r.Protocols {
		protocols = append(protocols, shared.Protocols(protocolsItem.ValueString()))
	}
	var route *shared.PluginRequestRoute
	if r.Route != nil {
		id := new(string)
		if !r.Route.ID.IsUnknown() && !r.Route.ID.IsNull() {
			*id = r.Route.ID.ValueString()
		} else {
			id = nil
		}
		route = &shared.PluginRequestRoute{
			ID: id,
		}
	}
	var service *shared.Service
	if r.Service != nil {
		id1 := new(string)
		if !r.Service.ID.IsUnknown() && !r.Service.ID.IsNull() {
			*id1 = r.Service.ID.ValueString()
		} else {
			id1 = nil
		}
		service = &shared.Service{
			ID: id1,
		}
	}
	var tags []string = nil
	for _, tagsItem := range r.Tags {
		tags = append(tags, tagsItem.ValueString())
	}
	out := shared.PluginRequest{
		Config:       config,
		Enabled:      enabled,
		InstanceName: instanceName,
		Name:         name,
		Protocols:    protocols,
		Route:        route,
		Service:      service,
		Tags:         tags,
	}
	return &out
}

func (r *PluginResourceModel) RefreshFromSharedPlugin(resp *shared.Plugin) {
	if resp.Config == nil {
		r.Config = nil
	} else {
		r.Config = &Config{}
	}
	if resp.Consumer == nil {
		r.Consumer = nil
	} else {
		r.Consumer = &PluginConsumer{}
		r.Consumer.ID = types.StringPointerValue(resp.Consumer.ID)
	}
	r.CreatedAt = types.Int64PointerValue(resp.CreatedAt)
	r.Enabled = types.BoolPointerValue(resp.Enabled)
	r.ID = types.StringPointerValue(resp.ID)
	r.InstanceName = types.StringPointerValue(resp.InstanceName)
	r.Name = types.StringPointerValue(resp.Name)
	if resp.Ordering == nil {
		r.Ordering = nil
	} else {
		r.Ordering = &Ordering{}
	}
	r.Protocols = nil
	for _, v := range resp.Protocols {
		r.Protocols = append(r.Protocols, types.StringValue(string(v)))
	}
	if resp.Route == nil {
		r.Route = nil
	} else {
		r.Route = &PluginConsumer{}
		r.Route.ID = types.StringPointerValue(resp.Route.ID)
	}
	if resp.Service == nil {
		r.Service = nil
	} else {
		r.Service = &PluginConsumer{}
		r.Service.ID = types.StringPointerValue(resp.Service.ID)
	}
	r.Tags = nil
	for _, v := range resp.Tags {
		r.Tags = append(r.Tags, types.StringValue(v))
	}
}
