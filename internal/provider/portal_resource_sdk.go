// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"konnect/internal/sdk/pkg/models/shared"
	"time"
)

func (r *PortalResourceModel) ToCreateSDKType() *shared.UpdatePortalRequest {
	autoApproveApplications := new(bool)
	if !r.AutoApproveApplications.IsUnknown() && !r.AutoApproveApplications.IsNull() {
		*autoApproveApplications = r.AutoApproveApplications.ValueBool()
	} else {
		autoApproveApplications = nil
	}
	autoApproveDevelopers := new(bool)
	if !r.AutoApproveDevelopers.IsUnknown() && !r.AutoApproveDevelopers.IsNull() {
		*autoApproveDevelopers = r.AutoApproveDevelopers.ValueBool()
	} else {
		autoApproveDevelopers = nil
	}
	customClientDomain := new(string)
	if !r.CustomClientDomain.IsUnknown() && !r.CustomClientDomain.IsNull() {
		*customClientDomain = r.CustomClientDomain.ValueString()
	} else {
		customClientDomain = nil
	}
	customDomain := new(string)
	if !r.CustomDomain.IsUnknown() && !r.CustomDomain.IsNull() {
		*customDomain = r.CustomDomain.ValueString()
	} else {
		customDomain = nil
	}
	isPublic := new(bool)
	if !r.IsPublic.IsUnknown() && !r.IsPublic.IsNull() {
		*isPublic = r.IsPublic.ValueBool()
	} else {
		isPublic = nil
	}
	rbacEnabled := new(bool)
	if !r.RbacEnabled.IsUnknown() && !r.RbacEnabled.IsNull() {
		*rbacEnabled = r.RbacEnabled.ValueBool()
	} else {
		rbacEnabled = nil
	}
	out := shared.UpdatePortalRequest{
		AutoApproveApplications: autoApproveApplications,
		AutoApproveDevelopers:   autoApproveDevelopers,
		CustomClientDomain:      customClientDomain,
		CustomDomain:            customDomain,
		IsPublic:                isPublic,
		RbacEnabled:             rbacEnabled,
	}
	return &out
}

func (r *PortalResourceModel) ToUpdateSDKType() *shared.UpdatePortalRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *PortalResourceModel) RefreshFromCreateResponse(resp *shared.UpdatePortalResponse) {
	r.AutoApproveApplications = types.BoolValue(resp.AutoApproveApplications)
	r.AutoApproveDevelopers = types.BoolValue(resp.AutoApproveDevelopers)
	r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
	if resp.CustomClientDomain != nil {
		r.CustomClientDomain = types.StringValue(*resp.CustomClientDomain)
	} else {
		r.CustomClientDomain = types.StringNull()
	}
	if resp.CustomDomain != nil {
		r.CustomDomain = types.StringValue(*resp.CustomDomain)
	} else {
		r.CustomDomain = types.StringNull()
	}
	r.DefaultDomain = types.StringValue(resp.DefaultDomain)
	r.ID = types.StringValue(resp.ID)
	r.IsPublic = types.BoolValue(resp.IsPublic)
	r.Name = types.StringValue(resp.Name)
	r.RbacEnabled = types.BoolValue(resp.RbacEnabled)
	r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
}

func (r *PortalResourceModel) RefreshFromUpdateResponse(resp *shared.UpdatePortalResponse) {
	r.RefreshFromCreateResponse(resp)
}
