// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/pkg/models/shared"
	"math/big"
)

func (r *TargetResourceModel) ToSharedCreateTargetWithoutParents() *shared.CreateTargetWithoutParents {
	var tags []string = nil
	for _, tagsItem := range r.Tags {
		tags = append(tags, tagsItem.ValueString())
	}
	target := new(string)
	if !r.Target.IsUnknown() && !r.Target.IsNull() {
		*target = r.Target.ValueString()
	} else {
		target = nil
	}
	weight := new(int64)
	if !r.Weight.IsUnknown() && !r.Weight.IsNull() {
		*weight = r.Weight.ValueInt64()
	} else {
		weight = nil
	}
	out := shared.CreateTargetWithoutParents{
		Tags:   tags,
		Target: target,
		Weight: weight,
	}
	return &out
}

func (r *TargetResourceModel) RefreshFromSharedTarget(resp *shared.Target) {
	if resp.CreatedAt != nil {
		r.CreatedAt = types.NumberValue(big.NewFloat(float64(*resp.CreatedAt)))
	} else {
		r.CreatedAt = types.NumberNull()
	}
	r.ID = types.StringPointerValue(resp.ID)
	r.Tags = nil
	for _, v := range resp.Tags {
		r.Tags = append(r.Tags, types.StringValue(v))
	}
	r.Target = types.StringPointerValue(resp.Target)
	if resp.Upstream == nil {
		r.Upstream = nil
	} else {
		r.Upstream = &CreateACLConsumer{}
		r.Upstream.ID = types.StringPointerValue(resp.Upstream.ID)
	}
	r.Weight = types.Int64PointerValue(resp.Weight)
}
