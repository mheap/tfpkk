// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/pkg/models/shared"
	"time"
)

func (r *APIProductVersionResourceModel) ToSharedCreateAPIProductVersionDTO() *shared.CreateAPIProductVersionDTO {
	deprecated := new(bool)
	if !r.Deprecated.IsUnknown() && !r.Deprecated.IsNull() {
		*deprecated = r.Deprecated.ValueBool()
	} else {
		deprecated = nil
	}
	var gatewayService *shared.GatewayServicePayload
	if r.GatewayService != nil {
		controlPlaneID := r.GatewayService.ControlPlaneID.ValueString()
		id := r.GatewayService.ID.ValueString()
		gatewayService = &shared.GatewayServicePayload{
			ControlPlaneID: controlPlaneID,
			ID:             id,
		}
	}
	name := r.Name.ValueString()
	publishStatus := new(shared.CreateAPIProductVersionDTOPublishStatus)
	if !r.PublishStatus.IsUnknown() && !r.PublishStatus.IsNull() {
		*publishStatus = shared.CreateAPIProductVersionDTOPublishStatus(r.PublishStatus.ValueString())
	} else {
		publishStatus = nil
	}
	out := shared.CreateAPIProductVersionDTO{
		Deprecated:     deprecated,
		GatewayService: gatewayService,
		Name:           name,
		PublishStatus:  publishStatus,
	}
	return &out
}

func (r *APIProductVersionResourceModel) RefreshFromSharedAPIProductVersion(resp *shared.APIProductVersion) {
	r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
	r.Deprecated = types.BoolValue(resp.Deprecated)
	if resp.GatewayService == nil {
		r.GatewayService = nil
	} else {
		r.GatewayService = &GatewayServicePayload{}
		r.GatewayService.ControlPlaneID = types.StringValue(resp.GatewayService.ControlPlaneID)
		r.GatewayService.ID = types.StringPointerValue(resp.GatewayService.ID)
		r.GatewayService.RuntimeGroupID = types.StringPointerValue(resp.GatewayService.RuntimeGroupID)
	}
	r.ID = types.StringValue(resp.ID)
	r.Name = types.StringValue(resp.Name)
	r.PublishStatus = types.StringValue(string(resp.PublishStatus))
	r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
}

func (r *APIProductVersionResourceModel) ToSharedUpdateAPIProductVersionDTO() *shared.UpdateAPIProductVersionDTO {
	deprecated := new(bool)
	if !r.Deprecated.IsUnknown() && !r.Deprecated.IsNull() {
		*deprecated = r.Deprecated.ValueBool()
	} else {
		deprecated = nil
	}
	var gatewayService *shared.GatewayServicePayload
	if r.GatewayService != nil {
		controlPlaneID := r.GatewayService.ControlPlaneID.ValueString()
		id := r.GatewayService.ID.ValueString()
		gatewayService = &shared.GatewayServicePayload{
			ControlPlaneID: controlPlaneID,
			ID:             id,
		}
	}
	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	publishStatus := new(shared.UpdateAPIProductVersionDTOPublishStatus)
	if !r.PublishStatus.IsUnknown() && !r.PublishStatus.IsNull() {
		*publishStatus = shared.UpdateAPIProductVersionDTOPublishStatus(r.PublishStatus.ValueString())
	} else {
		publishStatus = nil
	}
	out := shared.UpdateAPIProductVersionDTO{
		Deprecated:     deprecated,
		GatewayService: gatewayService,
		Name:           name,
		PublishStatus:  publishStatus,
	}
	return &out
}
