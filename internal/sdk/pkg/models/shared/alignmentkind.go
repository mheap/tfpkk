// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AlignmentKind string

const (
	AlignmentKindLeft   AlignmentKind = "left"
	AlignmentKindRight  AlignmentKind = "right"
	AlignmentKindCenter AlignmentKind = "center"
	AlignmentKindNone   AlignmentKind = "none"
)

func (e AlignmentKind) ToPointer() *AlignmentKind {
	return &e
}

func (e *AlignmentKind) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "right":
		fallthrough
	case "center":
		fallthrough
	case "none":
		*e = AlignmentKind(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AlignmentKind: %v", v)
	}
}
