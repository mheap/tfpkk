// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PortalAssignedRoleEntityRegion string

const (
	PortalAssignedRoleEntityRegionUs       PortalAssignedRoleEntityRegion = "us"
	PortalAssignedRoleEntityRegionEu       PortalAssignedRoleEntityRegion = "eu"
	PortalAssignedRoleEntityRegionWildcard PortalAssignedRoleEntityRegion = "*"
)

func (e PortalAssignedRoleEntityRegion) ToPointer() *PortalAssignedRoleEntityRegion {
	return &e
}

func (e *PortalAssignedRoleEntityRegion) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "us":
		fallthrough
	case "eu":
		fallthrough
	case "*":
		*e = PortalAssignedRoleEntityRegion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PortalAssignedRoleEntityRegion: %v", v)
	}
}

// PortalAssignedRole - An assigned role associates a service and an action to a team.
type PortalAssignedRole struct {
	EntityID       *string                         `json:"entity_id,omitempty"`
	EntityRegion   *PortalAssignedRoleEntityRegion `json:"entity_region,omitempty"`
	EntityTypeName *string                         `json:"entity_type_name,omitempty"`
	ID             *string                         `json:"id,omitempty"`
	RoleName       *string                         `json:"role_name,omitempty"`
}
