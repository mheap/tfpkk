// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateAPIProductVersionDTOGatewayService struct {
	// The identifier of a gateway service associated with the version of the API product.
	ID             string `json:"id"`
	RuntimeGroupID string `json:"runtime_group_id"`
}

// CreateAPIProductVersionDTOPublishStatus - The publish status of the API product version.
type CreateAPIProductVersionDTOPublishStatus string

const (
	CreateAPIProductVersionDTOPublishStatusUnpublished CreateAPIProductVersionDTOPublishStatus = "unpublished"
	CreateAPIProductVersionDTOPublishStatusPublished   CreateAPIProductVersionDTOPublishStatus = "published"
)

func (e CreateAPIProductVersionDTOPublishStatus) ToPointer() *CreateAPIProductVersionDTOPublishStatus {
	return &e
}

func (e *CreateAPIProductVersionDTOPublishStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unpublished":
		fallthrough
	case "published":
		*e = CreateAPIProductVersionDTOPublishStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAPIProductVersionDTOPublishStatus: %v", v)
	}
}

// CreateAPIProductVersionDTO - The request schema to create a version of an API product.
type CreateAPIProductVersionDTO struct {
	// Indicates if the version of the API product is deprecated.
	Deprecated     *bool                                     `json:"deprecated,omitempty"`
	GatewayService *CreateAPIProductVersionDTOGatewayService `json:"gateway_service,omitempty"`
	// The version name of the API product version.
	Name string `json:"name"`
	// The publish status of the API product version.
	PublishStatus *CreateAPIProductVersionDTOPublishStatus `json:"publish_status,omitempty"`
}
