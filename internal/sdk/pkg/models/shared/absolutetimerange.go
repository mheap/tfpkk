// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"Konnect/internal/sdk/pkg/types"
	"encoding/json"
	"fmt"
)

type AbsoluteTimeRangeType string

const (
	AbsoluteTimeRangeTypeAbsolute AbsoluteTimeRangeType = "ABSOLUTE"
)

func (e AbsoluteTimeRangeType) ToPointer() *AbsoluteTimeRangeType {
	return &e
}

func (e *AbsoluteTimeRangeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ABSOLUTE":
		*e = AbsoluteTimeRangeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AbsoluteTimeRangeType: %v", v)
	}
}

// AbsoluteTimeRange - The period of time to return data.  Relative time ranges are relative to the current moment.  Absolute time ranges specify an unchanging period of time.  If not specified, a default relative timeframe of last 24 hours will be chosen.
type AbsoluteTimeRange struct {
	// An ISO-8601 date value specifying the upper bound of the time range, inclusive.
	End types.Date `json:"end"`
	// An ISO-8601 date value specifying the lower bound of the time range, inclusive.
	Start types.Date            `json:"start"`
	Type  AbsoluteTimeRangeType `json:"type"`
}
