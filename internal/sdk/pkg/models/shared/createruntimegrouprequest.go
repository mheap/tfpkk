// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateRuntimeGroupRequestAuthType - The auth type value of the cluster associated with the Runtime Group.
type CreateRuntimeGroupRequestAuthType string

const (
	CreateRuntimeGroupRequestAuthTypePinnedClientCerts CreateRuntimeGroupRequestAuthType = "pinned_client_certs"
	CreateRuntimeGroupRequestAuthTypePkiClientCerts    CreateRuntimeGroupRequestAuthType = "pki_client_certs"
)

func (e CreateRuntimeGroupRequestAuthType) ToPointer() *CreateRuntimeGroupRequestAuthType {
	return &e
}

func (e *CreateRuntimeGroupRequestAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pinned_client_certs":
		fallthrough
	case "pki_client_certs":
		*e = CreateRuntimeGroupRequestAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRuntimeGroupRequestAuthType: %v", v)
	}
}

// CreateRuntimeGroupRequestClusterType - The ClusterType value of the cluster associated with the Runtime Group.
type CreateRuntimeGroupRequestClusterType string

const (
	CreateRuntimeGroupRequestClusterTypeClusterTypeHybrid               CreateRuntimeGroupRequestClusterType = "CLUSTER_TYPE_HYBRID"
	CreateRuntimeGroupRequestClusterTypeClusterTypeK8SIngressController CreateRuntimeGroupRequestClusterType = "CLUSTER_TYPE_K8S_INGRESS_CONTROLLER"
	CreateRuntimeGroupRequestClusterTypeClusterTypeComposite            CreateRuntimeGroupRequestClusterType = "CLUSTER_TYPE_COMPOSITE"
)

func (e CreateRuntimeGroupRequestClusterType) ToPointer() *CreateRuntimeGroupRequestClusterType {
	return &e
}

func (e *CreateRuntimeGroupRequestClusterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLUSTER_TYPE_HYBRID":
		fallthrough
	case "CLUSTER_TYPE_K8S_INGRESS_CONTROLLER":
		fallthrough
	case "CLUSTER_TYPE_COMPOSITE":
		*e = CreateRuntimeGroupRequestClusterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRuntimeGroupRequestClusterType: %v", v)
	}
}

// CreateRuntimeGroupRequest - The request schema for the create runtime group request.
type CreateRuntimeGroupRequest struct {
	// The auth type value of the cluster associated with the Runtime Group.
	AuthType *CreateRuntimeGroupRequestAuthType `json:"auth_type,omitempty"`
	// The ClusterType value of the cluster associated with the Runtime Group.
	ClusterType *CreateRuntimeGroupRequestClusterType `json:"cluster_type,omitempty"`
	// The description of the runtime group in Konnect.
	Description *string `json:"description,omitempty"`
	// Labels to facilitate tagged search on runtime groups. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'.
	Labels interface{} `json:"labels,omitempty"`
	// The name of the runtime group.
	Name string `json:"name"`
}
