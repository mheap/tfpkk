// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FilterType - The type of filter to apply.  `IN` filters will limit results to only the specified values, while `NOT_IN` filters will exclude the specified values.
type FilterType string

const (
	FilterTypeIn    FilterType = "IN"
	FilterTypeNotIn FilterType = "NOT_IN"
)

func (e FilterType) ToPointer() *FilterType {
	return &e
}

func (e *FilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IN":
		fallthrough
	case "NOT_IN":
		*e = FilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilterType: %v", v)
	}
}
