// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// TargetUpstream - The unique identifier or the name of the upstream for which to update the target.
type TargetUpstream struct {
	ID *string `json:"id,omitempty"`
}

// Target - A target is an ip address/hostname with a port that identifies an instance of a backend service. Every upstream can have many targets, and the targets can be dynamically added, modified, or deleted. Changes take effect on the fly. To disable a target, post a new one with `weight=0`; alternatively, use the `DELETE` convenience method to accomplish the same. The current target object definition is the one with the latest `created_at`.
type Target struct {
	// Unix epoch when the resource was created.
	CreatedAt *float64 `json:"created_at,omitempty"`
	// The unique identifier or the name of the upstream for which to update the target.
	ID *string `json:"id,omitempty"`
	// An optional set of strings associated with the Target for grouping and filtering.
	Tags []string `json:"tags,omitempty"`
	// The target address (ip or hostname) and port. If the hostname resolves to an SRV record, the `port` value will be overridden by the value from the DNS record.
	Target *string `json:"target,omitempty"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// The unique identifier or the name of the upstream for which to update the target.
	Upstream *TargetUpstream `json:"upstream,omitempty"`
	// The weight this target gets within the upstream loadbalancer (`0`-`65535`). If the hostname resolves to an SRV record, the `weight` value will be overridden by the value from the DNS record.
	Weight *int64 `json:"weight,omitempty"`
}
