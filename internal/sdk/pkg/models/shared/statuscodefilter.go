// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StatusCodeFilterDimension - The dimension to filter.
type StatusCodeFilterDimension string

const (
	StatusCodeFilterDimensionStatusCode StatusCodeFilterDimension = "STATUS_CODE"
)

func (e StatusCodeFilterDimension) ToPointer() *StatusCodeFilterDimension {
	return &e
}

func (e *StatusCodeFilterDimension) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATUS_CODE":
		*e = StatusCodeFilterDimension(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusCodeFilterDimension: %v", v)
	}
}

type StatusCodeFilter struct {
	// The dimension to filter.
	Dimension StatusCodeFilterDimension `json:"dimension"`
	// The type of filter to apply.  `IN` filters will limit results to only the specified values, while `NOT_IN` filters will exclude the specified values.
	Type FilterType `json:"type"`
	// Only include requests with specific status codes in the results.
	//
	Values []int64 `json:"values"`
}
