// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Konnect/internal/sdk/pkg/models/shared"
	"net/http"
)

type CreateAPIProductDocumentRequest struct {
	CreateAPIProductDocumentDTO shared.CreateAPIProductDocumentDTO `request:"mediaType=application/json"`
	// The API product identifier
	APIProductID string `pathParam:"style=simple,explode=false,name=apiProductId"`
}

// CreateAPIProductDocument409ApplicationProblemPlusJSON - Conflict - `slug` property must be unique
type CreateAPIProductDocument409ApplicationProblemPlusJSON struct {
	Instance string  `json:"instance"`
	Status   float64 `json:"status"`
	Title    string  `json:"title"`
	Type     *string `json:"type,omitempty"`
}

type CreateAPIProductDocumentResponse struct {
	// API product document
	APIProductDocument *shared.APIProductDocument
	// Bad Request
	BadRequestError *shared.BadRequestError
	ContentType     string
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	// Not Found
	NotFoundError *shared.NotFoundError
	StatusCode    int
	RawResponse   *http.Response
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Unsupported Media Type
	UnsupportedMediaTypeError *shared.UnsupportedMediaTypeError
	// Conflict - `slug` property must be unique
	CreateAPIProductDocument409ApplicationProblemPlusJSONObject *CreateAPIProductDocument409ApplicationProblemPlusJSON
}
