// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/internal/sdk/pkg/models/shared"
	"net/http"
)

type GetAPIProductVersionRequest struct {
	// The API product identifier
	APIProductID string `pathParam:"style=simple,explode=false,name=apiProductId"`
	// The API product version identifier
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetAPIProductVersionRequest) GetAPIProductID() string {
	if o == nil {
		return ""
	}
	return o.APIProductID
}

func (o *GetAPIProductVersionRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetAPIProductVersionResponse struct {
	// API product
	APIProductVersion *shared.APIProductVersion
	// HTTP response content type for this operation
	ContentType string
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	// Not Found
	NotFoundError *shared.NotFoundError
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
}

func (o *GetAPIProductVersionResponse) GetAPIProductVersion() *shared.APIProductVersion {
	if o == nil {
		return nil
	}
	return o.APIProductVersion
}

func (o *GetAPIProductVersionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAPIProductVersionResponse) GetForbiddenError() *shared.ForbiddenError {
	if o == nil {
		return nil
	}
	return o.ForbiddenError
}

func (o *GetAPIProductVersionResponse) GetNotFoundError() *shared.NotFoundError {
	if o == nil {
		return nil
	}
	return o.NotFoundError
}

func (o *GetAPIProductVersionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAPIProductVersionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAPIProductVersionResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if o == nil {
		return nil
	}
	return o.UnauthorizedError
}
