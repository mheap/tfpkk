// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// CreateSniRequestBodyCertificate - The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object. With form-encoded, the notation is `certificate.id=<certificate id>`. With JSON, use `“certificate:{id:<certificate id>”}`.
type CreateSniRequestBodyCertificate struct {
	// 91020192-062d-416f-a275-9addeeaffaf2
	ID string `json:"id"`
}

// CreateSniRequestBody - A JSON object containing the details of the new SNI, including the name, certificate, and tags.
type CreateSniRequestBody struct {
	// The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object. With form-encoded, the notation is `certificate.id=<certificate id>`. With JSON, use `“certificate:{id:<certificate id>”}`.
	Certificate CreateSniRequestBodyCertificate `json:"certificate"`
	// The SNI name to associate with the given certificate.
	Name string `json:"name"`
	// An optional set of strings associated with the SNIs for grouping and filtering.
	//
	Tags []string `json:"tags,omitempty"`
}

type CreateSniRequest struct {
	// A JSON object containing the details of the new SNI, including the name, certificate, and tags.
	RequestBody *CreateSniRequestBody `request:"mediaType=application/json"`
	// The ID of your runtime group. This variable is available in the Konnect manager
	RuntimeGroupID string `pathParam:"style=simple,explode=false,name=runtimeGroupId"`
}

// CreateSni400ApplicationJSON - Invalid SNI
type CreateSni400ApplicationJSON struct {
}

// CreateSni200ApplicationJSONDataCertificate - The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object.
type CreateSni200ApplicationJSONDataCertificate struct {
	// The unique identifier or the name attribute of the Certificate whose SNIs
	ID *string `json:"id,omitempty"`
}

type CreateSni200ApplicationJSONData struct {
	// The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object.
	//
	Certificate *CreateSni200ApplicationJSONDataCertificate `json:"certificate,omitempty"`
	// Unix epoch when the resource was created.
	//
	CreatedAt *int64 `json:"created_at,omitempty"`
	// The unique identifier or the name attribute of the Certificate whose SNIs are to be retrieved. When using this endpoint, only SNIs associated to the specified Certificate will be listed.
	ID *string `json:"id,omitempty"`
	// The SNI name to associate with the given certificate.
	//
	Name *string `json:"name,omitempty"`
	// An optional set of strings associated with the SNIs for grouping and filtering.
	//
	Tags []string `json:"tags,omitempty"`
}

// CreateSni200ApplicationJSON - SNI response object
type CreateSni200ApplicationJSON struct {
	// Array of SNIs
	Data []CreateSni200ApplicationJSONData `json:"data,omitempty"`
	// Offset is used to paginate through the API. Provide this value to the next list operation to fetch the next page
	Next *string `json:"next,omitempty"`
}

type CreateSniResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// SNI response object
	CreateSni200ApplicationJSONObject *CreateSni200ApplicationJSON
	// Invalid SNI
	CreateSni400ApplicationJSONObject *CreateSni400ApplicationJSON
}
