// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel - Log levels are set in Kong’s configuration. Log levels increase in order of their severity
type PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel string

const (
	PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevelInfo   PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel = "info"
	PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevelNotice PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel = "notice"
	PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevelWarn   PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel = "warn"
	PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevelError  PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel = "error"
	PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevelCrit   PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel = "crit"
)

func (e PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel) ToPointer() *PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel {
	return &e
}

func (e *PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "info":
		fallthrough
	case "notice":
		fallthrough
	case "warn":
		fallthrough
	case "error":
		fallthrough
	case "crit":
		*e = PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel: %v", v)
	}
}

type PutDebugClusterControlPlanesNodesLogLevelLogLevelRequest struct {
	// Log levels are set in Kong’s configuration. Log levels increase in order of their severity
	LogLevel       PutDebugClusterControlPlanesNodesLogLevelLogLevelLogLevel `pathParam:"style=simple,explode=false,name=log_level"`
	RuntimeGroupID string                                                    `pathParam:"style=simple,explode=false,name=runtimeGroupId"`
}

// PutDebugClusterControlPlanesNodesLogLevelLogLevel200ApplicationJSON - OK
type PutDebugClusterControlPlanesNodesLogLevelLogLevel200ApplicationJSON struct {
	// Response message
	Message *string `json:"message,omitempty"`
}

type PutDebugClusterControlPlanesNodesLogLevelLogLevelResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PutDebugClusterControlPlanesNodesLogLevelLogLevel200ApplicationJSONObject *PutDebugClusterControlPlanesNodesLogLevelLogLevel200ApplicationJSON
}
