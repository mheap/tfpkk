// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/internal/sdk/pkg/models/shared"
	"net/http"
)

type PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDRequest struct {
	// Description of the Plugin
	CreatePluginWithoutParents shared.CreatePluginWithoutParents `request:"mediaType=application/json"`
	// ID of the Plugin to lookup
	PluginID string `pathParam:"style=simple,explode=false,name=PluginId"`
	// ID of the Route to lookup
	RouteID string `pathParam:"style=simple,explode=false,name=RouteId"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDRequest) GetCreatePluginWithoutParents() shared.CreatePluginWithoutParents {
	if o == nil {
		return shared.CreatePluginWithoutParents{}
	}
	return o.CreatePluginWithoutParents
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDRequest) GetPluginID() string {
	if o == nil {
		return ""
	}
	return o.PluginID
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDRequest) GetRouteID() string {
	if o == nil {
		return ""
	}
	return o.RouteID
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

// PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponseBody - Invalid Plugin
type PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponseBody struct {
}

type PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successfully upserted Plugin
	Plugin *shared.Plugin
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Invalid Plugin
	Object *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponseBody
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponse) GetPlugin() *shared.Plugin {
	if o == nil {
		return nil
	}
	return o.Plugin
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponse) GetObject() *PutControlPlanesControlPlaneIDCoreEntitiesRoutesRouteIDPluginsPluginIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
