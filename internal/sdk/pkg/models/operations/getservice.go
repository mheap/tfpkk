// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetServiceRequest struct {
	// Offset from which to return the next set of resources. Use the value of the 'offset' field from the response of a list operation as input here to paginate through all the resources
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// The ID of your runtime group. This variable is available in the Konnect manager
	RuntimeGroupID string `pathParam:"style=simple,explode=false,name=runtimeGroupId"`
	// ID **or** name of the service to lookup
	ServiceID string `pathParam:"style=simple,explode=false,name=service_id"`
	// Number of resources to be returned.
	Size *int64 `queryParam:"style=form,explode=true,name=size"`
	// A list of tags to filter the list of resources on. Multiple tags can be concatenated using ',' to mean AND or using '/' to mean OR.
	Tags *string `queryParam:"style=form,explode=true,name=tags"`
}

// GetService200ApplicationJSON - The service response object is returned when creating a new service or retreiving an existing service.
type GetService200ApplicationJSON struct {
	ConnectTimeout *int64 `json:"connect_timeout,omitempty"`
	// Unix epoch when the resource was last created.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// Service enabled boolean
	Enabled      *bool   `json:"enabled,omitempty"`
	Host         *string `json:"host,omitempty"`
	ID           *string `json:"id,omitempty"`
	Name         *string `json:"name,omitempty"`
	Path         *string `json:"path,omitempty"`
	Port         *int64  `json:"port,omitempty"`
	Protocol     *string `json:"protocol,omitempty"`
	ReadTimeout  *int64  `json:"read_timeout,omitempty"`
	Retries      *int64  `json:"retries,omitempty"`
	UpdatedAt    *int64  `json:"updated_at,omitempty"`
	WriteTimeout *int64  `json:"write_timeout,omitempty"`
}

type GetServiceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The service response object is returned when creating a new service or retreiving an existing service.
	GetService200ApplicationJSONObject *GetService200ApplicationJSON
}
