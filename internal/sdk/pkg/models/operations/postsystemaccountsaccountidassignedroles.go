// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Konnect/internal/sdk/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
)

// PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion - The region of the team.
type PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion string

const (
	PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegionUs       PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion = "us"
	PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegionEu       PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion = "eu"
	PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegionWildcard PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion = "*"
)

func (e PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion) ToPointer() *PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion {
	return &e
}

func (e *PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "us":
		fallthrough
	case "eu":
		fallthrough
	case "*":
		*e = PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion: %v", v)
	}
}

// PostSystemAccountsAccountIDAssignedRolesRequestBody - An assigned role is a role that has been assigned to a user or team.
type PostSystemAccountsAccountIDAssignedRolesRequestBody struct {
	// The ID of the entity.
	EntityID *string `json:"entity_id,omitempty"`
	// The region of the team.
	EntityRegion *PostSystemAccountsAccountIDAssignedRolesRequestBodyEntityRegion `json:"entity_region,omitempty"`
	// The type of entity.
	EntityTypeName *string `json:"entity_type_name,omitempty"`
	// The desired role.
	RoleName *string `json:"role_name,omitempty"`
}

type PostSystemAccountsAccountIDAssignedRolesRequest struct {
	// The request schema for assigning a role.
	RequestBody *PostSystemAccountsAccountIDAssignedRolesRequestBody `request:"mediaType=application/json"`
	// ID of the system account.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
}

type PostSystemAccountsAccountIDAssignedRolesResponse struct {
	// A get action response of a single assigned role.
	AssignedRole *shared.AssignedRole
	// Conflict
	ConflictError *shared.ConflictError
	ContentType   string
	// Not Found
	NotFoundError *shared.NotFoundError
	StatusCode    int
	RawResponse   *http.Response
	// Unauthenticated
	UnauthorizedError *shared.UnauthorizedError
}
