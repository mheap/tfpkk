// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"konnect/internal/sdk/pkg/models/shared"
	"net/http"
)

type GetRuntimeGroupRequest struct {
	// The runtime group ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// GetRuntimeGroupServiceUnavailableErrorStatus - The HTTP status code.
type GetRuntimeGroupServiceUnavailableErrorStatus int64

const (
	GetRuntimeGroupServiceUnavailableErrorStatusFiveHundredAndThree GetRuntimeGroupServiceUnavailableErrorStatus = 503
)

func (e GetRuntimeGroupServiceUnavailableErrorStatus) ToPointer() *GetRuntimeGroupServiceUnavailableErrorStatus {
	return &e
}

func (e *GetRuntimeGroupServiceUnavailableErrorStatus) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 503:
		*e = GetRuntimeGroupServiceUnavailableErrorStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRuntimeGroupServiceUnavailableErrorStatus: %v", v)
	}
}

// GetRuntimeGroupServiceUnavailableError - Error response for temporary service unavailability.
type GetRuntimeGroupServiceUnavailableError struct {
	// Details about the error.
	Detail *string `json:"detail,omitempty"`
	// The Konnect traceback code
	Instance string `json:"instance"`
	// The HTTP status code.
	Status GetRuntimeGroupServiceUnavailableErrorStatus `json:"status"`
	// The error response code.
	Title string `json:"title"`
}

type GetRuntimeGroupResponse struct {
	// Bad Request
	BadRequestError *shared.BadRequestError
	// HTTP response content type for this operation
	ContentType string
	// Permission denied
	ForbiddenError *shared.ForbiddenError
	// Not Found
	NotFoundError *shared.NotFoundError
	// A response to retrieving a single runtime group.
	RuntimeGroup *shared.RuntimeGroup
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Service Unavailable
	ServiceUnavailableError *GetRuntimeGroupServiceUnavailableError
	// Unauthenticated
	UnauthorizedError *shared.UnauthorizedError
}
