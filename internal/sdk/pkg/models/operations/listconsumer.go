// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListConsumerRequest struct {
	// Offset from which to return the next set of resources. Use the value of the 'offset' field from the response of a list operation as input here to paginate through all the resources
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// The ID of your runtime group. This variable is available in the Konnect manager
	RuntimeGroupID string `pathParam:"style=simple,explode=false,name=runtimeGroupId"`
	// Number of resources to be returned.
	Size *int64 `queryParam:"style=form,explode=true,name=size"`
	// A list of tags to filter the list of resources on. Multiple tags can be concatenated using ',' to mean AND or using '/' to mean OR.
	Tags *string `queryParam:"style=form,explode=true,name=tags"`
}

// ListConsumer200ApplicationJSON - New consumer created response
type ListConsumer200ApplicationJSON struct {
	// Unix epoch when the resource was created.
	//
	CreatedAt *int64 `json:"created_at,omitempty"`
	// Field for the unique consumer ID
	CustomID *string `json:"custom_id,omitempty"`
	// The unique id of the consumer.
	ID *string `json:"id,omitempty"`
	// An optional set of strings associated with the Consumer for grouping and filtering.
	Tags []string `json:"tags,omitempty"`
	// Unix epoch when the resource was updated.
	//
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// The unique username of the consumer.
	Username *string `json:"username,omitempty"`
}

type ListConsumerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// New consumer created response
	ListConsumer200ApplicationJSONObject *ListConsumer200ApplicationJSON
}
