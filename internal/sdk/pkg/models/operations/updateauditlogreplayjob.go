// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Konnect/internal/sdk/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// UpdateAuditLogReplayJobRequestBody - The request schema to replace an audit log replay job.
type UpdateAuditLogReplayJobRequestBody struct {
	// The end of a date-time range in RFC3339 format e.g. 2017-07-21T17:32:28Z.
	// Must be within the last 7 days.
	EndAt time.Time `json:"end_at"`
	// The start of a date-time range in RFC3339 format e.g. 2017-07-21T17:32:28Z.
	// Must be within the last 7 days.
	StartAt time.Time `json:"start_at"`
}

type UpdateAuditLogReplayJob202ApplicationJSONStatus string

const (
	UpdateAuditLogReplayJob202ApplicationJSONStatusUnconfigured UpdateAuditLogReplayJob202ApplicationJSONStatus = "unconfigured"
	UpdateAuditLogReplayJob202ApplicationJSONStatusAccepted     UpdateAuditLogReplayJob202ApplicationJSONStatus = "accepted"
	UpdateAuditLogReplayJob202ApplicationJSONStatusPending      UpdateAuditLogReplayJob202ApplicationJSONStatus = "pending"
	UpdateAuditLogReplayJob202ApplicationJSONStatusRunning      UpdateAuditLogReplayJob202ApplicationJSONStatus = "running"
	UpdateAuditLogReplayJob202ApplicationJSONStatusCompleted    UpdateAuditLogReplayJob202ApplicationJSONStatus = "completed"
	UpdateAuditLogReplayJob202ApplicationJSONStatusFailed       UpdateAuditLogReplayJob202ApplicationJSONStatus = "failed"
)

func (e UpdateAuditLogReplayJob202ApplicationJSONStatus) ToPointer() *UpdateAuditLogReplayJob202ApplicationJSONStatus {
	return &e
}

func (e *UpdateAuditLogReplayJob202ApplicationJSONStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unconfigured":
		fallthrough
	case "accepted":
		fallthrough
	case "pending":
		fallthrough
	case "running":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = UpdateAuditLogReplayJob202ApplicationJSONStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAuditLogReplayJob202ApplicationJSONStatus: %v", v)
	}
}

// UpdateAuditLogReplayJob202ApplicationJSON - Response from fetching or updating an audit log replay job
type UpdateAuditLogReplayJob202ApplicationJSON struct {
	// The end of a date-time range. Initial value is 0001-01-01T00:00:0Z.
	EndAt *time.Time `json:"end_at,omitempty"`
	// The start of a date-time range. Initial value is 0001-01-01T00:00:0Z.
	StartAt *time.Time                                       `json:"start_at,omitempty"`
	Status  *UpdateAuditLogReplayJob202ApplicationJSONStatus `json:"status,omitempty"`
	// Timestamp when this job was last updated. Initial value is 0001-01-01T00:00:0Z.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type UpdateAuditLogReplayJobResponse struct {
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Conflict
	ConflictError *shared.ConflictError
	ContentType   string
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	StatusCode     int
	RawResponse    *http.Response
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Response from fetching or updating an audit log replay job
	UpdateAuditLogReplayJob202ApplicationJSONObject *UpdateAuditLogReplayJob202ApplicationJSON
}
