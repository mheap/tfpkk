// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Konnect/internal/sdk/pkg/models/shared"
	"net/http"
)

// CreateSniForCertificateRequestBodyCertificate - The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object. With form-encoded, the notation is `certificate.id=<certificate id>`. With JSON, use `“certificate:{id:<certificate id>”}`.
type CreateSniForCertificateRequestBodyCertificate struct {
	// 91020192-062d-416f-a275-9addeeaffaf2
	ID string `json:"id"`
}

// CreateSniForCertificateRequestBody - A JSON object containing the details of the new SNI, including the name, certificate, and tags.
type CreateSniForCertificateRequestBody struct {
	// The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object. With form-encoded, the notation is `certificate.id=<certificate id>`. With JSON, use `“certificate:{id:<certificate id>”}`.
	Certificate CreateSniForCertificateRequestBodyCertificate `json:"certificate"`
	// The SNI name to associate with the given certificate.
	Name string `json:"name"`
	// An optional set of strings associated with the SNIs for grouping and filtering.
	//
	Tags []string `json:"tags,omitempty"`
}

type CreateSniForCertificateRequest struct {
	// A JSON object containing the details of the new SNI, including the name, certificate, and tags.
	RequestBody *CreateSniForCertificateRequestBody `request:"mediaType=application/json"`
	// The unique identifier or the `name` attribute of the Certificate whose SNIs are to be retrieved. When using this endpoint, only SNIs associated to the specified Certificate will be listed.
	CertificateNameOrID shared.CertificateNameOrID `pathParam:"style=simple,explode=false,name=certificate_name_or_id"`
	// The ID of your runtime group. This variable is available in the Konnect manager
	RuntimeGroupID string `pathParam:"style=simple,explode=false,name=runtimeGroupId"`
}

// CreateSniForCertificate400ApplicationJSON - Invalid SNI
type CreateSniForCertificate400ApplicationJSON struct {
}

type CreateSniForCertificateResponse struct {
	ContentType string
	// Successfully created SNI
	Sni         *shared.Sni
	StatusCode  int
	RawResponse *http.Response
	// Invalid SNI
	CreateSniForCertificate400ApplicationJSONObject *CreateSniForCertificate400ApplicationJSON
}
