// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Konnect/internal/sdk/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetAuditLogReplayJob200ApplicationJSONStatus string

const (
	GetAuditLogReplayJob200ApplicationJSONStatusUnconfigured GetAuditLogReplayJob200ApplicationJSONStatus = "unconfigured"
	GetAuditLogReplayJob200ApplicationJSONStatusAccepted     GetAuditLogReplayJob200ApplicationJSONStatus = "accepted"
	GetAuditLogReplayJob200ApplicationJSONStatusPending      GetAuditLogReplayJob200ApplicationJSONStatus = "pending"
	GetAuditLogReplayJob200ApplicationJSONStatusRunning      GetAuditLogReplayJob200ApplicationJSONStatus = "running"
	GetAuditLogReplayJob200ApplicationJSONStatusCompleted    GetAuditLogReplayJob200ApplicationJSONStatus = "completed"
	GetAuditLogReplayJob200ApplicationJSONStatusFailed       GetAuditLogReplayJob200ApplicationJSONStatus = "failed"
)

func (e GetAuditLogReplayJob200ApplicationJSONStatus) ToPointer() *GetAuditLogReplayJob200ApplicationJSONStatus {
	return &e
}

func (e *GetAuditLogReplayJob200ApplicationJSONStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unconfigured":
		fallthrough
	case "accepted":
		fallthrough
	case "pending":
		fallthrough
	case "running":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = GetAuditLogReplayJob200ApplicationJSONStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAuditLogReplayJob200ApplicationJSONStatus: %v", v)
	}
}

// GetAuditLogReplayJob200ApplicationJSON - Response from fetching or updating an audit log replay job
type GetAuditLogReplayJob200ApplicationJSON struct {
	// The end of a date-time range. Initial value is 0001-01-01T00:00:0Z.
	EndAt *time.Time `json:"end_at,omitempty"`
	// The start of a date-time range. Initial value is 0001-01-01T00:00:0Z.
	StartAt *time.Time                                    `json:"start_at,omitempty"`
	Status  *GetAuditLogReplayJob200ApplicationJSONStatus `json:"status,omitempty"`
	// Timestamp when this job was last updated. Initial value is 0001-01-01T00:00:0Z.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type GetAuditLogReplayJobResponse struct {
	ContentType string
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	StatusCode     int
	RawResponse    *http.Response
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Response from fetching or updating an audit log replay job
	GetAuditLogReplayJob200ApplicationJSONObject *GetAuditLogReplayJob200ApplicationJSON
}
