// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"konnect/internal/sdk/pkg/models/shared"
	"net/http"
)

type ListRuntimeGroupsRequest struct {
	// Filter by direct equality comparison (short-hand) of the cluster_type property with a supplied value.
	FilterClusterType *string `queryParam:"style=form,explode=true,name=filter[cluster_type]"`
	// Filter by direct equality comparison of the cluster_type property with a supplied value.
	FilterClusterTypeEq *string `queryParam:"style=form,explode=true,name=filter[cluster_type][eq]"`
	// Filter by non-equality comparison of the cluster_type property with a supplied value.
	FilterClusterTypeNeq *string `queryParam:"style=form,explode=true,name=filter[cluster_type][neq]"`
	// Filter by direct equality comparison (short-hand) of the id property with a supplied value.
	FilterID *string `queryParam:"style=form,explode=true,name=filter[id]"`
	// Filter by direct equality comparison of the id property with a supplied value.
	FilterIDEq *string `queryParam:"style=form,explode=true,name=filter[id][eq]"`
	// Filter by direct equality comparison (short-hand) of the name property with a supplied value.
	FilterName *string `queryParam:"style=form,explode=true,name=filter[name]"`
	// Filter by contains comparison of the name property with a supplied substring.
	FilterNameContains *string `queryParam:"style=form,explode=true,name=filter[name][contains]"`
	// Filter by direct equality comparison of the name property with a supplied value.
	FilterNameEq *string `queryParam:"style=form,explode=true,name=filter[name][eq]"`
	// Filter by non-equality comparison of the name property with a supplied value.
	FilterNameNeq *string `queryParam:"style=form,explode=true,name=filter[name][neq]"`
	// Filter runtime groups in the response by associated labels.
	Labels *string `queryParam:"style=form,explode=true,name=labels"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
}

// ListRuntimeGroupsServiceUnavailableErrorStatus - The HTTP status code.
type ListRuntimeGroupsServiceUnavailableErrorStatus int64

const (
	ListRuntimeGroupsServiceUnavailableErrorStatusFiveHundredAndThree ListRuntimeGroupsServiceUnavailableErrorStatus = 503
)

func (e ListRuntimeGroupsServiceUnavailableErrorStatus) ToPointer() *ListRuntimeGroupsServiceUnavailableErrorStatus {
	return &e
}

func (e *ListRuntimeGroupsServiceUnavailableErrorStatus) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 503:
		*e = ListRuntimeGroupsServiceUnavailableErrorStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRuntimeGroupsServiceUnavailableErrorStatus: %v", v)
	}
}

// ListRuntimeGroupsServiceUnavailableError - Error response for temporary service unavailability.
type ListRuntimeGroupsServiceUnavailableError struct {
	// Details about the error.
	Detail *string `json:"detail,omitempty"`
	// The Konnect traceback code
	Instance string `json:"instance"`
	// The HTTP status code.
	Status ListRuntimeGroupsServiceUnavailableErrorStatus `json:"status"`
	// The error response code.
	Title string `json:"title"`
}

// ListRuntimeGroupsListRuntimeGroupsResponse - A paginated list response for a collection of runtime groups.
type ListRuntimeGroupsListRuntimeGroupsResponse struct {
	Data []shared.RuntimeGroup `json:"data"`
	// returns the pagination information
	Meta shared.PaginatedMeta `json:"meta"`
}

type ListRuntimeGroupsResponse struct {
	// Bad Request
	BadRequestError *shared.BadRequestError
	ContentType     string
	// Permission denied
	ForbiddenError *shared.ForbiddenError
	// A paginated list response for a collection of runtime groups.
	ListRuntimeGroupsResponse *ListRuntimeGroupsListRuntimeGroupsResponse
	StatusCode                int
	RawResponse               *http.Response
	// Service Unavailable
	ServiceUnavailableError *ListRuntimeGroupsServiceUnavailableError
	// Unauthenticated
	UnauthorizedError *shared.UnauthorizedError
}
