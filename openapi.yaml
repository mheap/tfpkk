openapi: 3.0.3
info:
  title: Konnect API
  version: 2.0.0
  description: The Konnect platform API
  contact:
    name: Kong
    url: https://cloud.konghq.com
    email: support@konghq.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://global.api.konghq.com/v2
  - url: https://us.api.konghq.com/v2
  - url: https://eu.api.konghq.com/v2
    description: Production
security:
  - personalAccessToken: []
  - systemAccountAccessToken: []
  - konnectAccessToken: []
tags:
  - name: Custom Reports
  - name: API Products
  - name: API Product Documentation
  - name: API Product Versions
  - name: API Product Version Specification
  - name: Audit Logs
  - name: Auth Settings
  - name: Invites
  - name: Roles
  - name: Team Membership
  - name: Teams
  - name: Users
  - name: System Accounts
  - name: System Accounts - Access Tokens
  - name: System Accounts - Roles
  - name: System Accounts - Team Membership
  - name: Me
  - name: Managed System Accounts - Roles
  - name: Portal Teams
  - name: Portal Team Membership
  - name: Portal Team Roles
  - name: Portal Roles
  - name: Portal Developers
  - name: Portal Auth Settings
  - description: Gateway services
    name: Services
  - description: Gateway routes
    name: Routes
  - description: Plugins
    name: Plugins
  - description: Consumers
    name: Consumers
  - description: Consumer Groups
    name: consumer-groups
  - description: Certificates
    name: Certificates
  - description: SNIs
    name: SNIs
  - description: CA certificates
    name: CA Certificates
  - description: Upstreams
    name: Upstreams
  - description: Vaults
    name: Vaults
  - description: Keys
    name: Keys
  - description: Key-sets
    name: Key-sets
  - description: Information routes
    name: Information
  - description: Debug routes
    name: Debug
  - description: Target routes
    name: Targets
  - description: Tag rotues
    name: Tags
  - description: DP Nodes
    name: DP Nodes
  - description: DP Certificates
    name: DP Certificates
  - name: Runtime Groups
  - name: Composite Runtime Groups
paths:
  /accept-invite:
    post:
      summary: Accept Invite
      description: >-
        Accepts the Konnect invitation. This endpoint allows you to manually
        accept the invitation to join a Konnect organization. Upon accepting the
        invitation, the user's name and password are set and the active state is
        set to true. This can be used as an alternative to the
        https://cloud.konghq.com/login link in the email which will finish the
        registration process in a web browser.
      operationId: accept-invite
      requestBody:
        $ref: '#/components/requestBodies/AcceptInvite'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      tags:
        - Invites
  /api-products:
    post:
      summary: Create API Product
      description: >
        An API Product packages together associated APIs and their operations,
        backed by thorough documentation,

        with the objective of making API consumption straightforward for
        developers.
      operationId: create-api-product
      responses:
        '201':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductRequest'
    get:
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/APIProductFilters'
        - $ref: '#/components/parameters/APIProductSort'
        - $ref: '#/components/parameters/LabelsFilter'
      summary: List API Products
      description: Returns a collection of API products.
      operationId: get-many-api-product
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                InvalidSortQueryBadRequestExample:
                  $ref: '#/components/examples/InvalidSortQueryNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
  /api-products/{apiProductId}/documents:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
    post:
      summary: Create API Product Document
      description: Creates a document for an API product.
      operationId: create-api-product-document
      responses:
        '201':
          $ref: '#/components/responses/APIProductDocumentResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductDocumentBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/SlugConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductDocumentRequest'
      tags:
        - API Product Documentation
    get:
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      summary: List API Product Documents
      description: Returns a collection of all documents for an API product.
      operationId: get-many-api-product-document
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductDocumentResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                InvalidSortQueryBadRequestExample:
                  $ref: '#/components/examples/InvalidSortQueryBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Documentation
  /api-products/{apiProductId}/documents/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
        name: id
        description: The document identifier related to the API product
        in: path
        required: true
    get:
      summary: Fetch API Product Document
      description: Returns a document for the API product.
      operationId: get-api-product-document
      responses:
        '200':
          $ref: '#/components/responses/APIProductDocumentResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Documentation
    patch:
      summary: Update an API Product Document
      description: Updates a document for an API product.
      operationId: update-api-product-document
      responses:
        '200':
          $ref: '#/components/responses/APIProductDocumentResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductDocumentBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/SlugConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Documentation
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductDocumentRequest'
    delete:
      summary: Delete API Product Documentation
      description: Removes a document from an API product.
      operationId: delete-api-product-document
      responses:
        '204':
          description: Document for the API product was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Documentation
  /api-products/{apiProductId}/product-versions:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API Product ID
        in: path
        required: true
    post:
      summary: Create API Product Version
      description: Creates a version of an API product.
      operationId: create-api-product-version
      responses:
        '201':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductVersionRequest'
    get:
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/APIProductVersionFilters'
        - $ref: '#/components/parameters/APIProductVersionSort'
      summary: List API Product Versions
      description: Returns a collection of all versions for an API product.
      operationId: get-many-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                InvalidSortQueryBadRequestExample:
                  $ref: '#/components/examples/InvalidSortQueryNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
  /api-products/{apiProductId}/product-versions/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: id
        description: The API product version identifier
        in: path
        required: true
    get:
      summary: Fetch API Product Version
      description: Returns a version of an API product.
      operationId: get-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
    patch:
      summary: Update an API Product Version
      description: Updates an API product version.
      operationId: update-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductVersionRequest'
    delete:
      summary: Delete API Product Version
      description: Removes an API product version.
      operationId: delete-api-product-version
      responses:
        '204':
          description: API product version was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
  /api-products/{apiProductId}/product-versions/{productVersionId}/specifications:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: productVersionId
        description: The API product version identifier
        in: path
        required: true
    post:
      summary: Create API Product Version Specification
      description: |
        Creates a specification for a version of an API product.
        **Note:** You can only have one specification for a product version.
      operationId: create-api-product-version-spec
      responses:
        '201':
          $ref: '#/components/responses/APIProductVersionSpecResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionSpecContentBadRequestExample:
                  $ref: >-
                    #/components/examples/APIProductVersionSpecContentBadRequestExample
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/VersionSpecConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Version Specification
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductVersionSpecRequest'
    get:
      summary: Fetch API Product Version Specifications
      description: |
        Returns a list of specification for the version of an API product.
        **Note:** You can only have one specification for a product version.
      operationId: get-many-api-product-version-spec
      responses:
        '200':
          $ref: '#/components/responses/ListAPIProductVersionSpecResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Version Specification
  /api-products/{apiProductId}/product-versions/{productVersionId}/specifications/{specificationId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: productVersionId
        description: The API product version identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 742ff9f1-fb89-4aeb-a599-f0e278c7aeaa
        name: specificationId
        description: The API product version specification identifier
        in: path
        required: true
    get:
      summary: Fetch API Product Version Specification
      description: Returns a specification for the version of an API product.
      operationId: get-api-product-version-spec
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionSpecResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Version Specification
    patch:
      summary: Update an API Product Version Specification
      description: Updates a specification from an API product version.
      operationId: update-api-product-version-spec
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionSpecResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductVersionSpecContentBadRequestExample:
                  $ref: >-
                    #/components/examples/APIProductVersionSpecContentBadRequestExample
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '409':
          $ref: '#/components/responses/VersionSpecHiddenConflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Version Specification
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductVersionSpecRequest'
    delete:
      summary: Delete API Product Version Specification
      description: Removes a specification from a verion of an API product.
      operationId: delete-api-product-version-spec
      responses:
        '204':
          description: >-
            Specification for the version of an API product was deleted
            successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Version Specification
  /api-products/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: id
        in: path
        required: true
        description: API product identifier
    get:
      summary: Fetch API product
      description: Returns an API product.
      operationId: get-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
    patch:
      summary: Update an individual API product
      description: Updates an API product.
      operationId: update-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                APIProductNameBadRequestExample:
                  $ref: '#/components/examples/APIProductNameBadRequestExample'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductRequest'
    delete:
      summary: Delete API Product
      description: Removes an individual API product.
      operationId: delete-api-product
      responses:
        '204':
          description: API product was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
  /audit-log-replay-job:
    put:
      summary: Update Audit Log Replay Job
      description: Updates a job to re-send audit logs to an organization's webhook.
      operationId: update-audit-log-replay-job
      requestBody:
        $ref: '#/components/requestBodies/ReplaceAuditLogReplayJob'
      tags:
        - Audit Logs
      responses:
        '202':
          $ref: '#/components/responses/AuditLogReplayJob'
        '400':
          $ref: '#/components/responses/ReplayJobBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/ReplayJobConflict'
    get:
      summary: Get Audit Log Replay Job
      description: Returns the audit log replay job's configuration and status.
      operationId: get-audit-log-replay-job
      tags:
        - Audit Logs
      responses:
        '200':
          $ref: '#/components/responses/AuditLogReplayJob'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /audit-log-webhook:
    patch:
      summary: Update Audit Log Webhook
      description: Updates the configuration for a webhook to receive audit logs.
      operationId: update-audit-log-webhook
      requestBody:
        $ref: '#/components/requestBodies/UpdateAuditLogWebhook'
      tags:
        - Audit Logs
      responses:
        '200':
          $ref: '#/components/responses/AuditLogWebhook'
        '400':
          $ref: '#/components/responses/WebhookBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      summary: Get Audit Log Webhook
      description: Returns configuration for the audit log webhook.
      operationId: get-audit-log-webhook
      tags:
        - Audit Logs
      responses:
        '200':
          $ref: '#/components/responses/AuditLogWebhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /audit-log-webhook/jwks.json:
    get:
      operationId: get-audit-log-jwks
      summary: Get Audit Log JSON Web Keys
      description: >-
        Returns the public keys used to sign audit log entries in order to
        verify the validity of audit log entries.
      tags:
        - Audit Logs
      responses:
        '200':
          $ref: '#/components/responses/JWKS'
  /audit-log-webhook/status:
    get:
      summary: Get Audit Log Webhook Status
      description: Returns status of the audit log webhook.
      operationId: get-audit-log-webhook-status
      tags:
        - Audit Logs
      responses:
        '200':
          $ref: '#/components/responses/AuditLogWebhookStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /authentication-settings:
    get:
      summary: Get Auth Settings
      description: >-
        Returns authentication configuration, which determines how users can log
        in and how they are assigned to teams.
      operationId: get-authentication-settings
      tags:
        - Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/AuthenticationSettings'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
    patch:
      summary: Update Auth Settings
      description: Updates authentication configuration.
      operationId: update-authentication-settings
      requestBody:
        $ref: '#/components/requestBodies/UpdateAuthenticationSettings'
      tags:
        - Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/AuthenticationSettings'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
  /identity-provider:
    get:
      summary: Fetch IdP Configuration
      operationId: get-idp-configuration
      responses:
        '200':
          $ref: '#/components/responses/IdPConfiguration'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      tags:
        - Auth Settings
      description: Fetch the IdP configuration.
    parameters: []
    patch:
      summary: Update IdP Configuration
      operationId: update-idp-configuration
      responses:
        '200':
          $ref: '#/components/responses/IdPConfiguration'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
      description: Update the IdP configuration.
      requestBody:
        $ref: '#/components/requestBodies/UpdateIdPConfiguration'
      tags:
        - Auth Settings
  /identity-provider/team-group-mappings:
    get:
      summary: Fetch Team Group Mappings
      operationId: get-team-group-mappings
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          $ref: '#/components/responses/TeamGroupMappingCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
      tags:
        - Auth Settings
      description: >-
        Retrieves the mappings between Konnect Teams and Identity Provider
        Groups.

        Returns a 400 error if an Identity Provider has not yet been configured.
    patch:
      summary: Patch Mappings by Team ID
      operationId: patch-team-group-mappings
      responses:
        '200':
          $ref: '#/components/responses/TeamGroupMappingCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
      tags:
        - Auth Settings
      description: >-
        Allows partial updates to the mappings between Konnect Teams and
        Identity Provider Groups.

        The request body must be keyed on team ID. For a given team ID, the
        given group list is a

        complete replacement. To remove all mappings for a given team, provide
        an empty group list.


        Returns a 400 error if an Identity Provider has not yet been configured,
        or if a team ID in

        the request body is not found or is not a UUID.
      requestBody:
        $ref: '#/components/requestBodies/PatchTeamGroupMappings'
  /identity-provider/team-mappings:
    put:
      summary: Update Team Mappings
      operationId: update-idp-team-mappings
      responses:
        '200':
          $ref: '#/components/responses/TeamMappingCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
      tags:
        - Auth Settings
      description: Updates the IdP group to Konnect team mapping.
      requestBody:
        $ref: '#/components/requestBodies/UpdateTeamMappings'
    get:
      summary: Fetch Team Mapping
      operationId: get-idp-team-mappings
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          $ref: '#/components/responses/TeamMappingResponse'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
      tags:
        - Auth Settings
      description: Fetch the IdP group to Konnect team mapping.
  /invites:
    post:
      summary: Invite User
      description: >-
        Sends an invitation email to invite a user to the Konnect organization.
        The email contains a link with a one time token to accept the
        invitation. Upon accepting the invitation, the user is directed to
        https://cloud.konghq.com/login to complete registration.
      operationId: invite-user
      requestBody:
        $ref: '#/components/requestBodies/InviteUser'
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '409':
          $ref: '#/components/responses/IdentityConflict'
        '429':
          $ref: '#/components/responses/RateLimited'
      tags:
        - Invites
  /portal-roles:
    get:
      summary: List Portal Roles
      responses:
        '200':
          $ref: '#/components/responses/RolesDocument'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      operationId: list-portal-roles
      description: List roles that can be assigned to teams in a portal.
      tags:
        - Portal Roles
  /portals/{portalId}/authentication-settings:
    parameters:
      - $ref: '#/components/parameters/PortalId'
    get:
      x-unstable: true
      summary: Get Auth Settings
      description: >-
        **Pre-release Endpoint**

        This endpoint is currently in beta and is subject to change.


        Returns authentication configuration, which determines how users can log
        in and how they are assigned to teams.
      operationId: get-portal-authentication-settings
      tags:
        - Portal Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/PortalAuthenticationSettings'
        '401':
          $ref: '#/components/responses/Unauthorized'
    patch:
      x-unstable: true
      summary: Update Auth Settings
      description: |-
        **Pre-release Endpoint**
        This endpoint is currently in beta and is subject to change.

        Updates authentication configuration.
      operationId: update-portal-authentication-settings
      requestBody:
        $ref: '#/components/requestBodies/UpdatePortalAuthenticationSettings'
      tags:
        - Portal Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/PortalAuthenticationSettings'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /portals/{portalId}/developers:
    parameters:
      - $ref: '#/components/parameters/PortalId'
    get:
      summary: List Developers
      tags:
        - Portal Developers
      responses:
        '200':
          $ref: '#/components/responses/DeveloperCollection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: list-portal-developers
      description: List the developers.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
  /portals/{portalId}/developers/{developerId}/teams:
    parameters:
      - $ref: '#/components/parameters/DeveloperId'
      - $ref: '#/components/parameters/PortalId'
    get:
      summary: List Developer Teams
      responses:
        '200':
          $ref: '#/components/responses/PortalTeamCollection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: list-portal-developer-teams
      description: List the teams to which a developer belongs.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      tags:
        - Portal Team Membership
  /portals/{portalId}/identity-provider/team-group-mappings:
    parameters:
      - $ref: '#/components/parameters/PortalId'
    get:
      x-unstable: true
      summary: Fetch Team Group Mappings
      operationId: get-portal-team-group-mappings
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          $ref: '#/components/responses/PortalTeamGroupMappingCollection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Portal Auth Settings
      description: >-
        **Pre-release Endpoint**

        This endpoint is currently in beta and is subject to change.


        Retrieves the mappings between Konnect Portal Teams and Identity
        Provider Groups.

        Returns a 400 error if an Identity Provider has not yet been configured.
    patch:
      x-unstable: true
      summary: Patch Mappings by Team ID
      operationId: patch-portal-team-group-mappings
      responses:
        '200':
          $ref: '#/components/responses/PortalTeamGroupMappingCollection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Portal Auth Settings
      description: >-
        **Pre-release Endpoint**

        This endpoint is currently in beta and is subject to change.


        Allows partial updates to the mappings between Konnect Portal Teams and
        Identity Provider Groups.

        The request body must be keyed on team ID. For a given team ID, the
        given group list is a

        complete replacement. To remove all mappings for a given team, provide
        an empty group list.


        Returns a 400 error if an Identity Provider has not yet been configured,
        or if a team ID in

        the request body is not found or is not a UUID.
      requestBody:
        $ref: '#/components/requestBodies/PatchPortalTeamGroupMappings'
  /portals/{portalId}/teams:
    parameters:
      - $ref: '#/components/parameters/PortalId'
    get:
      summary: List Teams
      responses:
        '200':
          $ref: '#/components/responses/PortalTeamCollection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: list-portal-teams
      description: List the teams.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter teams returned in the response.
          required: false
      tags:
        - Portal Teams
    post:
      summary: Create Team
      operationId: create-portal-team
      responses:
        '201':
          $ref: '#/components/responses/PortalTeamSingle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Teams
      requestBody:
        $ref: '#/components/requestBodies/PortalCreateTeam'
      description: Create a team.
  /portals/{portalId}/teams/{teamId}:
    parameters:
      - $ref: '#/components/parameters/TeamId'
      - $ref: '#/components/parameters/PortalId'
    get:
      summary: Get Team
      responses:
        '200':
          $ref: '#/components/responses/PortalTeamSingle'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-portal-team
      description: Get an individual team.
      tags:
        - Portal Teams
    patch:
      summary: Update Team
      operationId: update-portal-team
      responses:
        '200':
          $ref: '#/components/responses/PortalTeamSingle'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      description: Update an individual team.
      requestBody:
        $ref: '#/components/requestBodies/PortalUpdateTeam'
      tags:
        - Portal Teams
    delete:
      summary: Delete Team
      operationId: delete-portal-team
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      description: >-
        Deleting a team also deletes its assigned roles. Members of the team are
        not deleted.
      tags:
        - Portal Teams
  /portals/{portalId}/teams/{teamId}/assigned-roles:
    parameters:
      - $ref: '#/components/parameters/PortalId'
      - $ref: '#/components/parameters/TeamId'
    get:
      summary: List Team Roles
      tags:
        - Portal Team Roles
      responses:
        '200':
          $ref: '#/components/responses/AssignedPortalRoleCollection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: list-portal-team-roles
      description: List the roles belonging to a team.
    post:
      summary: Assign Role
      operationId: portal-teams-assign-role
      responses:
        '201':
          $ref: '#/components/responses/PortalAssignedRoleResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      description: Assign a role to a team.
      requestBody:
        $ref: '#/components/requestBodies/PortalAssignRole'
      tags:
        - Portal Team Roles
  /portals/{portalId}/teams/{teamId}/assigned-roles/{roleId}:
    parameters:
      - $ref: '#/components/parameters/RoleId'
      - $ref: '#/components/parameters/PortalId'
      - $ref: '#/components/parameters/TeamId'
    delete:
      summary: Remove Role
      operationId: portal-teams-remove-role
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Team Roles
      description: Remove an assigned role from a team.
  /portals/{portalId}/teams/{teamId}/developers:
    parameters:
      - $ref: '#/components/parameters/PortalId'
      - $ref: '#/components/parameters/TeamId'
    get:
      summary: List Team Developers
      responses:
        '200':
          $ref: '#/components/responses/DeveloperCollection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: list-portal-team-developers
      description: List a team's developers.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      tags:
        - Portal Team Membership
    post:
      summary: Add Developer
      operationId: add-developer-to-portal-team
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      description: Add a developer to a team.
      requestBody:
        $ref: '#/components/requestBodies/AddDeveloperToTeam'
      tags:
        - Portal Team Membership
  /portals/{portalId}/teams/{teamId}/developers/{developerId}:
    parameters:
      - $ref: '#/components/parameters/PortalId'
      - $ref: '#/components/parameters/DeveloperId'
      - $ref: '#/components/parameters/TeamId'
    delete:
      summary: Remove Developer from Team
      operationId: remove-developer-from-portal-team
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      description: Remove a developer from a team.
      tags:
        - Portal Team Membership
  /reports:
    get:
      summary: List Custom Reports
      responses:
        '200':
          $ref: '#/components/responses/ReportCollection'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      operationId: get-reports
      tags:
        - Custom Reports
      description: Returns a list of custom reports.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
    post:
      summary: New Custom Report
      tags:
        - Custom Reports
      description: Creates a new custom report.
      operationId: create-report
      requestBody:
        $ref: '#/components/requestBodies/CreateReport'
      responses:
        '201':
          $ref: '#/components/responses/ReportSingle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /reports/{reportId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: reportId
        in: path
        required: true
        description: The report's ID
    get:
      summary: Fetch Custom Report
      operationId: get-report
      tags:
        - Custom Reports
      description: Returns a single report.
      responses:
        '200':
          $ref: '#/components/responses/ReportSingle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      summary: Update Report
      operationId: update-report
      responses:
        '200':
          $ref: '#/components/responses/ReportSingle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      description: Updates a custom report.
      requestBody:
        $ref: '#/components/requestBodies/UpdateReport'
      tags:
        - Custom Reports
    delete:
      summary: Delete Custom Report
      operationId: delete-report
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      description: Deletes a custom report. Returns 404 if the report is not found.
      tags:
        - Custom Reports
  /reports/{reportId}/export:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: reportId
        in: path
        required: true
        description: The ID of the report to export
      - schema:
          type: string
          example: Etc/UTC
        name: tz
        in: query
        description: >
          The timezone to use for the report.  This impacts several things:


          - The timestamps returned, if time is a dimension.

          - Day boundaries for reports, meaning that if the report implicitly
          has a granularity of DAILY or higher, the same query may return
          different data depending on the timezone selected.
      - schema:
          type: boolean
        name: utc_format
        in: query
        description: >
          If true, export timestamps in "programmer friendly" format (ISO-8601,
          UTC timezone).

          If false, export in "spreadsheet friendly" format (local time without
          timezone specifier).


          Note: this does NOT impact the timezone of the report, merely the
          format of the time column if one is present.
    post:
      summary: Export as CSV
      tags:
        - Custom Reports
      description: Exports report data in CSV format.
      operationId: export-csv
      responses:
        '200':
          description: Report exported successfully
          content:
            text/csv:
              schema:
                type: string
              examples:
                timeseries:
                  value: |
                    TIMESTAMP,UTC_OFFSET,API_PRODUCT,TOTAL_REQUESTS
                    2023-01-01 00:00:00,-04:00,ProductA,2497079
                    2023-01-01 00:00:00,-04:00,ProductB,2029907
                non-timeseries:
                  value: |
                    API_PRODUCT,TOTAL_REQUESTS
                    ProductA,21007
                    ProductB,16233
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /roles:
    get:
      summary: Get Predefined Roles
      description: Retrieves the predefined, or system managed, roles.
      operationId: get-predefined-roles
      responses:
        '200':
          $ref: '#/components/responses/Roles'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
      tags:
        - Roles
  /runtime-groups:
    get:
      summary: List Runtime Groups
      responses:
        '200':
          $ref: '#/components/responses/ListRuntimeGroupsResponse'
        '400':
          $ref: '#/components/responses/RuntimeGroupsBadRequest'
        '401':
          $ref: '#/components/responses/RuntimeGroupUnauthenticated'
        '403':
          $ref: '#/components/responses/RuntimeGroupPermissionDenied'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      operationId: list-runtime-groups
      description: >-
        Returns an array of runtime groups objects containing information about
        the Konnect Runtime Groups.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
        - $ref: '#/components/parameters/FilterByNameNotEquals'
        - $ref: '#/components/parameters/FilterByIdEquality'
        - $ref: '#/components/parameters/FilterByIdEqualityShort'
        - $ref: '#/components/parameters/FilterByClusterTypeEquality'
        - $ref: '#/components/parameters/FilterByClusterTypeEqualityShort'
        - $ref: '#/components/parameters/FilterByClusterTypeNotEquals'
        - $ref: '#/components/parameters/FilterByLabels'
      tags:
        - Runtime Groups
    parameters: []
    post:
      summary: Create Runtime Group
      operationId: create-runtime-group
      x-speakeasy-entity-operation: RuntimeGroup#create
      responses:
        '201':
          $ref: '#/components/responses/CreateRuntimeGroupResponse'
        '400':
          $ref: '#/components/responses/RuntimeGroupsBadRequest'
        '401':
          $ref: '#/components/responses/RuntimeGroupUnauthenticated'
        '403':
          $ref: '#/components/responses/RuntimeGroupPermissionDenied'
        '409':
          $ref: '#/components/responses/RuntimeGroupConflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      tags:
        - Runtime Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRuntimeGroupRequest'
            examples:
              Example Request Body:
                $ref: '#/components/examples/CreateRuntimeGroupRequestExample'
      description: Create a runtime group in the Konnect Organization.
  /runtime-groups/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: id
        in: path
        required: true
        description: The runtime group ID
    get:
      summary: Fetch Runtime Group
      x-speakeasy-entity-operation: RuntimeGroup#read
      responses:
        '200':
          $ref: '#/components/responses/RetrieveRuntimeGroupResponse'
        '400':
          $ref: '#/components/responses/RuntimeGroupsBadRequest'
        '401':
          $ref: '#/components/responses/RuntimeGroupUnauthenticated'
        '403':
          $ref: '#/components/responses/RuntimeGroupPermissionDenied'
        '404':
          $ref: '#/components/responses/RuntimeGroupNotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      operationId: get-runtime-group
      description: Returns information about a team from a given team ID.
      tags:
        - Runtime Groups
    patch:
      summary: Update Runtime Group
      operationId: update-runtime-group
      x-speakeasy-entity-operation: RuntimeGroup#update
      responses:
        '200':
          $ref: '#/components/responses/UpdateRuntimeGroupResponse'
        '400':
          $ref: '#/components/responses/RuntimeGroupsBadRequest'
        '401':
          $ref: '#/components/responses/RuntimeGroupUnauthenticated'
        '403':
          $ref: '#/components/responses/RuntimeGroupPermissionDenied'
        '404':
          $ref: '#/components/responses/RuntimeGroupNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      description: Update an individual runtime group.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuntimeGroupRequest'
            examples:
              Example Request Body:
                $ref: '#/components/examples/UpdateRuntimeGroupRequestExample'
      tags:
        - Runtime Groups
    delete:
      summary: Delete Runtime Group
      operationId: delete-runtime-group
      x-speakeasy-entity-operation: RuntimeGroup#delete
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/RuntimeGroupsBadRequest'
        '401':
          $ref: '#/components/responses/RuntimeGroupUnauthenticated'
        '403':
          $ref: '#/components/responses/RuntimeGroupPermissionDenied'
        '404':
          $ref: '#/components/responses/RuntimeGroupNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      description: Delete an individual runtime group.
      tags:
        - Runtime Groups
  /runtime-groups/{id}/composite-memberships:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a composite runtime group
    get:
      summary: List Composite RG Memberships
      tags:
        - Composite Runtime Groups
      responses:
        '200':
          $ref: '#/components/responses/ListCompositeMemberships'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      operationId: get-runtime-groups-id-composite-memberships
      description: >-
        Returns an array of runtime groups that are a member of this composite
        runtime group.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
  /runtime-groups/{id}/composite-memberships/add:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a composite runtime group
    post:
      summary: Add Composite RG Members
      operationId: post-runtime-groups-id-composite-memberships-add
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      requestBody:
        $ref: '#/components/requestBodies/CompositeMemebershipAdd'
      tags:
        - Composite Runtime Groups
      description: >-
        Adds one or more runtime groups as a member of a composite runtime
        group.
  /runtime-groups/{id}/composite-memberships/remove:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a composite runtime group
    post:
      summary: Remove Composite RG Members
      operationId: post-runtime-groups-id-composite-memberships-remove
      requestBody:
        $ref: '#/components/requestBodies/CompositeMembershipRemove'
      tags:
        - Composite Runtime Groups
      description: >-
        Removes one or more runtime groups from the members of a composite
        runtime group.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /runtime-groups/{id}/composite-status:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a composite runtime group
    get:
      summary: Get Composite RG Status
      tags:
        - Composite Runtime Groups
      responses:
        '200':
          $ref: '#/components/responses/GetCompositeStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      operationId: get-runtime-groups-id-composite-status
      description: >-
        Returns the status of a composite runtime group, including existing
        conflicts.
  /runtime-groups/{runtimeGroupId}/core-entities/ca_certificates:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
    get:
      description: >-
        Retrieve a list of all available Certificate Authority (CA)
        certificates, including the certificate ID, creation date, and other
        details. You can use query parameters to filter the results by size or
        tags, for example `/ca-certificates?size=50&tags=enterprise`.
      operationId: list-ca_certificate
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CA-Certificate'
          description: A successful response listing CA Certificates
      summary: List all CA certificates
      tags:
        - CA Certificates
    post:
      description: >-
        Create a new Certificate Authority (CA) certificate. The request body
        must include the `cert` property, the certificate data in PEM format; it
        can also include `cert_digest`, a digest of the certificate in hex
        format for verifying the certificates integrity, and `tags`, an optional
        list of tags to categorize the certificate. 
      operationId: create-ca_certificate
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CA-Certificate'
          description: The created certificate object.
        '400':
          description: Invalid CA certificate
      summary: Create a new CA certificate
      tags:
        - CA Certificates
      requestBody:
        $ref: '#/components/requestBodies/CA-cert-request'
  /runtime-groups/{runtimeGroupId}/core-entities/ca_certificates/{ca_certificate_id}:
    delete:
      description: >-
        Delete the specified Certificate Authority (CA) certificate using the
        provided ca_certificate_id.
      operationId: delete-ca_certificate
      responses:
        '204':
          description: Successfully deleted CA Certificate or the resource didn't exist
      summary: Delete a CA Certificate
      tags:
        - CA Certificates
    get:
      description: >-
        Retrieve details about the specified Certificate Authority (CA)
        certificate using the provided path parameter `ca_certificate_id`.
      operationId: get-ca_certificate
      parameters:
        - description: The unique identifier of the certificate to retrieve.
          in: path
          name: ca_certificate_id
          required: true
          schema:
            type: string
          examples:
            example:
              summary: Example CA certificate ID
              value: 04fbeacf-a9f1-4a5d-ae4a-b0407445db3f
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CA-Certificate'
          description: >-
            The specified CA certificate exists in the system, and the response
            includes details about the certificate.
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    code: 5
                    message: not found
                properties:
                  code:
                    type: integer
                    description: Error code
                    example: 5
                  message:
                    type: string
                    description: A message describing the error message.
                    example: not found
              examples:
                404 Not Found:
                  value:
                    code: 5
                    message: not found
      summary: Fetch a CA certificate
      tags:
        - CA Certificates
    put:
      description: >-
        Create or Update a CA Certificate using the provided path parameter
        `ca_certificate_id`.
      operationId: updatet-ca_certificate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CA-Certificate'
          description: Successfully upserted CA Certificate
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid CA Certificate
      summary: Update a CA Certificate
      tags:
        - CA Certificates
      requestBody:
        $ref: '#/components/requestBodies/CA-cert-request'
    parameters:
      - $ref: '#/components/parameters/ca_certificate_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/certificates:
    get:
      description: >-
        Retrieve a list of all available certificate/ You can use query
        parameters to filter the results by size or tags, for example
        `/certificates?size=50&tags=enterprise`.
      operationId: list-certificate
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/certificate_response'
      summary: List all certificates
      tags:
        - Certificates
    post:
      description: >-
        Create a new certificate with the provided details. Use this endpoint to
        add a new certificate to the system. The request body must include the
        certificate data and other details required for creating a new
        certificate.
      operationId: create-certificate
      responses:
        '200':
          $ref: '#/components/responses/certificate_response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Certificate
      summary: Create a new Certificate
      tags:
        - Certificates
      requestBody:
        $ref: '#/components/requestBodies/cert-request'
    parameters:
      - name: runtimeGroupId
        in: path
        required: true
        schema:
          type: string
          example: 9524ec7d-36d9-465d-a8c5-83a3c9390458
        description: >-
          The ID of your runtime group. This variable is available in the
          Konnect manager
  /runtime-groups/{runtimeGroupId}/core-entities/certificates/{certificate_id}:
    delete:
      description: |
        Delete a Certificate
      operationId: delete-certificate
      parameters:
        - description: ID of the Certificate to delete
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted Certificate or the resource didn't exist
      summary: Delete a Certificate
      tags:
        - Certificates
    get:
      description: >-
        Retrieve details about the specified certificate using the provided path
        parameter `certificate_id`.
      operationId: get-certificate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: HTTP 200 OK
        '404':
          description: Resource does not exist
      summary: Fetch a Certificate
      tags:
        - Certificates
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
        - $ref: '#/components/parameters/pagination-size'
    put:
      description: >
        Update details about the specified certificate using the provided path
        parameter `certificate_id`.


        Inserts (or replaces) the certificate under the requested
        `certificate_id`with the definition specified in the request body. When
        the `id` attribute has the structure of a UUID, the certificate being
        inserted/replaced will be identified by its `id`. Otherwise it will be
        identified by the `name`.


        When creating a new Certificate without specifying `id` (neither in the
        path or the request body), then it will be auto-generated.
      operationId: update-certificate-put
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully upserted Certificate
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Certificate
      summary: Update a Certificate
      tags:
        - Certificates
      requestBody:
        $ref: '#/components/requestBodies/cert-request'
    parameters:
      - name: certificate_id
        in: path
        required: true
        schema:
          type: string
          example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
        description: The unique identifier of the Certificate to retrieve.
      - name: runtimeGroupId
        in: path
        required: true
        schema:
          type: string
          example: 9524ec7d-36d9-465d-a8c5-83a3c9390458
        description: >-
          The ID of your runtime group. This variable is available in the
          Konnect manager
  /runtime-groups/{runtimeGroupId}/core-entities/certificates/{certificate_id}/snis/{sni_id}:
    delete:
      description: Delete a an SNI associated with a a Certificate using an ID.
      responses:
        '204':
          description: Successfully deleted SNI or the resource didn't exist
      summary: Delete a an SNI associated with a Certificate
      tags:
        - SNIs
      operationId: delete-sni-for-certificate
    get:
      description: Get an SNI associated with a Certificate using ID or name.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNI'
          description: Successfully fetched SNI
        '404':
          description: Resource does not exist
      summary: Fetch an SNI associated with a certificate
      tags:
        - SNIs
      operationId: fetch-sni-with-certificate
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: >-
        Create or Update an SNI associated with a Certificate using ID or name.


        Inserts (or replaces) the SNI under the requested resource with the
        definition specified in the body. The SNI will be identified by the id
        attribute.


        When the name or id attribute has the structure of a UUID, the SNI being
        inserted/replaced will be identified by its id. Otherwise it will be
        identified by its name.


        When creating a new SNI without specifying id (neither in the URL nor in
        the body), then it will be auto-generated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNI'
        description: Description of the SNI
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNI'
          description: Successfully upserted SNI
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid SNI
      summary: Upsert an SNI associated with a certificate
      tags:
        - SNIs
      operationId: upsert-sni-for-certificate
    parameters:
      - $ref: '#/components/parameters/certificate_id'
      - $ref: '#/components/parameters/sni_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/certificates/{certificate_name_or_id}/snis:
    get:
      description: >-
        Retrieve a paginated list of all SNIs associated with a certificate. Use
        this endpoint to retrieve a list of SNIs that are linked to a specific
        certificate. You can use the optional query parameters to filter the
        results based on specific criteria. The response will include the list
        of SNIs and pagination information. See the response schema for details
        on the expected format of the response body.
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/sni-response'
      summary: List SNIs associated with a certificate
      tags:
        - SNIs
      operationId: get-sni-with-certificate
    post:
      description: >-
        Create a new SNI and associate it with a certificate in the system. Use
        this endpoint to add a new SNI to the system and link it to a specific
        certificate.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNI'
          description: Successfully created SNI
        '400':
          content:
            application/json:
              schema:
                type: object
              examples:
                Bad Request:
                  value:
                    code: 3
                    message: data constraint error
                    details:
                      - '@type': type.googleapis.com/kong.admin.model.v1.ErrorDetail
                        type: ERROR_TYPE_REFERENCE
                        field: certificate.id
                        messages:
                          - >-
                            certificate_id (type: foreign) constraint failed for
                            value 'a3ad71a8-6685-4b03-a101-980a953544f6': 
          description: Invalid SNI
      summary: Create a new SNI associated with a Certificate
      tags:
        - SNIs
      requestBody:
        $ref: '#/components/requestBodies/create-sni'
      operationId: create-sni-for-certificate
    parameters:
      - $ref: '#/components/parameters/certificate_name_or_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/consumer_groups:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
    get:
      summary: List consumer groups
      tags:
        - consumer-groups
      responses:
        '200':
          $ref: '#/components/responses/consumer-groups-response'
      operationId: get-runtimeGroupId-core-entities-consumer_groups
      description: Returns a list of active consumer groups.
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    post:
      summary: Create a consumer group
      operationId: post-runtimeGroupId-core-entities-consumer_groups
      responses:
        '200':
          $ref: '#/components/responses/consumer-groups-response'
      description: >-
        Create a consumer group by passing a name and optional tags in the
        request body.
      requestBody:
        $ref: '#/components/requestBodies/consumer-groups-request'
      tags:
        - consumer-groups
    delete:
      summary: Delete a consumer group
      operationId: delete-consumer_groups-group_name_or_id
      responses:
        '204':
          description: |
            HTTP/1.1 204 No Content
      description: >
        Delete a consumer group. Deleting a consumer group removes all consumers
        from that group. This operation does not delete existing consuemrs.
      tags:
        - consumer-groups
  /runtime-groups/{runtimeGroupId}/core-entities/consumer_groups/{group_id}:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
      - $ref: '#/components/parameters/group_id'
    get:
      summary: List a specific consumer group
      tags:
        - consumer-groups
      responses:
        '200':
          $ref: '#/components/responses/consumer-groups-response'
      operationId: get-runtimeGroupId-core-entities-consumer_groups-consumer_id
      description: >-
        Return information about a specific consumer group by passing the
        `group_id` as a path parameter.
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      summary: Create a consumer group
      operationId: put-runtimeGroupId-core-entities-consumer_groups-group_id
      responses:
        '200':
          $ref: '#/components/responses/consumer-response-data'
      requestBody:
        $ref: '#/components/requestBodies/consumer-request'
      description: Create a consumer group.
      tags:
        - consumer-groups
    delete:
      summary: Delete consumer group
      operationId: delete-runtimeGroupId-core-entities-consumer_groups-group_id
      responses:
        '204':
          description: No Content
      description: Delete consumer group.
      tags:
        - consumer-groups
  /runtime-groups/{runtimeGroupId}/core-entities/consumer_groups/{group_id}/consumers:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
      - $ref: '#/components/parameters/group_id'
    get:
      summary: List all consumers in a consumer group
      tags:
        - consumer-groups
      responses:
        '200':
          $ref: '#/components/responses/consumer-groups-response'
      operationId: get-runtimeGroupId-core-entities-consumer_groups-group_id-consumers
      description: Returns a list of consumers that belong to a consumer group.
    post:
      description: Add a consumer to a group
      summary: Add a consumer to a group
      operationId: post-runtimeGroupId-core-entities-consumer_groups-group_id-consumers
      responses:
        '201':
          $ref: '#/components/responses/return-consumer-group'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                consumer:
                  type: string
                  description: >-
                    The consumer ID for the consumer that you want to add to a
                    group.
                  example: 288f2bfc-04e2-4ec3-b6f3-40408dff5417
      tags:
        - consumer-groups
    delete:
      summary: Remove all consumers from a consumer group
      operationId: delete-runtimeGroupId-core-entities-consumer_groups-group_id-consumers
      responses:
        '204':
          description: No Content
      description: >-
        Removes all consumers from a consumer group. Does not delete any
        consumers.consumers.
      tags:
        - consumer-groups
  /runtime-groups/{runtimeGroupId}/core-entities/consumers:
    get:
      description: >-
        Retrieve a list of all consumers.You can use query parameters to filter
        the results by size or tags, for example
        `/consumers?size=50&tags=enterprise`.
      operationId: list-consumer
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/consumer-create-response'
      summary: List all Consumers
      tags:
        - Consumers
    post:
      description: Create a new Consumer
      operationId: create-consumer
      responses:
        '200':
          $ref: '#/components/responses/consumer-create-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Consumer
      summary: Create a new Consumer
      tags:
        - Consumers
      requestBody:
        $ref: '#/components/requestBodies/consumer-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/consumers/{consumer_id}:
    delete:
      description: >-
        Delete a specific consumer from the system using either the consumer ID
        or the consumer username. This operation is irreversible and permanently
        removes all data associated with the specified consumer. If the consumer
        was deleted succesfully the endpoint will return a 204 response
        indicating that the resource did not exist.
      operationId: delete-consumer
      responses:
        '204':
          description: Successfully deleted Consumer or the resource didn't exist
      summary: Delete a Consumer
      tags:
        - Consumers
    get:
      description: >-
        Retrieve the details of a specific consumer in the system using either
        the consumer ID or the consumer username. If the consumer with the
        specified ID or username cannot be found, the endpoint will return a
        404.
      operationId: get-consumer
      responses:
        '200':
          $ref: '#/components/responses/consumer-create-response'
        '404':
          description: Resource does not exist
      summary: Fetch a Consumer
      tags:
        - Consumers
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: >-
        Create or Update Consumer using ID or username. The consumer will be
        identified via the username or id attribute.If the consumer with the
        specified ID or username cannot be found, the endpoint will return a
        404. 


        When the username or id attribute has the structure of a UUID, the
        Consumer being inserted/replaced will be identified by its id. Otherwise
        it will be identified by its username.


        When creating a new Consumer without specifying id (neither in the URL
        nor in the body), then it will be auto-generated.


        Notice that specifying a username in the URL and a different one in the
        request body is not allowed.
      operationId: upsert-consumer
      responses:
        '200':
          $ref: '#/components/responses/consumer-response-data'
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: Update a Consumer
      tags:
        - Consumers
      requestBody:
        $ref: '#/components/requestBodies/consumer-request'
    parameters:
      - $ref: '#/components/parameters/consumer_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/consumers/{consumer_id}/consumer_groups:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
      - $ref: '#/components/parameters/consumer_id'
    get:
      summary: List consumer groups for a consumer
      tags:
        - consumer-groups
      responses:
        '200':
          $ref: '#/components/responses/consumer-groups-response'
      operationId: get-runtimeGroupId-core-entities-consumer_id-consumer_groups
      description: |
        View all consumer groups that a consumer is assigned to.
    post:
      summary: Add a consumer to a group
      operationId: post-runtimeGroupId-core-entities-consumers-consumer_id-consumer_groups
      responses:
        '200':
          $ref: '#/components/responses/consumer-groups-response'
      description: >
        Add a consumer to a specific consumer group.


        If you add a consumer to multiple groups:


        If all groups are allowed by the Rate Limiting Advanced plugin, only the
        first group’s settings will apply.

        Otherwise, whichever group is specified in the Rate Limiting Advanced
        plugin will be active.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                consumer_group_id:
                  type: string
                  description: The consumer group UUID.
                  example: 1e965e47-d185-4e9e-8bc7-94ea6ae75b2e
      tags:
        - consumer-groups
    delete:
      summary: Remove a consumer from all groups
      operationId: >-
        delete-runtimeGroupId-core-entities-consumers-consumer_id-consumer_groups
      responses:
        '204':
          description: No Content
      description: Remove a consumer from all groups
      tags:
        - consumer-groups
  /runtime-groups/{runtimeGroupId}/core-entities/consumers/{consumer_id}/plugins:
    get:
      description: 'Retrieve a list of all plugins associated with a consumer. '
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
      summary: List all plugins associated with a consumer
      tags:
        - Plugins
      operationId: list-plugins-for-consumer
    post:
      description: Create a new Plugin associated with a Consumer
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Plugin
      summary: Create a new Plugin associated with a Consumer
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
      operationId: create-plugin-for-consumer
    parameters:
      - $ref: '#/components/parameters/consumer_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/consumers/{consumer_id}/plugins/{plugin_id_or_instance_name}:
    delete:
      description: Delete a a Plugin associated with a a Consumer using ID.
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
      summary: Delete a a Plugin associated with a a Consumer
      tags:
        - Plugins
      operationId: delete-plugin-for-consumer
    get:
      description: Get a Plugin associated with a Consumer using ID.
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin associated with a Consumer
      tags:
        - Plugins
      operationId: fetch-plugin-for-consumer
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update a Plugin associated with a Consumer using ID.
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
      summary: Upsert a Plugin associated with a Consumer
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
      operationId: upsert-plugin-for-consumer
    parameters:
      - $ref: '#/components/parameters/consumer_id'
      - $ref: '#/components/parameters/plugin_id_or_instance_name'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/debug/cluster/control-planes-nodes/log-level/{log_level}:
    parameters:
      - name: log_level
        in: path
        required: true
        schema:
          type: string
          enum:
            - info
            - notice
            - warn
            - error
            - crit
          example: warn
        description: >-
          Log levels are set in Kong’s configuration. Log levels increase in
          order of their severity
      - schema:
          type: string
        name: runtimeGroupId
        in: path
        required: true
    put:
      summary: Set Node Log Level of All Control Plane Nodes
      operationId: put-debug-cluster-control-planes-nodes-log-level-log_level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: log level changed
                properties:
                  message:
                    type: string
                    description: Response message
                    example: log level changed
              examples:
                log level changed:
                  value:
                    message: log level changed
      description: >
        Change the log level of all Control Plane nodes deployed in Hybrid
        (CP/DP) cluster.


        See the [NGINX
        docs](http://nginx.org/en/docs/ngx_core_module.html#error_log) for a
        list of accepted values.


        Care must be taken when changing the log level of a node to `debug` in a
        production environment because the disk could fill up quickly. As soon
        as the debug logging finishes, revert back to a higher level such as
        notice.


        It’s currently not possible to change the log level of DP and DB-less
        nodes.
      tags:
        - Debug
  /runtime-groups/{runtimeGroupId}/core-entities/debug/cluster/log-level/{log_level}:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
      - $ref: '#/components/parameters/log_level'
    put:
      summary: Set Node Log Level of All Nodes
      operationId: put-debug-cluster-log-level-log_level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: log level changed
                properties:
                  message:
                    type: string
                    example: log level changed
                    description: A message containing information about the log level
              examples:
                log level changed:
                  value:
                    message: log level changed
      description: >
        Change the log level of all nodes in a cluster.




        See the [NGINX
        docs](http://nginx.org/en/docs/ngx_core_module.html#error_log) for a
        list of accepted values.


        It’s currently not possible to change the log level of DP and DB-less
        nodes.


        Currently, when a user dynamically changes the log level for the entire
        cluster, if a new node joins a cluster the new node will run at the
        previous log level, not at the log level that was previously set
        dynamically for the entire cluster.
      tags:
        - Debug
  /runtime-groups/{runtimeGroupId}/core-entities/debug/node/log-level:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
    get:
      summary: Retrieve Node Log Level of A Node
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: 'log level: debug'
                properties:
                  message:
                    type: string
                    example: 'log level: debug'
                    description: A message containing the current log level of the node.
              examples:
                Example 1:
                  value:
                    message: 'log level: debug'
      operationId: get-debug-node-log-level
      description: >-
        Retrieve the current log level of a node.


        See the [NGINX
        documentation](http://nginx.org/en/docs/ngx_core_module.html#error_log)
        for the list of possible return values.
      tags:
        - Debug
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
  /runtime-groups/{runtimeGroupId}/core-entities/debug/node/log-level/{log_level}:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
      - $ref: '#/components/parameters/log_level'
    put:
      summary: Set log level of a single node
      operationId: put-debug-node-log-level-log_level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: log level changed
                properties:
                  message:
                    type: string
                    description: A message confirming the log level change
                    example: log level changed
              examples:
                log level changed:
                  value:
                    message: log level changed
      description: >
        Change the log level of a node.


        See the [NGINX
        documentation](http://nginx.org/en/docs/ngx_core_module.html#error_log)
        for the list of possible return values.
      tags:
        - Debug
  /runtime-groups/{runtimeGroupId}/core-entities/key-sets:
    get:
      description: >
        Retrieve a list of all Key-sets in the system. A Key Set object holds a
        collection of asymmetric key objects. This entity allows to logically
        group keys by their purpose. Key Sets can be both tagged and filtered by
        tags.
      operationId: list-key-set
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/key-set-response'
      summary: List all Key-sets
      tags:
        - Key-sets
    post:
      description: >-
        This endpoint allows creating a new Key-set by sending a JSON object
        that describes the Key-set to be created.The request body must contain
        all the fields required to create a new Key-set. 
      operationId: create-key-set
      responses:
        '200':
          $ref: '#/components/responses/key-set-response'
        '400':
          description: ' Returned if the request contains invalid data.'
      summary: Create a new Key-set
      tags:
        - Key-sets
      requestBody:
        $ref: '#/components/requestBodies/key-set-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/key-sets/{key-set_id_or_name}:
    delete:
      description: Delete a Key-set.
      operationId: delete-key-set
      responses:
        '204':
          description: Successfully deleted Key-set or the resource didn't exist
      summary: Delete a Key-set
      tags:
        - Key-sets
    get:
      description: >-
        This endpoint retrieves information about a specific key-set based on
        its ID or name.
      operationId: get-key-set
      responses:
        '200':
          $ref: '#/components/responses/key-set-response'
        '404':
          description: Resource does not exist
      summary: Fetch a Key-set
      tags:
        - Key-sets
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Update a Key-set using ID or name.
      operationId: upsert-key-set
      responses:
        '200':
          $ref: '#/components/responses/key-set-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Key-set
      summary: Update a Key-set
      tags:
        - Key-sets
      requestBody:
        $ref: '#/components/requestBodies/key-set-request'
    parameters:
      - $ref: '#/components/parameters/key-set_id_or_name'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/keys:
    get:
      description: List all Keys
      operationId: list-key
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Key'
                    type: array
                  offset:
                    $ref: '#/components/schemas/pagination-offset-response'
          description: A successful response listing Keys
      summary: List all Keys
      tags:
        - Keys
    post:
      description: >-
        This API endpoint allows you to create a new key. When the request is
        successful, the API will respond with a 200 status code and a JSON
        object that represents the newly created key. If the request is invalid,
        the API will respond with a `400` status code and an error message in
        the response body.
      operationId: create-key
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: Successfully created Key
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Key
      summary: Create a new Key
      tags:
        - Keys
      requestBody:
        $ref: '#/components/requestBodies/keys-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/keys/{key_id_or_name}:
    delete:
      description: Delete a Key
      operationId: delete-key
      responses:
        '204':
          description: Successfully deleted Key or the resource didn't exist
      summary: Delete a Key
      tags:
        - Keys
    get:
      description: Get a Key using ID or name.
      operationId: get-key
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
              examples:
                example:
                  value:
                    id: d958f66b-8e99-44d2-b0b4-edd5bbf24658
                    jwk: '{alg:RSA,  kid: 42,  ...}'
                    kid: '42'
                    name: a-key
                    pem:
                      private_key: '-----BEGIN'
                      public_key: '-----BEGIN'
                    set:
                      id: b86b331c-dcd0-4b3e-97ce-47c5a9543031
          description: Successfully fetched Key
        '404':
          description: Resource does not exist
      summary: Fetch a Key
      tags:
        - Keys
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update Key using ID or name.
      operationId: upsert-key
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
              examples:
                Example:
                  value:
                    id: d958f66b-8e99-44d2-b0b4-edd5bbf24658
                    jwk: '{alg:RSA,  kid: 42,  ...}'
                    kid: '42'
                    name: a-key
                    pem:
                      private_key: '-----BEGIN'
                      public_key: '-----BEGIN'
                    set:
                      id: b86b331c-dcd0-4b3e-97ce-47c5a9543031
          description: Successfully upserted Key
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Key
      summary: Upsert a Key
      tags:
        - Keys
      requestBody:
        $ref: '#/components/requestBodies/keys-request'
    parameters:
      - $ref: '#/components/parameters/key_id_or_name'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/plugins:
    get:
      description: >-
        This endpoint allows you to list all the plugins. You can use query
        parameters to filter the results by size or tags, for example
        `/plugins?size=50&tags=enterprise`.
      operationId: list-plugin
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
      summary: List all Plugins
      tags:
        - Plugins
    post:
      description: Create a new Plugin.
      operationId: create-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
              examples:
                example:
                  value:
                    config:
                      anonymous: null
                      hide_credentials: false
                      key_in_body: false
                      key_in_header: true
                      key_in_query: true
                      key_names:
                        - apikey
                      run_on_preflight: true
                    enabled: true
                    id: 3fd1eea1-885a-4011-b986-289943ff8177
                    name: key-auth
                    protocols:
                      - grpc
                      - grpcs
                      - http
                      - https
          description: Successfully created Plugin
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Plugin
      summary: Create a new Plugin
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/plugins/{plugin_id_or_instance_name}:
    delete:
      description: Delete a Plugin
      operationId: delete-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
      summary: Delete a Plugin
      tags:
        - Plugins
    get:
      description: Get a Plugin using ID.
      operationId: get-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Successfully fetched Plugin
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update Plugin using ID.
      operationId: upsert-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
              examples:
                example:
                  value:
                    config:
                      anonymous: null
                      hide_credentials: false
                      key_in_body: false
                      key_in_header: true
                      key_in_query: true
                      key_names:
                        - apikey
                      run_on_preflight: true
                    enabled: true
                    id: 3fd1eea1-885a-4011-b986-289943ff8177
                    name: key-auth
                    protocols:
                      - grpc
                      - grpcs
                      - http
                      - https
          description: Successfully upserted Plugin
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Plugin
      summary: Upsert a Plugin
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
    parameters:
      - $ref: '#/components/parameters/plugin_id_or_instance_name'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/routes:
    get:
      description: >-
        List all routes


        route entities define rules to match client requests. Each route is
        associated with a service, and a service may have multiple routes
        associated to it. Every request matching a given route will be proxied
        to its associated service.


        > Note: Path handling algorithms v1 was deprecated in Kong 3.0. From
        Kong 3.0, when router_flavor is set to expressions, route.path_handling
        will be unconfigurable and the path handling behavior will be v0; when
        router_flavor is set to traditional_compatible, the path handling
        behavior will be v0 regardless of the value of route.path_handling. Only
        router_flavor = traditional will support path_handling v1' behavior.
      operationId: list-route
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Route'
                    type: array
                  offset:
                    $ref: '#/components/schemas/pagination-offset-response'
          description: A successful response listing routes
      summary: List all routes
      tags:
        - Routes
    post:
      description: Create a new route
      operationId: create-route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfully created route
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid route
      summary: Create a new route
      tags:
        - Routes
      requestBody:
        $ref: '#/components/requestBodies/route-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/routes/{route_id}:
    delete:
      description: Delete a route.
      operationId: delete-route
      responses:
        '204':
          description: Successfully deleted route or the resource didn't exist
      summary: Delete a route
      tags:
        - Routes
    get:
      description: Get a route using ID or name.
      operationId: get-route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfully fetched route
        '404':
          description: Resource does not exist
      summary: Fetch a route
      tags:
        - Routes
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update route using ID or name.
      operationId: upsert-route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfully upserted route
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid route
      summary: Update a route
      tags:
        - Routes
      requestBody:
        $ref: '#/components/requestBodies/route-request'
    parameters:
      - name: runtimeGroupId
        in: path
        required: true
        schema:
          type: string
          example: 9524ec7d-36d9-465d-a8c5-83a3c9390458
        description: >-
          The ID of your runtime group. This variable is available in the
          Konnect manager
      - schema:
          type: string
        name: route_id
        in: path
        required: true
  /runtime-groups/{runtimeGroupId}/core-entities/routes/{route_id}/plugins:
    get:
      description: List all Plugins associated with a a route
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Plugin'
                    type: array
                  offset:
                    $ref: '#/components/schemas/pagination-offset-response'
          description: A successful response listing Plugins
      summary: List all Plugins associated with a route
      tags:
        - Plugins
      operationId: list-plugins-for-route
    post:
      description: Create a new Plugin associated with a route
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Plugin
      summary: Create a new Plugin associated with a route
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
      operationId: create-plugin-for-route
    parameters:
      - $ref: '#/components/parameters/route_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/routes/{route_id}/plugins/{plugin_id_or_instance_name}:
    delete:
      description: Delete a a Plugin associated with a a route using ID.
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
      summary: Delete a a Plugin associated with a route
      tags:
        - Plugins
      operationId: delete-plugin-for-route
    get:
      description: Get a Plugin associated with a route using ID.
      parameters:
        - description: ID or name of the related route
          in: path
          name: route_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin associated with a route
      tags:
        - Plugins
      operationId: fetch-plugin-for-route
    put:
      description: Create or Update a Plugin associated with a route using ID.
      responses:
        '200':
          $ref: '#/components/responses/plugin-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Plugin
      summary: Upsert a Plugin associated with a route
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
      operationId: upsert-plugin-for-route
    parameters:
      - $ref: '#/components/parameters/route_id'
      - $ref: '#/components/parameters/plugin_id_or_instance_name'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/schemas/plugins/{plugin_name}:
    parameters:
      - schema:
          type: string
          example: basic-auth
        name: plugin_name
        in: path
        required: true
        description: The name of a Kong plugin
      - $ref: '#/components/parameters/runtimeGroupId'
    get:
      summary: Retrieve Plugin Schema
      tags:
        - Information
      responses:
        '200':
          description: OK
      operationId: get-schemas-plugins-plugin_name
      description: >
        Retrieve the schema of a plugin’s configuration. This is useful to
        understand what fields a plugin accepts, and can be used for building
        third-party integrations to the Kong’s plugin system.
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
  /runtime-groups/{runtimeGroupId}/core-entities/services:
    get:
      description: List all services
      operationId: list-service
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/service-response'
      summary: List all services
      tags:
        - Services
    post:
      description: Create a new service
      operationId: create-service
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  connect_timeout:
                    type: integer
                  created_at:
                    type: integer
                  enabled:
                    type: boolean
                  host:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  path:
                    type: string
                  port:
                    type: integer
                  protocol:
                    type: string
                  read_timeout:
                    type: integer
                  retries:
                    type: integer
                  updated_at:
                    type: integer
                  write_timeout:
                    type: integer
                x-examples:
                  Example 1:
                    connect_timeout: 6000
                    created_at: 1684437851
                    enabled: true
                    host: example.com
                    id: ebf4e826-b17a-4e23-9d58-2621c9faa135
                    name: my-service
                    path: /some_api
                    port: 80
                    protocol: http
                    read_timeout: 6000
                    retries: 5
                    updated_at: 1684437851
                    write_timeout: 6000
              examples:
                http service creation:
                  value:
                    connect_timeout: 6000
                    created_at: 1684437851
                    enabled: true
                    host: example.com
                    id: ebf4e826-b17a-4e23-9d58-2621c9faa135
                    name: my-service
                    path: /some_api
                    port: 80
                    protocol: http
                    read_timeout: 6000
                    retries: 5
                    updated_at: 1684437851
                    write_timeout: 6000
          description: Successfully created service
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid service
      summary: Create a new service
      tags:
        - Services
      requestBody:
        $ref: '#/components/requestBodies/service-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/services/{service_id}:
    delete:
      description: Delete a service
      operationId: delete-service
      parameters:
        - description: ID or name of the service to delete
          in: path
          name: service_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted service or the resource didn't exist
      summary: Delete a service
      tags:
        - Services
    get:
      description: Get a service using ID or name.
      operationId: get-service
      responses:
        '200':
          $ref: '#/components/responses/service-response'
        '404':
          description: Resource does not exist
      summary: Fetch a service
      tags:
        - Services
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update service using ID or name.
      operationId: upsert-service
      responses:
        '200':
          $ref: '#/components/responses/service-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid service
      summary: Upsert a service
      tags:
        - Services
      requestBody:
        $ref: '#/components/requestBodies/service-request'
    parameters:
      - $ref: '#/components/parameters/service_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/services/{service_id}/plugins:
    get:
      description: List all Plugins associated with a a service
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Plugin'
                    type: array
                  offset:
                    $ref: '#/components/schemas/pagination-offset-response'
          description: A successful response listing Plugins
      summary: List all Plugins associated with a service
      tags:
        - Plugins
      operationId: get-plugins-for-service
    post:
      description: Create a new Plugin associated with a service
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Successfully created Plugin
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Plugin
      summary: Create a new Plugin associated with a service
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
      operationId: create-plugin-for-service
    parameters:
      - $ref: '#/components/parameters/service_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/services/{service_id}/plugins/{plugin_id_or_instance_name}:
    delete:
      description: Delete a a Plugin associated with a a service using ID.
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
      summary: Delete a a plugin associated with a service
      tags:
        - Plugins
      operationId: delete-plugin-for-a-service
    get:
      description: Get a Plugin associated with a service using ID.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Successfully fetched Plugin
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin associated with a service
      tags:
        - Plugins
      operationId: fetch-plugin-with-a-service
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update a Plugin associated with a service using ID.
      responses:
        '201':
          $ref: '#/components/responses/plugin-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Plugin
      summary: Upsert a plugin associated with a service
      tags:
        - Plugins
      requestBody:
        $ref: '#/components/requestBodies/plugin-request'
      operationId: upsert-plugin-for-a-service
    parameters:
      - $ref: '#/components/parameters/service_id'
      - $ref: '#/components/parameters/plugin_id_or_instance_name'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/services/{service_id}/routes:
    get:
      description: List all routes associated with a a service
      parameters:
        - description: ID or name of the related service
          in: path
          name: service_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Route'
                    type: array
                  offset:
                    $ref: '#/components/schemas/pagination-offset-response'
              examples:
                Example 1:
                  value:
                    data:
                      - hosts:
                          - foo.example.com
                          - foo.example.us
                        id: 56c4566c-14cc-4132-9011-4139fcbbe50a
                        name: example-route
                        paths:
                          - /v1
                          - /v2
                        service:
                          id: bd380f99-659d-415e-b0e7-72ea05df3218
                    offset: string
          description: A successful response listing routes
      summary: List all routes associated with a service
      tags:
        - Routes
      operationId: list-routes-for-service
    post:
      description: Create a new route associated with a service
      parameters:
        - description: ID or name of the related service
          in: path
          name: service_id
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
              examples:
                Created route:
                  value:
                    created_at: 1684438957
                    headers:
                      x-another-header:
                        - bla
                      x-my-header:
                        - foo
                        - bar
                    hosts:
                      - example.com
                      - foo.test
                    https_redirect_status_code: 426
                    id: 40dac76a-ce79-4bca-844d-afb44b9d8784
                    methods:
                      - GET
                      - POST
                    name: my-route
                    path_handling: v0
                    paths:
                      - /foo
                      - /bar
                    preserve_host: false
                    protocols:
                      - http
                      - https
                    regex_priority: 0
                    request_buffering: true
                    response_buffering: true
                    service:
                      id: b073426b-1087-42e5-85d9-a2bf9fe0a09d
                    strip_path: true
                    tags:
                      - user-level
                      - low-priority
                    updated_at: 1684438957
          description: Successfully created route
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid route
      summary: Create a new route associated with a service
      tags:
        - Routes
      requestBody:
        $ref: '#/components/requestBodies/route-request'
      operationId: create-route-for-service
    parameters:
      - $ref: '#/components/parameters/service_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/services/{service_id}/routes/{route_id}:
    delete:
      description: Delete a a route associated with a a service using ID or name.
      responses:
        '204':
          description: Successfully deleted route or the resource didn't exist
      summary: Delete a a route associated with a service
      tags:
        - Routes
      operationId: delete-route-for-service
    get:
      description: Get a route associated with a service using ID or name.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
              examples:
                Example 1:
                  value:
                    hosts:
                      - foo.example.com
                      - foo.example.us
                    id: 56c4566c-14cc-4132-9011-4139fcbbe50a
                    name: example-route
                    paths:
                      - /v1
                      - /v2
                    service:
                      id: bd380f99-659d-415e-b0e7-72ea05df3218
          description: Successfully fetched route
        '404':
          description: Resource does not exist
      summary: Fetch a route associated with a service
      tags:
        - Routes
      operationId: fetch-route-for-service
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update a route associated with a service using ID or name.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
              examples:
                Example 1:
                  value:
                    hosts:
                      - foo.example.com
                      - foo.example.us
                    id: 56c4566c-14cc-4132-9011-4139fcbbe50a
                    name: example-route
                    paths:
                      - /v1
                      - /v2
                    service:
                      id: bd380f99-659d-415e-b0e7-72ea05df3218
          description: Successfully upserted route
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid route
      summary: Upsert a route associated with a service
      tags:
        - Routes
      requestBody:
        $ref: '#/components/requestBodies/route-request'
      operationId: upsert-route-for-service
    parameters:
      - $ref: '#/components/parameters/service_id'
      - $ref: '#/components/parameters/route_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/snis:
    get:
      description: List all SNIs
      operationId: list-sni
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          $ref: '#/components/responses/sni-response'
      summary: List all SNIs
      tags:
        - SNIs
    post:
      description: Create a new SNI
      operationId: create-sni
      responses:
        '200':
          $ref: '#/components/responses/sni-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid SNI
      summary: Create a new SNI
      tags:
        - SNIs
      requestBody:
        $ref: '#/components/requestBodies/create-sni'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/snis/{sni_id}:
    delete:
      description: Delete an SNI
      operationId: delete-sni
      responses:
        '204':
          description: Successfully deleted SNI or the resource didn't exist
      summary: Delete an SNI
      tags:
        - SNIs
    get:
      description: Get an SNI using ID or name.
      operationId: get-sni
      responses:
        '200':
          $ref: '#/components/responses/sni-response'
        '404':
          description: Resource does not exist
      summary: Fetch an SNI
      tags:
        - SNIs
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update SNI using ID or name.
      operationId: upsert-sni
      responses:
        '200':
          $ref: '#/components/responses/sni-response'
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid SNI
      summary: Update an SNI
      tags:
        - SNIs
      requestBody:
        $ref: '#/components/requestBodies/create-sni'
    parameters:
      - $ref: '#/components/parameters/sni_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/upstreams:
    get:
      description: >
        List all registered upstreams. You can filter the results by pagination
        size, offset, or tags like `/upstreams?size=10&offset=0`.
      operationId: list-upstream
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Upstream'
                    type: array
                  offset:
                    $ref: '#/components/schemas/pagination-offset-response'
              examples:
                example:
                  value:
                    data:
                      - algorithm: round-robin
                        hash_fallback: none
                        hash_on: none
                        hash_on_cookie_path: /
                        healthchecks:
                          active:
                            concurrency: 10
                            healthy:
                              http_statuses:
                                - 200
                                - 302
                              interval: 0
                              successes: 0
                            http_path: /
                            https_verify_certificate: true
                            timeout: 1
                            type: http
                            unhealthy:
                              http_failures: 0
                              http_statuses:
                                - 429
                                - 404
                                - 500
                                - 501
                                - 502
                                - 503
                                - 504
                                - 505
                              interval: 0
                              tcp_failures: 0
                              timeouts: 0
                          passive:
                            healthy:
                              http_statuses:
                                - 200
                                - 201
                                - 202
                                - 203
                                - 204
                                - 205
                                - 206
                                - 207
                                - 208
                                - 226
                                - 300
                                - 301
                                - 302
                                - 303
                                - 304
                                - 305
                                - 306
                                - 307
                                - 308
                              successes: 0
                            type: http
                            unhealthy:
                              http_failures: 0
                              http_statuses:
                                - 429
                                - 500
                                - 503
                              tcp_failures: 0
                              timeouts: 0
                          threshold: 0
                        id: 6eed5e9c-5398-4026-9a4c-d48f18a2431e
                        name: api.example.internal
                        slots: 10000
                    offset: string
          description: A successful response listing Upstreams
      summary: List all Upstreams
      tags:
        - Upstreams
    post:
      description: |
        Create a new Upstream
      operationId: create-upstream
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upstream'
          description: Successfully created Upstream
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Upstream
      summary: Create a new Upstream
      tags:
        - Upstreams
      requestBody:
        $ref: '#/components/requestBodies/upstream-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/upstreams/{upstream_id}:
    delete:
      description: Delete an Upstream
      operationId: delete-upstream
      responses:
        '204':
          description: Successfully deleted Upstream or the resource didn't exist
      summary: Delete an Upstream
      tags:
        - Upstreams
    get:
      description: Get an Upstream using ID or name.
      operationId: get-upstream
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upstream'
          description: Successfully fetched Upstream
        '404':
          description: Resource does not exist
      summary: Fetch an Upstream
      tags:
        - Upstreams
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update Upstream using ID or name.
      operationId: upsert-upstream
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upstream'
              examples:
                Example 1:
                  value:
                    id: 58c8ccbb-eafb-4566-991f-2ed4f678fa70
                    created_at: 1422386534
                    name: my-upstream
                    algorithm: round-robin
                    hash_on: none
                    hash_fallback: none
                    hash_on_cookie_path: /
                    slots: 10000
                    healthchecks:
                      passive:
                        type: http
                        healthy:
                          http_statuses:
                            - 200
                            - 201
                            - 202
                            - 203
                            - 204
                            - 205
                            - 206
                            - 207
                            - 208
                            - 226
                            - 300
                            - 301
                            - 302
                            - 303
                            - 304
                            - 305
                            - 306
                            - 307
                            - 308
                          successes: 0
                        unhealthy:
                          http_statuses:
                            - 429
                            - 500
                            - 503
                          timeouts: 0
                          http_failures: 0
                          tcp_failures: 0
                      active:
                        https_verify_certificate: true
                        healthy:
                          http_statuses:
                            - 200
                            - 302
                          successes: 0
                          interval: 0
                        unhealthy:
                          http_failures: 0
                          http_statuses:
                            - 429
                            - 404
                            - 500
                            - 501
                            - 502
                            - 503
                            - 504
                            - 505
                          timeouts: 0
                          tcp_failures: 0
                          interval: 0
                        type: http
                        concurrency: 10
                        headers:
                          type: object
                          properties:
                            x-my-header:
                              type: array
                              items:
                                type: string
                              description: The value(s) of the x-my-header header.
                            x-another-header:
                              type: array
                              items:
                                type: string
                              description: The value(s) of the x-another-header header.
                        timeout: 1
                        http_path: /
                        https_sni: example.com
                      threshold: 0
                    tags:
                      - user-level
                      - low-priority
                    host_header: example.com
                    client_certificate:
                      id: ea29aaa3-3b2d-488c-b90c-56df8e0dd8c6
                    use_srv_name: false
          description: Successfully upserted Upstream
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Upstream
      summary: Update an Upstream
      tags:
        - Upstreams
      requestBody:
        $ref: '#/components/requestBodies/upstream-request'
    parameters:
      - $ref: '#/components/parameters/upstream_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/upstreams/{upstream_id}/targets:
    get:
      description: List all Targets associated with a an Upstream
      parameters:
        - description: ID or name of the related Upstream
          in: path
          name: upstream_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: A successful response listing Targets
      summary: List all Targets associated with an Upstream
      tags:
        - Targets
      operationId: list-targets-for-upstream
    post:
      description: Create a new Target associated with an Upstream
      parameters:
        - description: ID or name of the related Upstream
          in: path
          name: upstream_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
              examples:
                Successfully created Target:
                  value:
                    id: 173a6cee-90d1-40a7-89cf-0329eca780a6
                    created_at: 1422386534
                    upstream:
                      id: bdab0e47-4e37-4f0b-8fd0-87d95cc4addc
                    target: example.com:8000
                    weight: 100
                    tags:
                      - user-level
                      - low-priority
          description: Successfully created Target
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Target
      summary: Create a new Target associated with an Upstream
      tags:
        - Targets
      requestBody:
        $ref: '#/components/requestBodies/target-request'
      operationId: create-target-for-upstream
    parameters:
      - $ref: '#/components/parameters/upstream_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/upstreams/{upstream_id}/targets/{target_id}:
    delete:
      description: Delete a a Target associated with a an Upstream using ID or target.
      responses:
        '204':
          description: Successfully deleted Target or the resource didn't exist
      summary: Delete a a Target associated with a an Upstream
      tags:
        - Targets
      operationId: delete-upstream-target
    get:
      description: Get a Target associated with an Upstream using ID or target.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: Successfully fetched Target
        '404':
          description: Resource does not exist
      summary: Fetch a Target associated with an Upstream
      tags:
        - Targets
      operationId: fetch-target-for-upstream
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: >-
        Create or Update a Target associated with an Upstream using ID or
        target.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: Successfully upserted Target
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Target
      summary: Upsert a Target associated with an Upstream
      tags:
        - Targets
      requestBody:
        $ref: '#/components/requestBodies/target-request'
      operationId: upsert-target-for-upstream
    parameters:
      - $ref: '#/components/parameters/upstream_id'
      - $ref: '#/components/parameters/target_id'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/vaults:
    get:
      description: List all Vaults
      operationId: list-vault
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-tags-filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Vault'
                    type: array
                  offset:
                    $ref: '#/components/schemas/pagination-offset-response'
          description: A successful response listing Vaults
      summary: List all Vaults
      tags:
        - Vaults
    post:
      description: Create a new Vault
      operationId: create-vault
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          description: Successfully created Vault
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Vault
      summary: Create a new Vault
      tags:
        - Vaults
      requestBody:
        $ref: '#/components/requestBodies/vault-request'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/core-entities/vaults/{vault_id_or_prefix}:
    delete:
      description: Delete a Vault
      operationId: delete-vault
      parameters:
        - description: ID or prefix of the Vault to delete
          in: path
          name: vault_id_or_prefix
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted Vault or the resource didn't exist
      summary: Delete a Vault
      tags:
        - Vaults
    get:
      description: |-
        Get a Vault using ID or prefix.

        Vault entities are used to configure different Vault connectors.
      operationId: get-vault
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          description: Successfully fetched Vault
        '404':
          description: Resource does not exist
      summary: Fetch a Vault
      tags:
        - Vaults
      parameters:
        - $ref: '#/components/parameters/pagination-offset'
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    put:
      description: Create or Update Vault using ID or prefix.
      operationId: upsert-vault
      parameters:
        - description: Name or ID of the Vault to lookup
          in: path
          name: vault_id_or_prefix
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          description: Successfully upserted Vault
        '400':
          content:
            application/json:
              schema:
                type: object
          description: Invalid Vault
      summary: Upsert a Vault
      tags:
        - Vaults
      requestBody:
        $ref: '#/components/requestBodies/vault-request'
    parameters:
      - $ref: '#/components/parameters/vault_id_or_prefix'
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/dp-client-certificates:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
    get:
      summary: List DP Client Certificates
      responses:
        '200':
          $ref: '#/components/responses/list-dp-client-certs'
      operationId: get-dp-client-certificates
      tags:
        - DP Certificates
      description: >-
        Returns a list of pinned dataplane client certificates that are
        associated to this runtime group. A pinned dataplane certificate allows
        dataplanes configured with the certificate and corresponding private key
        to establish connection with this runtime group.
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
    post:
      summary: Pin New DP Client Certificate
      operationId: post-dp-client-certificates
      responses:
        '201':
          $ref: '#/components/responses/get-dp-client-cert'
      tags:
        - DP Certificates
      description: >-
        Pin a new DP Client Certificate to this runtime group. A pinned
        dataplane certificate allows dataplanes configured with the certificate
        and corresponding private key to establish connection with this runtime
        group.
      requestBody:
        $ref: '#/components/requestBodies/create-dp-client-cert'
  /runtime-groups/{runtimeGroupId}/dp-client-certificates/{certificateId}:
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
      - schema:
          type: string
        name: certificateId
        in: path
        required: true
    get:
      summary: Fetch DP Client Certificate
      tags:
        - DP Certificates
      responses:
        '200':
          $ref: '#/components/responses/get-dp-client-cert'
      operationId: get-dp-client-certificates-cert_id
      description: >-
        Retrieve a pinned dataplane client certificate associated to this
        runtime group. A pinned dataplane certificate allows dataplanes
        configured with the certificate and corresponding private key to
        establish connection with this runtime group.
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
    delete:
      summary: Delete DP Client Certificate
      operationId: delete-dp-client-certificates-cert_id
      responses:
        '204':
          description: No Content
      tags:
        - DP Certificates
      description: >-
        Remove a pinned dataplane client certificate associated to this runtime
        group. Removing a pinned dataplane certificate would invalidate any
        dataplanes currently connected to this runtime group using this
        certificate.
  /runtime-groups/{runtimeGroupId}/expected-config-hash:
    get:
      summary: Fetch Expected Config Hash
      tags:
        - DP Nodes
      responses:
        '200':
          $ref: '#/components/responses/get-expected-config-hash'
      operationId: get-expected-config-hash
      description: >-
        Retrieve the expected config hash for this runtime group. The expected
        config hash can be used to verify if the config hash of a runtime
        instance is up to date with the runtime group. The config hash will be
        the same if they are in sync.
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/nodes:
    get:
      summary: List Runtime Instance Records
      responses:
        '200':
          $ref: '#/components/responses/list-nodes'
      operationId: get-nodes
      tags:
        - DP Nodes
      description: >-
        Returns a list of runtime instance records that are associated to this
        runtime group. A runtime instance record contains all the metadata
        information of the Kong Gateway dataplane.
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
    parameters:
      - $ref: '#/components/parameters/runtimeGroupId'
  /runtime-groups/{runtimeGroupId}/nodes/{nodeId}:
    parameters:
      - schema:
          type: string
        name: nodeId
        in: path
        required: true
      - $ref: '#/components/parameters/runtimeGroupId'
    get:
      summary: Fetch Runtime Instance Record
      responses:
        '200':
          $ref: '#/components/responses/get-node'
      operationId: get-nodes-node_id
      tags:
        - DP Nodes
      description: >-
        Retrieve a specific runtime instance record associated to this runtime
        group. A runtime instance record contains all the metadata information
        of the Kong Gateway dataplane.
      parameters:
        - $ref: '#/components/parameters/pagination-size'
        - $ref: '#/components/parameters/pagination-tags-filter'
    delete:
      summary: Delete Runtime Instance Record
      operationId: delete-nodes-node_id
      responses:
        '204':
          description: No Content
      tags:
        - DP Nodes
      description: >-
        Remove a specific runtime instance record associated to this runtime
        group. Deleting this record does not prevent the runtime instance from
        re-connecting to the runtime group.
  /system-accounts:
    get:
      summary: List System Accounts
      tags:
        - System Accounts
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-system-accounts
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Returns an array of system accounts (SA) in the organization. Returns
        400 if any filter parameters are invalid.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/StringFieldFilter'
              description:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter system accounts returned in the response.
          required: false
    post:
      summary: Create System Account
      operationId: post-system-accounts
      tags:
        - System Accounts
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Creates a system account. Returns a 409 if a system account with the
        same name already exists.
      requestBody:
        $ref: '#/components/requestBodies/CreateSystemAccount'
      responses:
        '201':
          $ref: '#/components/responses/SystemAccountSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/IdentityConflict'
  /system-accounts/{accountId}:
    get:
      summary: Fetch System Account
      tags:
        - System Accounts
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-system-accounts-id
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Returns the system account (SA) for the SA ID specified as a path
        parameter.
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    patch:
      summary: Update System Account
      operationId: patch-system-accounts-id
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Updates the specified system account. Returns a 409 if the updated name
        is the same as another system account in the organization.
      tags:
        - System Accounts
      requestBody:
        $ref: '#/components/requestBodies/UpdateSystemAccount'
    delete:
      summary: Delete System Account
      operationId: delete-system-accounts-id
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Deletes the specified system account. Returns 404 if the requested
        account was not found.
      tags:
        - System Accounts
  /system-accounts/{accountId}/access-tokens:
    get:
      summary: List System Account Access Tokens
      tags:
        - System Accounts - Access Tokens
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountAccessTokenCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-system-account-id-access-tokens
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Returns the access tokens for the specified system account. Returns 400
        if any filter parameters are invalid.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter access tokens returned in the response.
          required: false
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    post:
      summary: Create System Account Access Token
      operationId: post-system-accounts-id-access-tokens
      responses:
        '201':
          $ref: '#/components/responses/SystemAccountAccessTokenCreated'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Creates an access token for the specified system account (SA). The
        access token can be used for authenticating API and CLI requests. The
        token will only be displayed once on creation. Returns a 409 if the
        system account already has a token with the same name.
      requestBody:
        $ref: '#/components/requestBodies/CreateSystemAccountAccessToken'
      tags:
        - System Accounts - Access Tokens
  /system-accounts/{accountId}/access-tokens/{tokenId}:
    get:
      summary: Fetch System Account Access Token
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountAccessTokenSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-system-accounts-id-access-tokens-id
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Returns the system account (SA) access token for the SA Access Token ID
        specified as a path parameter.
      parameters: []
      tags:
        - System Accounts - Access Tokens
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
      - schema:
          type: string
        name: tokenId
        in: path
        required: true
        description: ID of the system account access token.
    patch:
      summary: Update System Account Access Token
      operationId: patch-system-accounts-id-access-tokens-id
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountAccessTokenSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Updates the specified access token. Returns a 409 if the updated name is
        the same as another token belonging to the specified system user.
      requestBody:
        $ref: '#/components/requestBodies/UpdateSystemAccountAccessToken'
      tags:
        - System Accounts - Access Tokens
    delete:
      summary: Delete System Account Access Token
      operationId: delete-system-accounts-id-access-tokens-id
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Deletes the specified token. Returns 404 if the token was not found.
      tags:
        - System Accounts - Access Tokens
  /system-accounts/{accountId}/assigned-roles:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    get:
      summary: Fetch Assigned Roles for System Account
      responses:
        '200':
          $ref: '#/components/responses/AssignedRoleCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-system-accounts-accountId-assigned-roles
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Lists the roles belonging to a system account. Returns 400 if any filter
        parameters are invalid.
      parameters:
        - schema:
            type: object
            properties:
              role_name:
                $ref: '#/components/schemas/StringFieldFilter'
              entity_type_name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter roles returned in the response.
          required: false
      tags:
        - System Accounts - Roles
    post:
      summary: Create Assigned Role for System Account
      operationId: post-system-accounts-accountId-assigned-roles
      responses:
        '201':
          $ref: '#/components/responses/AssignedRoleSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Assigns a role to a system account. Returns 409 if role is already
        assigned.
      requestBody:
        $ref: '#/components/requestBodies/AssignRole'
      tags:
        - System Accounts - Roles
  /system-accounts/{accountId}/assigned-roles/{roleId}:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
      - schema:
          type: string
        name: roleId
        in: path
        required: true
        description: ID of the role.
    delete:
      summary: Delete Assigned Role from System Account
      operationId: delete-system-accounts-accountId-assigned-roles-roleId
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        _The system accounts feature is currently in beta and is subject to
        change._


        Removes an assigned role from a system account. Returns 404 if the
        system account or assigned role were not found.
      tags:
        - System Accounts - Roles
  /system-accounts/{accountId}/teams:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    get:
      summary: List Teams for a System Account
      responses:
        '200':
          $ref: '#/components/responses/TeamCollection'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-system-accounts-accountId-teams
      description: Returns a paginated list of a teams that the system account belongs to.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter teams returned in the response.
          required: false
      tags:
        - System Accounts - Team Membership
  /teams:
    get:
      summary: List Teams
      responses:
        '200':
          $ref: '#/components/responses/TeamCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: list-teams
      description: >-
        Returns an array of team objects containing information about the
        Konnect Teams.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter teams returned in the response.
          required: false
      tags:
        - Teams
    parameters: []
    post:
      summary: Create Team
      operationId: create-team
      responses:
        '201':
          $ref: '#/components/responses/TeamSingle'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
      tags:
        - Teams
      requestBody:
        $ref: '#/components/requestBodies/CreateTeam'
      description: 'Creates a team in the Konnect Organization. '
  /teams/{teamId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: teamId
        in: path
        required: true
        description: The team ID
    get:
      summary: Fetch Team
      responses:
        '200':
          $ref: '#/components/responses/TeamSingle'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-team
      description: Returns information about a team from a given team ID.
      tags:
        - Teams
    patch:
      summary: Update Team
      operationId: update-team
      responses:
        '200':
          $ref: '#/components/responses/TeamSingle'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: Updates an individual team.
      requestBody:
        $ref: '#/components/requestBodies/UpdateTeam'
      tags:
        - Teams
    delete:
      summary: Delete Team
      operationId: delete-team
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: Deletes an individual team. Returns 404 if the team is not found.
      tags:
        - Teams
  /teams/{teamId}/assigned-roles:
    parameters:
      - schema:
          type: string
          format: uuid
          example: e81bc3e5-e9db-4764-b7dd-e81e39072cbe
        name: teamId
        in: path
        required: true
        description: The team ID
    get:
      summary: List Team Roles
      tags:
        - Roles
      responses:
        '200':
          $ref: '#/components/responses/AssignedRoleCollection'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: list-team-roles
      description: Lists the roles belonging to a team.
      parameters:
        - schema:
            type: object
            properties:
              role_name:
                $ref: '#/components/schemas/StringFieldFilter'
              entity_type_name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter roles returned in the response.
          required: false
    post:
      summary: Assign Role
      operationId: teams-assign-role
      responses:
        '201':
          $ref: '#/components/responses/AssignedRoleSingle'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: Assigns a role to a team. Returns 409 if role is already assigned.
      requestBody:
        $ref: '#/components/requestBodies/AssignRole'
      tags:
        - Roles
  /teams/{teamId}/assigned-roles/{roleId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: e81bc3e5-e9db-4764-b7dd-e81e39072cbe
        name: teamId
        in: path
        required: true
        description: The team ID.
      - schema:
          type: string
          example: 8350205f-a305-4e39-abe9-bc082a80091a
          format: uuid
        name: roleId
        in: path
        required: true
        description: The role ID.
    delete:
      summary: Remove Role
      operationId: teams-remove-role
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      tags:
        - Roles
      description: >-
        Removes an assigned role from a team. Returns 404 if the requested team
        or assigned role were not found.
  /teams/{teamId}/system-accounts:
    parameters:
      - schema:
          type: string
        name: teamId
        in: path
        required: true
        description: ID of the team.
    get:
      summary: List System Accounts on a Team
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountCollection'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-teams-teamId-system-accounts
      description: >-
        Returns a paginated list of system accounts that belong to the team
        specified in the path parameter.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter system accounts returned in the response.
          required: false
      tags:
        - System Accounts - Team Membership
    post:
      summary: Add System Account to a Team
      operationId: post-teams-teamId-system-accounts
      responses:
        '201':
          description: Created
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        Adds a system account to a team. Returns a 409 if the system account is
        already a member of the team.
      requestBody:
        $ref: '#/components/requestBodies/AddSystemAccountToTeam'
      tags:
        - System Accounts - Team Membership
  /teams/{teamId}/system-accounts/{accountId}:
    parameters:
      - schema:
          type: string
        name: teamId
        in: path
        required: true
        description: ID of the team.
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    delete:
      summary: Remove System Account From Team
      operationId: delete-teams-teamId-system-accounts-accountId
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        Removes a system account from a team. Returns 404 if the team or system
        account were not found.
      tags:
        - System Accounts - Team Membership
  /teams/{teamId}/users:
    parameters:
      - schema:
          type: string
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
          format: uuid
        name: teamId
        in: path
        required: true
        description: ID of the team.
    get:
      summary: List Team Users
      responses:
        '200':
          $ref: '#/components/responses/UserCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: list-team-users
      description: >-
        Returns a paginated list of users that belong to the team specified in
        the path parameter.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/StringFieldEqualsFilter'
              email:
                $ref: '#/components/schemas/StringFieldFilter'
              full_name:
                $ref: '#/components/schemas/StringFieldFilter'
              active:
                $ref: '#/components/schemas/BooleanFieldFilter'
          in: query
          name: filter
          description: Filter users returned in the response.
          required: false
      tags:
        - Team Membership
    post:
      summary: Add User
      operationId: add-user-to-team
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: Adds a user to a team.
      requestBody:
        $ref: '#/components/requestBodies/AddUserToTeam'
      tags:
        - Team Membership
  /teams/{teamId}/users/{userId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: userId
        in: path
        required: true
        description: User ID
      - schema:
          type: string
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
          format: uuid
        name: teamId
        in: path
        required: true
        description: Team ID.
    delete:
      summary: Remove User
      operationId: remove-user-from-team
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        Removes a user from a team.

        If the user was removed, returns a 204 empty response. Returns 404 if
        the user or team were not found.
      tags:
        - Team Membership
  /users:
    get:
      summary: List Users
      tags:
        - Users
      responses:
        '200':
          $ref: '#/components/responses/UserCollection'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
      operationId: list-users
      description: Returns a paginated list of user objects.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/StringFieldEqualsFilter'
              email:
                $ref: '#/components/schemas/StringFieldFilter'
              full_name:
                $ref: '#/components/schemas/StringFieldFilter'
              active:
                $ref: '#/components/schemas/BooleanFieldFilter'
          in: query
          name: filter
          description: Filter users returned in the response.
          required: false
  /users/{userId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: userId
        in: path
        required: true
        description: The ID of the user being deleted.
    get:
      summary: Fetch User
      tags:
        - Users
      responses:
        '200':
          $ref: '#/components/responses/UserSingle'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-user
      description: Returns the user object for the user ID specified as a path parameter.
    patch:
      summary: Update User
      operationId: update-user
      responses:
        '200':
          $ref: '#/components/responses/UserSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: Update an individual user.
      requestBody:
        $ref: '#/components/requestBodies/UpdateUser'
      tags:
        - Users
    delete:
      summary: Delete User
      operationId: delete-user
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        Deletes an individual user. Returns 404 if the requested user was not
        found.
      tags:
        - Users
  /users/{userId}/assigned-roles:
    parameters:
      - schema:
          type: string
          format: uuid
          example: e81bc3e5-e9db-4764-b7dd-e81e39072cbe
        name: userId
        in: path
        required: true
        description: The user ID
    get:
      summary: List User Roles
      tags:
        - Roles
      responses:
        '200':
          $ref: '#/components/responses/AssignedRoleCollection'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: list-user-roles
      description: Lists the roles assigned to a user.
      parameters:
        - schema:
            type: object
            properties:
              role_name:
                $ref: '#/components/schemas/StringFieldFilter'
              entity_type_name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter roles returned in the response.
          required: false
    post:
      summary: Assign Role
      operationId: users-assign-role
      responses:
        '201':
          $ref: '#/components/responses/AssignedRoleSingle'
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/IdentityPermissionDenied'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: Assigns a role to a user. Returns 409 if role is already assigned.
      requestBody:
        $ref: '#/components/requestBodies/AssignRole'
      tags:
        - Roles
  /users/{userId}/assigned-roles/{roleId}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: e81bc3e5-e9db-4764-b7dd-e81e39072cbe
        name: userId
        in: path
        required: true
        description: ID of the user.
      - schema:
          type: string
          example: 8350205f-a305-4e39-abe9-bc082a80091a
          format: uuid
        name: roleId
        in: path
        required: true
        description: ID of the role.
    delete:
      summary: Remove Role
      operationId: users-remove-role
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/IdentityBadRequest'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      tags:
        - Roles
      description: >-
        Removes an assigned role from a user. Returns 404 if the requested user
        or assigned role were not found.
  /users/{userId}/teams:
    parameters:
      - schema:
          type: string
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
          format: uuid
        name: userId
        in: path
        required: true
        description: The user ID.
    get:
      summary: List User Teams
      responses:
        '200':
          $ref: '#/components/responses/TeamCollection'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: list-user-teams
      description: Returns a paginated list of a teams that the user belongs to.
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - schema:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/StringFieldFilter'
          in: query
          name: filter
          description: Filter teams returned in the response.
          required: false
      tags:
        - Team Membership
components:
  schemas:
    PaginatedMeta:
      type: object
      example:
        page:
          number: 2
          size: 10
          total: 100
      title: PaginatedMeta
      description: returns the pagination information
      properties:
        page:
          type: object
          description: >-
            Contains pagination query parameters and the total number of
            entities returned.
          properties:
            number:
              type: integer
              example: 2
              description: Represents the current page number.
            size:
              type: integer
              example: 10
              maximum: 100
              description: Represents the number of entities on the page.
            total:
              type: integer
              example: 100
              maximum: 1000
              description: >-
                Integer indicating the total number of entities in the list of
                results that’s being paginated.
          $ref: '#/components/schemas/PageMeta'
      required:
        - page
    Report:
      type: object
      example:
        summary: Bar chart of status codes by API product for the past 24 hours
        description: >-
          A vertical bar chart grouping data first by API product, then by
          status code, for the past 24 hours.
        value:
          name: Status codes by service
          chart_type: VERTICAL_BAR
          time_range:
            type: RELATIVE
            time_period: 24H
          query:
            metrics:
              - REQUEST_COUNT
            dimensions:
              - API_PRODUCT
              - STATUS_CODE
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The ID of the report.
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: An ISO-8601 timestamp representing when the report was created.
          example: '2022-11-04T20:10:06.927Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: An ISO-8601 timestamp representing when the report was last updated.
          example: '2022-11-04T20:10:06.927Z'
          readOnly: true
        created_by:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The UUID of the Konnect user that created the report.
          readOnly: true
        name:
          type: string
          description: >
            The user-provided name for the report.

            If not provided, the report will be named "Untitled Report" with a
            timestamp suffix.
          maxLength: 255
          minLength: 1
        description:
          type: string
          description: An optional extended description for the report.
        chart_type:
          type: string
          description: Visualization type selected for this report.
          enum:
            - HORIZONTAL_BAR
            - VERTICAL_BAR
            - LINE
          default: HORIZONTAL_BAR
        time_range:
          $ref: '#/components/schemas/TimeRange'
        query:
          type: object
          properties:
            metrics:
              type: array
              minItems: 1
              maxItems: 1
              default:
                - REQUEST_COUNT
              items:
                type: string
                enum:
                  - REQUEST_COUNT
                  - REQUEST_PER_MINUTE
                  - RESPONSE_LATENCY_P99
                  - RESPONSE_LATENCY_P95
                  - RESPONSE_LATENCY_P50
                  - RESPONSE_SIZE_P99
                  - RESPONSE_SIZE_P95
                  - RESPONSE_SIZE_P50
                  - REQUEST_SIZE_P99
                  - REQUEST_SIZE_P95
                  - REQUEST_SIZE_P50
              description: >
                A property of your API (such as request count or latency) that
                you wish to report on.

                Your chosen metric is aggregated within the specified
                dimensions, meaning that if you query 'request count by
                service', you'll receive the total number of requests each
                service received within the given time frame.  Some metrics,
                such as latency and response size, have more complicated
                aggregations: selecting P99 will result in the 99th percentile
                of the chosen metric.
            dimensions:
              type: array
              items:
                type: string
                enum:
                  - API_PRODUCT
                  - API_PRODUCT_VERSION
                  - ROUTE
                  - APPLICATION
                  - STATUS_CODE
                  - STATUS_CODE_GROUPED
                  - GATEWAY_SERVICE
                  - RUNTIME_GROUP
                  - TIME
              description: >
                The dimensions for the report.  A report may have up to 2
                dimensions, including time.

                If the report has a timeseries graph, the time dimension will be
                added automatically if not provided.

                If no dimensions are provided, the report will simply return the
                provided metric aggregated across

                all available data.
              maxItems: 2
              default: []
            granularity:
              type: string
              enum:
                - MINUTELY
                - HOURLY
                - DAILY
                - WEEKLY
              description: >
                `granularity` is only valid for queries that include a time
                dimension, and it specifies the time buckets for the returned
                data.  For example, `MINUTELY` granularity will return
                datapoints for every minute.  Not all granularities are
                available for all time ranges: for example, custom timeframes
                only have `DAILY` granularity.


                If unspecified, a default value for the given time range will be
                chosen according to the following table:


                - `FIFTEEN_MIN`: `MINUTELY`

                - `ONE_HOUR`: `MINUTELY`

                - `SIX_HOUR`: `HOURLY`

                - `TWELVE_HOUR`: `HOURLY`

                - `ONE_DAY`: `HOURLY`

                - `SEVEN_DAY`: `DAILY`

                - `THIRTY_DAY`: `DAILY`

                - `CURRENT_WEEK`: `DAILY`

                - `CURRENT_MONTH`: `DAILY`

                - `PREVIOUS_WEEK`: `DAILY`

                - `PREVIOUS_MONTH`: `DAILY`
            filter:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ApiProductFilter'
                  - $ref: '#/components/schemas/ApiProductVersionFilter'
                  - $ref: '#/components/schemas/RouteFilter'
                  - $ref: '#/components/schemas/ApplicationFilter'
                  - $ref: '#/components/schemas/StatusCodeFilter'
                  - $ref: '#/components/schemas/StatusCodeGroupedFilter'
                  - $ref: '#/components/schemas/GatewayServiceFilter'
                  - $ref: '#/components/schemas/RuntimeGroupFilter'
              default: []
    TimeRange:
      description: >
        The period of time to return data.  Relative time ranges are relative to
        the current moment.  Absolute time ranges specify an unchanging period
        of time.  If not specified, a default relative timeframe of last 24
        hours will be chosen.
      oneOf:
        - $ref: '#/components/schemas/RelativeTimeRange'
        - $ref: '#/components/schemas/AbsoluteTimeRange'
      default:
        type: RELATIVE
        time_period: 24H
    RelativeTimeRange:
      type: object
      properties:
        type:
          type: string
          enum:
            - RELATIVE
        time_period:
          type: string
          description: Query data from the specified period relative to now.
          enum:
            - 15M
            - 1H
            - 6H
            - 12H
            - 24H
            - 7D
            - 30D
            - CURRENT_WEEK
            - CURRENT_MONTH
            - PREVIOUS_WEEK
            - PREVIOUS_MONTH
      required:
        - type
        - time_period
    AbsoluteTimeRange:
      type: object
      properties:
        type:
          type: string
          enum:
            - ABSOLUTE
        start:
          type: string
          format: date
          description: >-
            An ISO-8601 date value specifying the lower bound of the time range,
            inclusive.
          example: '2022-11-04'
        end:
          type: string
          format: date
          description: >-
            An ISO-8601 date value specifying the upper bound of the time range,
            inclusive.
          example: '2022-11-04'
      required:
        - type
        - start
        - end
    FilterType:
      type: string
      description: >-
        The type of filter to apply.  `IN` filters will limit results to only
        the specified values, while `NOT_IN` filters will exclude the specified
        values.
      enum:
        - IN
        - NOT_IN
    ApiProductFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - API_PRODUCT
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            The UUIDs of the API products to include in the results.
          type: array
          items:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      required:
        - dimension
        - type
        - values
    ApiProductVersionFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - API_PRODUCT_VERSION
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            The UUIDs of the API product versions to include in the results.
          type: array
          items:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      required:
        - dimension
        - type
        - values
    RouteFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - ROUTE
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: >
            The routes to include in the results.  Because route UUIDs are only
            unique within a given runtime group, the filter values must be of
            the form "[runtime group UUID]:[route UUID]".
          type: array
          items:
            type: string
            pattern: >-
              ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      required:
        - dimension
        - type
        - values
    ApplicationFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - APPLICATION
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            The UUIDs of the dev portal applications to include in the results.
          type: array
          items:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      required:
        - dimension
        - type
        - values
    StatusCodeFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - STATUS_CODE
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            Only include requests with specific status codes in the results.
          type: array
          items:
            type: integer
            minimum: 100
            maximum: 999
      required:
        - dimension
        - type
        - values
    StatusCodeGroupedFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - STATUS_CODE_GROUPED
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            Only include the given groups of status codes in the results.
          type: array
          items:
            type: string
            pattern: ^\d[xX][xX]$
      required:
        - dimension
        - type
        - values
    GatewayServiceFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - GATEWAY_SERVICE
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: >
            The gateway services to include in the results.  Because gateway
            service UUIDs are only unique within a given runtime group, the
            filter values must be of the form "[runtime group UUID]:[service
            UUID]".
          type: array
          items:
            type: string
            pattern: >-
              ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      required:
        - dimension
        - type
        - values
    RuntimeGroupFilter:
      type: object
      properties:
        dimension:
          description: The dimension to filter.
          type: string
          enum:
            - RUNTIME_GROUP
        type:
          $ref: '#/components/schemas/FilterType'
        values:
          description: |
            The UUIDs of the runtime groups to include in the results.
          type: array
          items:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      required:
        - dimension
        - type
        - values
    APIProductLabels:
      title: Labels
      type: object
      description: >
        description: A maximum of 5 user-defined labels are allowed on this
        resource.

        Keys must not start with kong, konnect, insomnia, mesh, kic or _, which
        are reserved for Kong.

        Keys are case-sensitive.
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z\-._]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
      default: {}
    APIProductFilterParameters:
      title: APIProductFilterParameters
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StringFieldFilter'
    APIProductVersionFilterParameters:
      title: APIProductVersionFilterParameters
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StringFieldFilter'
    SortQuery:
      title: SortQuery
      type: string
      example: name desc
      description: >
        The `asc` suffix is optional as the default sort order is ascending.

        The `desc` suffix is used to specify a descending order.

        Multiple sort attributes may be provided via a comma separated list.

        JSONPath notation may be used to specify a sub-attribute (eg: 'foo.bar
        desc').
    APIProduct:
      title: API Product
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - description
        - portal_ids
        - created_at
        - updated_at
        - labels
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The API product ID.
          readOnly: true
        name:
          type: string
          description: The name of the API product
          example: My Name
        description:
          type: string
          nullable: true
          description: The description of the API product
          example: MyDescription
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product is published
            to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        labels:
          $ref: '#/components/schemas/APIProductLabels'
    APIProductDocumentSummary:
      title: API Product Document Summary
      type: object
      additionalProperties: false
      required:
        - id
        - parent_document_id
        - slug
        - title
        - status
      properties:
        id:
          type: string
          format: uuid
          example: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
          description: The API product document identifier.
          readOnly: true
        parent_document_id:
          type: string
          format: uuid
          nullable: true
          description: The parent API product document identifier.
          example: null
        slug:
          type: string
          pattern: ^[\w-]+$
          description: API product document slug
          example: api-product-document
        status:
          $ref: '#/components/schemas/PublishStatus'
        title:
          type: string
          description: API product document title
          example: API Product Document
    APIProductDocument:
      type: object
      title: ApiProductDocument
      description: an api product document
      required:
        - id
        - parent_document_id
        - title
        - slug
        - status
        - metadata
        - ast
        - updated_at
        - created_at
      properties:
        id:
          type: string
          format: uuid
        parent_document_id:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
        slug:
          type: string
        status:
          type: string
          enum:
            - unpublished
            - published
        metadata:
          type: object
        ast:
          type: array
          items:
            $ref: '#/components/schemas/AnyNode'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    APIProductVersion:
      title: API Product Version
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - gateway_service
        - publish_status
        - deprecated
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
          description: The API product version identifier.
          readOnly: true
        name:
          type: string
          description: The version of the API product
          example: FirstVersion
        gateway_service:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - runtime_group_id
          properties:
            id:
              type: string
              format: uuid
              nullable: true
              description: >-
                The identifier of a gateway service associated with the version
                of the API product.
              example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
            runtime_group_id:
              type: string
              format: uuid
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
        publish_status:
          type: string
          description: The publish status of the API product version
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          description: Indicates if this API product version is deprecated
          example: false
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    APIProductVersionSpec:
      title: API Product Version Spec
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - content
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: 7710d5c4-d902-410b-992f-18b814155b53
          description: The API product version specification identifier.
          readOnly: true
        name:
          type: string
          description: The name of the API product version specification
          example: oas.yaml
        content:
          type: string
          description: The contents of the API product version specification
          example: My YAML or JSON formatted OAS content
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    CreateAPIProductDTO:
      title: Create API Product Request
      description: The request schema to create an API product.
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name of the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
          default: null
        labels:
          $ref: '#/components/schemas/APIProductLabels'
    UpdateAPIProductDTO:
      title: Update API Product Request
      description: The request schema for updating an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name for the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
        labels:
          $ref: '#/components/schemas/APIProductLabels'
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product should be
            published to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
    CreateAPIProductVersionDTO:
      title: Create API Product Version Request
      description: The request schema to create a version of an API product.
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          nullable: false
          description: The publish status of the API product version.
          enum:
            - unpublished
            - published
          example: unpublished
          default: unpublished
        deprecated:
          type: boolean
          nullable: false
          description: Indicates if the version of the API product is deprecated.
          example: false
          default: false
        gateway_service:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - runtime_group_id
          properties:
            id:
              type: string
              format: uuid
              description: >-
                The identifier of a gateway service associated with the version
                of the API product.
              example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
            runtime_group_id:
              type: string
              format: uuid
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    CreateAPIProductVersionSpecDTO:
      title: Create API Product Version Specification Request
      description: >-
        The request schema to create a specification for a version of an API
        product.
      type: object
      additionalProperties: false
      required:
        - name
        - content
      properties:
        name:
          type: string
          nullable: false
          pattern: ^.+(?:\.yaml|\.yml|\.json)$
          minLength: 1
          maxLength: 255
          example: oas.yaml
          description: The name of the API product version specification
        content:
          type: string
          format: byte
          minLength: 1
          example: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
          description: The base64 encoded contents of the API product version specification
    CreateAPIProductDocumentDTO:
      type: object
      title: CreateDocumentPayload
      description: a document payload
      required:
        - slug
        - status
        - title
        - content
      properties:
        parent_document_id:
          type: string
          format: uuid
          nullable: true
          description: parent document id
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          default: null
        slug:
          type: string
          maxLength: 80
          pattern: ^[\w-]+$
          description: >-
            document slug. must be unique accross documents belonging to an api
            product
          example: path-for-seo
        status:
          $ref: '#/components/schemas/PublishStatus'
        title:
          type: string
          minLength: 1
          description: document title
          example: How to create a document in Konnect DocumentHub
        content:
          type: string
          format: byte
          description: Must be a base64 encoded string
          example: YmFzZTY0LWVuY29kZWQgdGV4dCBzdHJpbmc=
        metadata:
          type: object
          nullable: false
          description: metadata of the document
          example:
            author: John Doe
          default: {}
    UpdateAPIProductDocumentDTO:
      type: object
      title: UpdateDocumentAttributesAndContentPayload
      description: a document payload
      properties:
        parent_document_id:
          type: string
          format: uuid
          nullable: true
          description: >
            Parent document Id. If this value is explicitly set to null, the

            document will be put as a top level document at the bottom of the
            tree.
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug:
          type: string
          pattern: ^[\w-]+$
          maxLength: 80
          description: >-
            document slug. must be unique accross documents belonging to an api
            product
          example: path-for-seo
        status:
          $ref: '#/components/schemas/PublishStatus'
        title:
          type: string
          minLength: 1
          description: document title
          example: How to update a document in Konnect DocumentHub
        content:
          type: string
          format: byte
          description: base64 encoded string of the document content
          example: YmFzZTY0LWVuY29kZWQgdGV4dCBzdHJpbmc=
        metadata:
          type: object
          nullable: false
    UpdateAPIProductVersionDTO:
      title: Update API Product Version Request
      description: The request schema for updating a version of an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          description: The publish status of the API product version.
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          description: Indicates if the version of the API product is deprecated.
          example: false
        notify:
          type: boolean
          description: >
            When set to `true`, and all the following conditions are true:

            - version of the API product deprecation has changed from `false` ->
            `true`

            - version of the API product is published


            then consumers of the now deprecated verion of the API product will
            be notified.
          example: true
        gateway_service:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - runtime_group_id
          properties:
            id:
              type: string
              format: uuid
              nullable: true
              description: >-
                The identifier of a gateway service associated with the version
                of the API product.
              example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
            runtime_group_id:
              type: string
              format: uuid
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    UpdateAPIProductVersionSpecDTO:
      title: Update API Product Version Specification Request
      description: >-
        The request schema for updating a specification for a version of an API
        product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: false
          pattern: ^.+(?:\.yaml|\.yml|\.json)$
          minLength: 1
          maxLength: 255
          example: oas.yaml
          description: The name of the API product version specification
        content:
          type: string
          format: byte
          minLength: 1
          example: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
          description: The base64 encoded contents of the API product version specification
    StringFieldEqualsFilter:
      title: StringFieldEqualsFilter
      description: Filter a string value by exact match.
      type: string
    StringFieldContainsFilter:
      type: object
      title: StringFieldContainsFilter
      description: Filter a string value field by partial contains.
      properties:
        contains:
          type: string
      required:
        - contains
    StringFieldFilter:
      title: StringFieldFilter
      description: Filter a string value field either by exact match or partial contains.
      oneOf:
        - $ref: '#/components/schemas/StringFieldEqualsFilter'
        - $ref: '#/components/schemas/StringFieldContainsFilter'
    PageMeta:
      type: object
      description: >-
        Contains pagination query parameters and the total number of objects
        returned.
      required:
        - number
        - size
        - total
      properties:
        number:
          type: number
          example: 1
        size:
          type: number
          example: 10
        total:
          type: number
          example: 100
    CreatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity creation date.
      readOnly: true
    UpdatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity update date.
      readOnly: true
    BaseError:
      type: object
      title: Error
      description: standard error
      required:
        - status
        - title
        - instance
        - detail
      properties:
        status:
          type: integer
          description: >
            The HTTP status code of the error. Useful when passing the response

            body to child properties in a frontend UI. Must be returned as an
            integer.
          readOnly: true
        title:
          type: string
          description: |
            A short, human-readable summary of the problem. It should not
            change between occurences of a problem, except for localization.
            Should be provided as "Sentence case" for direct use in the UI.
          readOnly: true
        type:
          type: string
          description: The error type.
          readOnly: true
        instance:
          type: string
          description: |
            Used to return the correlation ID back to the user, in the format
            kong:trace:<correlation_id>. This helps us find the relevant logs
            when a customer reports an issue.
          readOnly: true
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurence of the
            problem.

            This field may contain request/entity data to help the user
            understand

            what went wrong. Enclose variable values in square brackets. Should
            be

            provided as "Sentence case" for direct use in the UI.
          readOnly: true
    InvalidRules:
      description: invalid parameters rules
      type: string
      readOnly: true
      nullable: true
      enum:
        - required
        - enum
        - min_length
        - max_length
        - min_digits
        - min_lowercase
        - min_uppercase
        - min_symbols
        - is_array
        - is_base64
        - is_boolean
        - is_date_time
        - is_integer
        - is_null
        - is_number
        - is_object
        - is_string
        - is_uuid
        - unknown_property
        - is_label
        - matches_regex
    InvalidParameterChoiceItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          $ref: '#/components/schemas/InvalidRules'
        reason:
          type: string
          example: is a required field
          readOnly: true
        choices:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
      required:
        - field
        - reason
    InvalidParameterDependentItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: true
          enum:
            - dependent_fields
        reason:
          type: string
          example: is a required field
          readOnly: true
        dependents:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
      required:
        - field
        - rule
        - reason
        - dependents
    InvalidParameters:
      type: array
      nullable: false
      uniqueItems: true
      minItems: 1
      description: invalid parameters
      items:
        $ref: '#/components/schemas/InvalidParameterChoiceItem'
    BadRequestError:
      type: object
      required:
        - invalid_parameters
      properties:
        status:
          example: 400
        title:
          example: Bad Request
        type:
          example: https://httpstatuses.com/400
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid request body
        invalid_parameters:
          $ref: '#/components/schemas/InvalidParameters'
      allOf:
        - $ref: '#/components/schemas/BaseError'
    UnauthorizedError:
      type: object
      properties:
        status:
          example: 401
        title:
          example: Unauthorized
        type:
          example: https://httpstatuses.com/401
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid credentials
      allOf:
        - $ref: '#/components/schemas/BaseError'
    ForbiddenError:
      type: object
      properties:
        status:
          example: 403
        title:
          example: Forbidden
        type:
          example: https://httpstatuses.com/403
        instance:
          example: kong:trace:1234567890
        detail:
          example: Forbidden
      allOf:
        - $ref: '#/components/schemas/BaseError'
    NotFoundError:
      type: object
      properties:
        status:
          example: 404
        title:
          example: Not Found
        type:
          example: https://httpstatuses.com/404
        instance:
          example: kong:trace:1234567890
        detail:
          example: Not found
      allOf:
        - $ref: '#/components/schemas/BaseError'
    UnsupportedMediaTypeError:
      type: object
      properties:
        status:
          example: 415
        title:
          example: UnsupportedMediaType
        type:
          example: https://httpstatuses.com/415
        instance:
          example: kong:trace:1234567890
        detail:
          example: UnsupportedMediaType
      allOf:
        - $ref: '#/components/schemas/BaseError'
    PublishStatus:
      description: document publish status
      type: string
      enum:
        - published
        - unpublished
    DocumentTree:
      type: object
      title: DocumentTree
      description: a document tree
      required:
        - id
        - title
        - slug
        - metadata
        - children
        - status
      properties:
        id:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        parent_document_id:
          type: string
          format: uuid
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
          nullable: true
        title:
          type: string
        slug:
          type: string
          description: document slug
          example: path-for-seo
        metadata:
          type: object
          description: metadata of the document
          example:
            author: John Doe
        status:
          $ref: '#/components/schemas/PublishStatus'
    BaseNode:
      type: object
      required:
        - type
      properties:
        type:
          type: string
    AnyNode:
      oneOf:
        - $ref: '#/components/schemas/DocumentBlock'
        - $ref: '#/components/schemas/HeadingBlock'
        - $ref: '#/components/schemas/BlockQuoteBlock'
        - $ref: '#/components/schemas/ParagraphBlock'
        - $ref: '#/components/schemas/TextBlock'
        - $ref: '#/components/schemas/BreakBlock'
        - $ref: '#/components/schemas/CodeBlock'
        - $ref: '#/components/schemas/ListBlock'
        - $ref: '#/components/schemas/ListItemBlock'
        - $ref: '#/components/schemas/Text'
        - $ref: '#/components/schemas/Emphasis'
        - $ref: '#/components/schemas/Code'
        - $ref: '#/components/schemas/Link'
        - $ref: '#/components/schemas/Image'
        - $ref: '#/components/schemas/StrikeThrough'
        - $ref: '#/components/schemas/TableBlock'
        - $ref: '#/components/schemas/TableHeaderBlock'
        - $ref: '#/components/schemas/TableCellBlock'
        - $ref: '#/components/schemas/TableRowBlock'
        - $ref: '#/components/schemas/TaskCheckbox'
    BlockNode:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            children:
              description: List of children nodes of the current node
              type: array
              items:
                $ref: '#/components/schemas/AnyNode'
    DocumentBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            version:
              type: string
      description: content of the document
      example:
        type: doc
        content:
          - type: paragraph
            content:
              - type: text
                text: Hello World
    HeadingBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            level:
              description: Level of the heading which maps to HTML <h> tag
              type: number
              minimum: 1
              maximum: 6
    BlockQuoteBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    ParagraphBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    TextBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    BreakBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    CodeBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            lang:
              type: string
    ListBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            isOrdered:
              description: Defines if the list is ordered or not
              type: boolean
    ListItemBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    Text:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            text:
              type: string
            hardBreak:
              description: >
                If this property is true the end of this block should

                be a carriage return and not concatenated to the next Text
                block.
              type: boolean
            softBreak:
              description: >
                If this property is true the end of this block should should be

                concatenated with a space caracter before the next block. This
                is

                the flag showing that the parsed markdown block was at the end
                of

                the line.
              type: boolean
    Emphasis:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            level:
              type: number
              minimum: 1
              maximum: 2
              description: |
                Level of emphasis
                1 - italic
                2 - bold
    Code:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - $ref: '#/components/schemas/BlockNode'
    Link:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            href:
              description: Target url of the link
              type: string
            title:
              description: Title of the link
              type: string
    Image:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            url:
              description: Url of the image
              type: string
            alt:
              description: Alternate tag of the image
              type: string
            title:
              description: Title of the image
              type: string
    StrikeThrough:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
    TaskCheckbox:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            checked:
              type: boolean
              description: State of the checkbox
          required:
            - checked
    AlignmentKind:
      type: string
      enum:
        - left
        - right
        - center
        - none
    TableAlignments:
      type: object
      properties:
        alignments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AlignmentKind'
      required:
        - alignments
    TableBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - $ref: '#/components/schemas/TableAlignments'
    TableHeaderBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - $ref: '#/components/schemas/TableAlignments'
    TableCellBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            alignment:
              $ref: '#/components/schemas/AlignmentKind'
    TableRowBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - $ref: '#/components/schemas/TableAlignments'
    ConflictError:
      type: object
      properties:
        status:
          example: 409
        title:
          example: Conflict
        type:
          example: https://httpstatuses.com/409
        instance:
          example: kong:trace:1234567890
        detail:
          example: Conflict
      allOf:
        - $ref: '#/components/schemas/BaseError'
    JWK:
      title: JWK
      type: object
      description: An individual JSON Web Key.
      properties:
        kty:
          type: string
          description: The algorithm family of the key.
        alg:
          type: string
          description: The algorithm intended for use with the key.
        kid:
          type: string
          description: The unique ID of the key.
        crv:
          type: string
          description: The cryptographic curve used with the key.
        x:
          type: string
          description: The x coordinate for the Elliptic Curve point.
      example:
        kty: OKP
        alg: EdDSA
        kid: 3f60bc4376c937154f3c004ebd180433ac0d03e6
        crv: Ed25519
        x: XWxGtApfcqmKI7p0OKnF5JSEWMVoLsytFXLEP7xZ_l8
    Auth0Organization:
      title: Auth0 organization schema.
      type: object
      description: A single auth0 organization.
      properties:
        name:
          type: string
          example: My Organization
          description: The name of the organization.
          readOnly: true
        login_path:
          type: string
          example: >-
            /v2/authenticate/federated?org_id=7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The login path of the organization.
          readOnly: true
    Auth0Registration:
      title: Auth0 organization registration response
      type: object
      description: A successful Auth0 organization registration response.
      properties:
        organization_id:
          type: string
        login_path:
          type: string
    IdP:
      title: IdP Configuration
      type: object
      description: >-
        The IdP object contains the configuration data for the OIDC
        authentication integration.


        NOTE: The `openid` scope is required. Removing it could break the OIDC
        integration.
      properties:
        issuer:
          type: string
          format: uri
          example: https://myidp.com/oauth2
        login_path:
          type: string
          example: myapp
        client_id:
          type: string
          example: YOUR_CLIENT_ID
        scopes:
          type: array
          default:
            - email
            - openid
            - profile
          items:
            type: string
        claim_mappings:
          type: object
          minProperties: 3
          properties:
            name:
              type: string
              example: name
              default: name
            email:
              type: string
              example: email
              default: email
            groups:
              type: string
              default: groups
              example: custom-groups-claim
    User:
      title: User
      type: object
      description: >-
        The user object contains information about an individual user who can
        use the Konnect application and API.
      example:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        email: user@email.com
        full_name: Test User
        preferred_name: test
        active: true
        created_at: '2022-02-07T17:46:57.52Z'
        updated_at: '2022-10-08T17:00:00.52Z'
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The User ID.
          readOnly: true
        email:
          type: string
          format: email
          example: user@email.com
          maxLength: 250
          description: The email registered to the user.
        full_name:
          type: string
          pattern: ^[\w \W]+$
          maxLength: 250
          description: The User's full name.
          example: Jane Doe
        preferred_name:
          type: string
          example: Jane
          maxLength: 250
          description: The User's preferred name.
        active:
          type: boolean
          default: true
          description: Returns True if a user has verified their email address.
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-02-07T17:46:57.52Z'
          description: The time stamp for the date the account was registered.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-10-08T17:00:00.52Z'
          description: >-
            A Unix timestamp representation of the most recent change to the
            User account.
          readOnly: true
    Team:
      title: Team
      type: object
      description: The team object contains information about a group of users.
      example:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        name: IDM - Developers
        description: The developers for the IDM API.
        system_team: false
        created_at: '1992-02-07T17:46:57.52Z'
        updated_at: '2022-08-31T17:00:00.52Z'
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The team ID.
          readOnly: true
        name:
          type: string
          pattern: ^[\w \W]+$
          example: IDM - Developers
          maxLength: 250
          description: The name of the team.
        description:
          type: string
          example: The developers for the IDM API.
          maxLength: 250
          description: The team description in Konnect.
        system_team:
          type: boolean
          default: false
          description: >-
            Returns True if a user belongs to a `system_team`. System teams are
            teams that can manage Konnect objects, like "Organization Admin", or
            "Service"
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '1992-02-07T17:46:57.52Z'
          description: A Unix timestamp representation of team creation.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-02-07T17:00:00.52Z'
          description: >
            A Unix timestamp representation of the most recent change to the
            team object in Konnect.
          readOnly: true
    TeamMapping:
      title: TeamMapping
      type: object
      description: A team assignment is a mapping of an IdP group to a Konnect Team.
      example:
        group: Service Developers
        team_ids:
          - 6801e673-cc10-498a-94cd-4271de07a0d3
      properties:
        group:
          type: string
          example: Service Developers
          description: The IdP group.
        team_ids:
          type: array
          uniqueItems: true
          description: An array of ID's that are mapped to the specified group.
          items:
            type: string
            format: uuid
            example: 6801e673-cc10-498a-94cd-4271de07a0d3
    TeamGroupMapping:
      title: TeamGroupMapping
      type: object
      description: A map of Konnect Team to IdP groups.
      example:
        team_id: 6801e673-cc10-498a-94cd-4271de07a0d3
        groups:
          - Tech Leads
          - API Engineers
      properties:
        team_id:
          type: string
          format: uuid
          example: 6801e673-cc10-498a-94cd-4271de07a0d3
          description: The Konnect team ID.
        groups:
          type: array
          uniqueItems: true
          description: The IdP groups that are mapped to the specified team.
          items:
            type: string
            example: API Engineers
    AssignedRole:
      title: AssignedRole
      type: object
      description: An assigned role is a role that has been assigned to a user or team.
      example:
        id: 54cc6168-ebb1-4300-8168-d62a0dd08fc8
        role_name: Viewer
        entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
        entity_type_name: Runtime Groups
        entity_region: us
      properties:
        id:
          type: string
          format: uuid
          example: eaf7adf1-32c8-4bbf-b960-d1f8456afe67
          description: The ID of the role assignment.
        role_name:
          type: string
          example: Viewer
          description: Name of the role being assigned.
        entity_id:
          type: string
          format: uuid
          example: 817d0422-45c9-4d88-8d64-45aef05c1ae7
          description: A RBAC entity ID.
        entity_type_name:
          type: string
          example: Runtime Groups
          description: Name of the entity type the role is being assigned to.
        entity_region:
          type: string
          enum:
            - us
            - eu
            - '*'
          example: eu
          description: Region of the entity.
    ParameterizedAssignedRole:
      title: ParameterizedAssignedRole
      type: object
      description: >-
        A parameterized assigned role is a role that has been assigned to a
        managed system account with additional parameters.
      example:
        id: 54cc6168-ebb1-4300-8168-d62a0dd08fc8
        role_name: Viewer
        entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
        entity_type_name: Runtime Groups
        entity_region: us
        parameters:
          zoneName: zone3
      x-internal: true
      properties:
        id:
          type: string
          format: uuid
          example: eaf7adf1-32c8-4bbf-b960-d1f8456afe67
          description: The ID of the role assignment.
        role_name:
          type: string
          example: Viewer
          description: Name of the role being assigned.
        entity_id:
          type: string
          format: uuid
          example: 817d0422-45c9-4d88-8d64-45aef05c1ae7
          description: A RBAC entity ID.
        entity_type_name:
          type: string
          example: Runtime Groups
          description: Name of the entity type the role is being assigned to.
        entity_region:
          type: string
          enum:
            - us
            - eu
            - '*'
          example: eu
          description: Region of the entity.
    SystemAccount:
      title: System Account
      type: object
      example:
        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name: Example System Account
        description: This is a sample system account description.
        created_at: '2022-08-24T14:15:22Z'
        updated_at: '2022-10-05T10:33:49Z'
        konnect_managed: false
      description: Schema of the system account.
      properties:
        id:
          type: string
          format: uuid
          description: ID of the system account.
          readOnly: true
        name:
          type: string
          description: Name of the system account.
        description:
          type: string
          description: Description of the system account.
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the system account was created.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp of when the system account was last updated.
          readOnly: true
        konnect_managed:
          type: boolean
          description: The system account is managed by Konnect (true/false).
    SystemAccountAccessToken:
      title: System Account Access Token
      example:
        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name: Sample Access Token
        created_at: '2022-08-01T14:16:09Z'
        updated_at: '2022-08-02T08:35:49Z'
        expires_at: '2022-12-31T12:52:23Z'
        last_used_at: '2022-10-24T13:05:42Z'
      description: Schema of the system account access token.
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the system account access token.
          readOnly: true
        name:
          type: string
          description: Name of the system account access token.
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token was created.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token was last updated.
          readOnly: true
        expires_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token will expire.
        last_used_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token was last used.
          readOnly: true
    BooleanFieldFilter:
      example: true
      title: BooleanFieldFilter
      description: Filter by a boolean value (true/false).
      type: boolean
    PortalTeamGroupMapping:
      title: PortalTeamGroupMapping
      type: object
      description: A map of Konnect Team to IdP groups.
      example:
        team_id: 6801e673-cc10-498a-94cd-4271de07a0d3
        groups:
          - Tech Leads
          - API Engineers
      properties:
        team_id:
          type: string
          format: uuid
          example: 6801e673-cc10-498a-94cd-4271de07a0d3
          description: The Konnect team ID.
        groups:
          type: array
          uniqueItems: true
          description: The IdP groups that are mapped to the specified team.
          items:
            type: string
            example: API Engineers
    Developer:
      title: Developer
      type: object
      description: A developer is an individual who can use a developer portal.
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          readOnly: true
        email:
          type: string
          format: email
          example: developer@email.com
          maxLength: 250
        full_name:
          type: string
          pattern: ^[\w \W]+$
          example: API Developer
          maxLength: 250
        status:
          type: string
          default: pending
          readOnly: true
        portal_id:
          type: string
          example: 51d313f4-e13d-43d0-a2b4-8d4bf2aa172b
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-02-07T17:46:57.52Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-10-08T17:00:00.52Z'
          readOnly: true
      example:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        email: user@email.com
        full_name: API Developer
        preferred_name: apidev
        status: active
        portal_id: 51d313f4-e13d-43d0-a2b4-8d4bf2aa172b
        created_at: '2022-02-07T17:46:57.52Z'
        updated_at: '2022-10-08T17:00:00.52Z'
    PortalTeam:
      title: Team
      type: object
      description: A team is a group of developers.
      example:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        name: IDM - Developers
        description: The developers for the IDM API.
        created_at: '1992-02-07T17:46:57.52Z'
        updated_at: '2022-08-31T17:00:00.52Z'
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          readOnly: true
        name:
          type: string
          pattern: ^[\w \W]+$
          example: IDM - Developers
          maxLength: 250
        description:
          type: string
          example: The developers for the IDM API.
          maxLength: 250
        created_at:
          type: string
          format: date-time
          example: '1992-02-07T17:46:57.52Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-02-07T17:00:00.52Z'
          readOnly: true
    PortalAssignedRole:
      title: AssignedRole
      type: object
      description: An assigned role associates a service and an action to a team.
      example:
        id: 1a3c2169-27f8-4594-926b-41df3432d5dc
        role_name: API Viewer
        entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
        entity_type_name: Services
        entity_region: us
      properties:
        id:
          type: string
          format: uuid
          example: eaf7adf1-32c8-4bbf-b960-d1f8456afe67
        role_name:
          type: string
          example: API Viewer
        entity_id:
          type: string
          format: uuid
          example: 817d0422-45c9-4d88-8d64-45aef05c1ae7
        entity_type_name:
          type: string
          example: Services
        entity_region:
          type: string
          enum:
            - us
            - eu
            - '*'
          example: eu
    CA-Certificate:
      description: >-
        A CA certificate object represents a trusted CA. These objects are used
        by Kong to verify the validity of a client or server certificate. CA
        Certificates can be both tagged and filtered by tags.
      example:
        cert: |-
          -----BEGIN CERTIFICATE-----
          certificate-content
          -----END CERTIFICATE-----
        id: b2f34145-0343-41a4-9602-4c69dec2f260
      type: object
      title: CA-Certificate
      properties:
        cert:
          description: PEM-encoded public certificate of the CA.
          type: string
          example: '-----BEGIN CERTIFICATE-----...'
        cert_digest:
          description: SHA256 hex digest of the public certificate.
          type: string
          example: c641e28d77e93544f2fa87b2cf3f3d51...
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
          example: 1422386534
        updated_at:
          description: Unix epoch when the resouce was updated.
          type: integer
          example: 1422386534
        id:
          type: string
          example: 04fbeacf-a9f1-4a5d-ae4a-b0407445db3f
          format: uuid
        tags:
          description: >-
            An optional set of strings associated with the Certificate for
            grouping and filtering.
          type: array
          items:
            type: string
            example: '[user-level, low-priority]'
      x-examples:
        200 - list of multiple certificates:
          data:
            - id: 43429efd-b3a5-4048-94cb-5cc4029909bb
              created_at: 1422386534
              updated_at: 1422386534
              cert: '-----BEGIN CERTIFICATE-----...'
              cert_digest: c641e28d77e93544f2fa87b2cf3f3d51...
              tags:
                - user-level
                - low-priority
            - id: d26761d5-83a4-4f24-ac6c-cff276f2b79c
              created_at: 1422386534
              updated_at: 1422386534
              cert: '-----BEGIN CERTIFICATE-----...'
              cert_digest: c641e28d77e93544f2fa87b2cf3f3d51...
              tags:
                - admin
                - high-priority
                - critical
          next: >-
            http://localhost:8001/ca_certificates?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
    Certificate:
      description: >-
        A certificate object represents a public certificate. These fields are
        _referenceable_, and can be stored as
        [secrets](http://docs.konqhq.com/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
        in a vault. References must follow a [specific
        format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
      example:
        cert: |-
          -----BEGIN CERTIFICATE-----
          certificate-content
          -----END CERTIFICATE-----
        id: b2f34145-0343-41a4-9602-4c69dec2f269
        key: |-
          -----BEGIN PRIVATE KEY-----
          private-key-content
          -----END PRIVATE KEY-----
      type: object
      title: Certificate
      properties:
        cert:
          description: >-
            PEM-encoded public certificate chain of the SSL key This field is
            referenceable and can be stored in a vault. References must follow a
            [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
          example: >-
            -----BEGIN CERTIFICATE-----\ncertificate-content\n-----END
            CERTIFICATE-----
        cert_alt:
          description: >-
            PEM-encoded public certificate chain of the alternate SSL key pair.
            This should only be set if you have both RSA and ECDSA types of
            certificate available and would like Kong to prefer serving using
            ECDSA certs.
          type: string
          example: '-----BEGIN CERTIFICATE-----...'
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
          example: 1422386534
        updated_at:
          description: Unix epoch when the resouce was updated.
          type: integer
          example: 1422386534
        id:
          type: string
          description: The UUID representation of the certificate object.
          example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
          format: uuid
        key:
          description: >-
            PEM-encoded private key of the SSL key pair. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
          example: ' -----BEGIN RSA PRIVATE KEY-----...'
        key_alt:
          description: >-
            PEM-encoded private key of the alternate SSL key pair. This should
            only be set if you have both RSA and ECDSA types of certificate
            available and would like Kong to prefer serving using ECDSA certs
            when client advertises support for it. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
          example: '-----BEGIN EC PRIVATE KEY-----...'
        tags:
          description: >-
            An optional set of strings associated with the Certificate for
            grouping and filtering.
          type: array
          items:
            type: string
            example: user-level
    Key:
      description: >-
        A Key object holds a representation of asymmetric keys in various
        formats. When Kong or a Kong plugin requires a specific public or
        private key to perform certain operations, it can use this entity.
      example:
        id: d958f66b-8e99-44d2-b0b4-edd5bbf24658
        jwk: '{alg:RSA,  kid: 42,  ...}'
        kid: '42'
        name: a-key
        pem:
          private_key: '-----BEGIN'
          public_key: '-----BEGIN'
        set:
          id: b86b331c-dcd0-4b3e-97ce-47c5a9543031
      type: object
      title: Key
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
          example: 1422386534
        id:
          type: string
          example: 24D0DBDA-671C-11ED-BA0B-EF1DCCD3725F
          description: The unique identifier or the prefix of the Vault to delete.
        jwk:
          description: A JSON Web Key represented as a string.
          type: string
          example: '{\alg\:\RSA\,  \kid\: \42\,  ...}'
        kid:
          description: A unique identifier for a key.
          type: string
          example: '42'
        updated_at:
          description: Unix epoch when the resouce was updated.
          type: integer
          example: 1422386534
        pem:
          description: A keypair in PEM format.
          type: object
          properties:
            private_key:
              type: string
              example: '-----BEGIN'
            public_key:
              type: string
              example: '-----BEGIN'
        set:
          additionalProperties: false
          description: The id (an UUID) of the key-set with which to associate the key.
          type: object
          properties:
            id:
              type: string
              example: 46CA83EE-671C-11ED-BFAB-2FE47512C77A
        tags:
          description: >-
            An optional set of strings associated with the Key for grouping and
            filtering.
          type: array
          items:
            type: string
    Plugin:
      description: >-
        A Plugin entity represents a plugin configuration that will be executed
        during the HTTP request/response lifecycle.
      example:
        config:
          anonymous: null
          hide_credentials: false
          key_in_body: false
          key_in_header: true
          key_in_query: true
          key_names:
            - apikey
          run_on_preflight: true
        enabled: true
        id: 3fd1eea1-885a-4011-b986-289943ff8177
        name: key-auth
        protocols:
          - grpc
          - grpcs
          - http
          - https
      properties:
        config:
          description: >-
            The configuration properties for the Plugin which can be found on
            the plugins documentation page in the [Kong
            Hub](https://docs.konghq.com/hub/).
          type: object
        consumer:
          additionalProperties: false
          description: >-
            If set, the plugin will activate only for requests where the
            specified has been authenticated. (Note that some plugins can not be
            restricted to consumers this way.). Leave unset for the plugin to
            activate regardless of the authenticated Consumer.
          properties:
            id:
              type: string
          type: object
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
        enabled:
          default: true
          description: Whether the plugin is applied.
          type: boolean
        id:
          type: string
        instance_name:
          type: string
        name:
          description: >-
            The name of the Plugin that's going to be added. Currently, the
            Plugin must be installed in every Kong instance separately.
          type: string
        ordering:
          type: object
        protocols:
          default:
            - grpc
            - grpcs
            - http
            - https
          description: >-
            A list of the request protocols that will trigger this plugin. The
            default value, as well as the possible values allowed on this field,
            may change depending on the plugin type. For example, plugins that
            only work in stream mode will only support `tcp` and `tls`.
          items:
            type: string
          type: array
        route:
          additionalProperties: false
          description: >-
            If set, the plugin will only activate when receiving requests via
            the specified route. Leave unset for the plugin to activate
            regardless of the route being used.
          properties:
            id:
              type: string
          type: object
        service:
          additionalProperties: false
          description: >-
            If set, the plugin will only activate when receiving requests via
            one of the routes belonging to the specified service. Leave unset
            for the plugin to activate regardless of the service being matched.
          properties:
            id:
              type: string
          type: object
        tags:
          description: >-
            An optional set of strings associated with the Plugin for grouping
            and filtering.
          items:
            type: string
          type: array
      type: object
      title: Plugin
    Route:
      description: >-
        Route entities define rules to match client requests. Every request
        matching a given route will be proxied to its associated service.
      example:
        hosts:
          - foo.example.com
          - foo.example.us
        id: 56c4566c-14cc-4132-9011-4139fcbbe50a
        name: example-route
        paths:
          - /v1
          - /v2
        service:
          id: bd380f99-659d-415e-b0e7-72ea05df3218
      type: object
      title: Route
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
        destinations:
          description: >-
            A list of IP destinations of incoming connections that match this
            route when using stream routing. Each entry is an object with fields
            ip (optionally in CIDR range notation) and/or port.
          type: array
          items:
            type: object
            properties: {}
        headers:
          description: >-
            One or more lists of values indexed by header name that will cause
            this route to match if present in the request. The `Host` header
            cannot be used with this attribute: hosts should be specified using
            the `hosts` attribute. When `headers` contains only one value and
            that value starts with the special prefix `~*`, the value is
            interpreted as a regular expression.
          type: object
        hosts:
          description: >-
            A list of domain names that match this route. Note that the hosts
            value is case sensitive.
          type: array
          items:
            type: string
            example: foo.example.com
        https_redirect_status_code:
          default: 426
          description: >-
            The status code Kong responds with when all properties of a route
            match except the protocol i.e. if the protocol of the request is
            `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if
            the field is set to 301, 302, 307 or 308. Note: This config applies
            only if the route is configured to only accept the `https` protocol.
          type: integer
        id:
          type: string
          example: 56c4566c-14cc-4132-9011-4139fcbbe50a
        methods:
          description: A list of HTTP methods that match this route.
          type: array
          items:
            type: string
        name:
          description: >-
            The name of the route. Route names must be unique, and they are case
            sensitive. For example, there can be two different routes named test
            and Test.
          type: string
        path_handling:
          default: v0
          description: >-
            Controls how the service path, route path and requested path are
            combined when sending a request to the upstream. See above for a
            detailed description of each behavior.
          type: string
        paths:
          description: A list of paths that match this route.
          type: array
          items:
            type: string
        preserve_host:
          default: false
          description: >-
            When matching a route via one of the `hosts` domain names, use the
            request `Host` header in the upstream request headers. If set to
            `false`, the upstream `Host` header will be that of the service's
            `host`.
          type: boolean
        protocols:
          default:
            - http
            - https
          description: >-
            An array of the protocols this route should allow. See the [route
            Object](#route-object) section for a list of accepted protocols.
            When set to only `https`, HTTP requests are answered with an upgrade
            error. When set to only `http`, HTTPS requests are answered with an
            error.
          type: array
          items:
            type: string
        regex_priority:
          default: 0
          description: >-
            A number used to choose which route resolves a given request when
            several routes match it using regexes simultaneously. When two
            routes match the path and have the same `regex_priority`, the older
            one (lowest `created_at`) is used. Note that the priority for
            non-regex routes is different (longer non-regex routes are matched
            before shorter ones).
          type: integer
        request_buffering:
          default: true
          description: >-
            Whether to enable request body buffering or not. With HTTP 1.1, it
            may make sense to turn this off on services that receive data with
            chunked transfer encoding.
          type: boolean
        response_buffering:
          default: true
          description: >-
            Whether to enable response body buffering or not. With HTTP 1.1, it
            may make sense to turn this off on services that send data with
            chunked transfer encoding.
          type: boolean
        service:
          additionalProperties: false
          description: >-
            The service this route is associated to. This is where the route
            proxies traffic to.
          type: object
          properties:
            id:
              type: string
        snis:
          description: A list of SNIs that match this route when using stream routing.
          type: array
          items:
            type: string
        sources:
          description: >-
            A list of IP sources of incoming connections that match this route
            when using stream routing. Each entry is an object with fields ip
            (optionally in CIDR range notation) and/or port.
          type: array
          items:
            type: object
            properties: {}
        strip_path:
          default: true
          description: >-
            When matching a route via one of the `paths`, strip the matching
            prefix from the upstream request URL.
          type: boolean
        tags:
          description: >-
            An optional set of strings associated with the route for grouping
            and filtering.
          type: array
          items:
            type: string
        updated_at:
          description: Unix epoch when the resource was last updated.
          type: integer
    SNI:
      description: >-
        An SNI object represents a many-to-one mapping of hostnames to a
        certificate. That is, a certificate object can have many hostnames
        associated with it; when Kong receives an SSL request, it uses the SNI
        field in the Client Hello to lookup the certificate object based on the
        SNI associated with the certificate.
      example:
        certificate:
          id: bd380f99-659d-415e-b0e7-72ea05df3218
        id: 36c4566c-14cc-4132-9011-4139fcbbe50a
        name: some.example.org
      type: object
      properties:
        certificate:
          additionalProperties: false
          description: >-
            The id (a UUID) of the certificate with which to associate the SNI
            hostname. The Certificate must have a valid private key associated
            with it to be used by the SNI object.
          type: object
          properties:
            id:
              type: string
              example: 147f5ef0-1ed6-4711-b77f-489262f8bff7
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
          example: 1422386534
        id:
          type: string
          example: b87eb55d-69a1-41d2-8653-8d706eecefc0
        name:
          description: The SNI name to associate with the given certificate.
          type: string
          example: my-sni
        tags:
          description: >-
            An optional set of strings associated with the SNIs for grouping and
            filtering.
          type: array
          items:
            type: string
            example: user-level, enterprise
    Target:
      description: >-
        A target is an ip address/hostname with a port that identifies an
        instance of a backend service. Every upstream can have many targets, and
        the targets can be dynamically added, modified, or deleted. Changes take
        effect on the fly. To disable a target, post a new one with `weight=0`;
        alternatively, use the `DELETE` convenience method to accomplish the
        same. The current target object definition is the one with the latest
        `created_at`.
      example:
        id: 089292a7-ba3d-4d88-acf0-97b4b2e2621a
        target: 203.0.113.42
        upstream:
          id: 5f1d7e76-2fed-4806-a6af-869984f025cb
        weight: 100
      type: object
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          type: number
          example: 1422386534
        updated_at:
          description: Unix epoch when the resource was last updated.
          type: integer
          example: 1422386534
        id:
          type: string
          example: 173a6cee-90d1-40a7-89cf-0329eca780a6
          description: >-
            The unique identifier or the name of the upstream for which to
            update the target.
        tags:
          description: >-
            An optional set of strings associated with the Target for grouping
            and filtering.
          type: array
          items:
            type: string
        target:
          description: >-
            The target address (ip or hostname) and port. If the hostname
            resolves to an SRV record, the `port` value will be overridden by
            the value from the DNS record.
          type: string
        upstream:
          additionalProperties: false
          type: object
          description: >-
            The unique identifier or the name of the upstream for which to
            update the target.
          properties:
            id:
              type: string
              example: bdab0e47-4e37-4f0b-8fd0-87d95cc4addc
        weight:
          default: 100
          description: >-
            The weight this target gets within the upstream loadbalancer
            (`0`-`65535`). If the hostname resolves to an SRV record, the
            `weight` value will be overridden by the value from the DNS record.
          type: integer
          example: 100
      x-examples:
        Example 1:
          created_at: 1685645663
          id: 1da9dd7e-24a2-4a82-9826-5147ed76f804
          tags:
            - string
          target: 122.158.1.38:8000
          updated_at: 1685645663
          upstream:
            id: fe335516-b679-44e5-8bf0-f9af0524e230
          weight: 100
    Upstream:
      description: >-
        The upstream object represents a virtual hostname and can be used to
        loadbalance incoming requests over multiple services (targets). So for
        example an upstream named `service.v1.xyz` for a service object whose
        `host` is `service.v1.xyz`. Requests for this service would be proxied
        to the targets defined within the upstream. An upstream also includes a
        [health checker][healthchecks], which is able to enable and disable
        targets based on their ability or inability to serve requests. The
        configuration for the health checker is stored in the upstream object,
        and applies to all of its targets.
      example:
        algorithm: round-robin
        hash_fallback: none
        hash_on: none
        hash_on_cookie_path: /
        healthchecks:
          active:
            concurrency: 10
            healthy:
              http_statuses:
                - 200
                - 302
              interval: 0
              successes: 0
            http_path: /
            https_verify_certificate: true
            timeout: 1
            type: http
            unhealthy:
              http_failures: 0
              http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
              interval: 0
              tcp_failures: 0
              timeouts: 0
          passive:
            healthy:
              http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
              successes: 0
            type: http
            unhealthy:
              http_failures: 0
              http_statuses:
                - 429
                - 500
                - 503
              tcp_failures: 0
              timeouts: 0
          threshold: 0
        id: 6eed5e9c-5398-4026-9a4c-d48f18a2431e
        name: api.example.internal
        slots: 10000
      properties:
        algorithm:
          default: round-robin
          description: Which load balancing algorithm to use.
          type: string
        client_certificate:
          additionalProperties: false
          description: >-
            If set, the certificate to be used as client certificate while TLS
            handshaking to the upstream server.
          properties:
            id:
              type: string
          type: object
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
          example: 1422386534
        updated_at:
          description: Unix epoch when the resouce was updated.
          type: integer
          example: 1422386534
        hash_fallback:
          default: none
          description: >-
            What to use as hashing input if the primary `hash_on` does not
            return a hash (eg. header is missing, or no Consumer identified).
            Not available if `hash_on` is set to `cookie`.
          type: string
        hash_fallback_header:
          description: >-
            The header name to take the value from as hash input. Only required
            when `hash_fallback` is set to `header`.
          type: string
        hash_fallback_query_arg:
          description: >-
            The name of the query string argument to take the value from as hash
            input. Only required when `hash_fallback` is set to `query_arg`.
          type: string
        hash_fallback_uri_capture:
          description: >-
            The name of the route URI capture to take the value from as hash
            input. Only required when `hash_fallback` is set to `uri_capture`.
          type: string
        hash_on:
          default: none
          description: >-
            What to use as hashing input. Using `none` results in a
            weighted-round-robin scheme with no hashing.
          type: string
        hash_on_cookie:
          description: >-
            The cookie name to take the value from as hash input. Only required
            when `hash_on` or `hash_fallback` is set to `cookie`. If the
            specified cookie is not in the request, Kong will generate a value
            and set the cookie in the response.
          type: string
        hash_on_cookie_path:
          default: /
          description: >-
            The cookie path to set in the response headers. Only required when
            `hash_on` or `hash_fallback` is set to `cookie`.
          type: string
        hash_on_header:
          description: >-
            The header name to take the value from as hash input. Only required
            when `hash_on` is set to `header`.
          type: string
        hash_on_query_arg:
          description: >-
            The name of the query string argument to take the value from as hash
            input. Only required when `hash_on` is set to `query_arg`.
          type: string
        hash_on_uri_capture:
          description: >-
            The name of the route URI capture to take the value from as hash
            input. Only required when `hash_on` is set to `uri_capture`.
          type: string
        healthchecks:
          properties:
            active:
              properties:
                concurrency:
                  default: 10
                  type: integer
                headers:
                  type: object
                healthy:
                  properties:
                    http_statuses:
                      default:
                        - 200
                        - 302
                      items:
                        type: integer
                      type: array
                    interval:
                      default: 0
                      type: number
                    successes:
                      default: 0
                      type: integer
                  type: object
                http_path:
                  default: /
                  type: string
                https_sni:
                  type: string
                https_verify_certificate:
                  default: true
                  type: boolean
                timeout:
                  default: 1
                  type: number
                type:
                  default: http
                  type: string
                unhealthy:
                  properties:
                    http_failures:
                      default: 0
                      type: integer
                    http_statuses:
                      default:
                        - 429
                        - 404
                        - 500
                        - 501
                        - 502
                        - 503
                        - 504
                        - 505
                      items:
                        type: integer
                      type: array
                    interval:
                      default: 0
                      type: number
                    tcp_failures:
                      default: 0
                      type: integer
                    timeouts:
                      default: 0
                      type: integer
                  type: object
              type: object
            passive:
              properties:
                healthy:
                  properties:
                    http_statuses:
                      default:
                        - 200
                        - 201
                        - 202
                        - 203
                        - 204
                        - 205
                        - 206
                        - 207
                        - 208
                        - 226
                        - 300
                        - 301
                        - 302
                        - 303
                        - 304
                        - 305
                        - 306
                        - 307
                        - 308
                      items:
                        type: integer
                      type: array
                    successes:
                      default: 0
                      type: integer
                  type: object
                type:
                  default: http
                  type: string
                unhealthy:
                  properties:
                    http_failures:
                      default: 0
                      type: integer
                    http_statuses:
                      default:
                        - 429
                        - 500
                        - 503
                      items:
                        type: integer
                      type: array
                    tcp_failures:
                      default: 0
                      type: integer
                    timeouts:
                      default: 0
                      type: integer
                  type: object
              type: object
            threshold:
              default: 0
              type: number
          type: object
        host_header:
          description: >-
            The hostname to be used as `Host` header when proxying requests
            through Kong.
          type: string
        id:
          type: string
        name:
          description: This is a hostname, which must be equal to the `host` of a service.
          type: string
        slots:
          default: 10000
          description: >-
            The number of slots in the load balancer algorithm. If `algorithm`
            is set to `round-robin`, this setting determines the maximum number
            of slots. If `algorithm` is set to `consistent-hashing`, this
            setting determines the actual number of slots in the algorithm.
            Accepts an integer in the range `10`-`65536`.
          type: integer
        tags:
          description: >-
            An optional set of strings associated with the Upstream for grouping
            and filtering.
          items:
            type: string
          type: array
        use_srv_name:
          default: false
          description: >-
            If set, the balancer will use SRV hostname(if DNS Answer has SRV
            record) as the proxy upstream `Host`.
          type: boolean
      type: object
    Vault:
      description: >-
        Vault entities are used to configure different Vault connectors.
        Examples of Vaults are Environment Variables, Hashicorp Vault and AWS
        Secrets Manager. Configuring a Vault allows referencing the secrets with
        other entities. For example a certificate entity can store a reference
        to a certificate and key, stored in a vault, instead of storing the
        certificate and key within the entity. This allows a proper separation
        of secrets and configuration and prevents secret sprawl.
      example:
        config:
          prefix: ENV_PREFIX
        description: environment variable based vault
        id: 2747d1e5-8246-4f65-a939-b392f1ee17f8
        name: env
        tags:
          - foo
          - bar
      type: object
      properties:
        config:
          description: >-
            The configuration properties for the Vault which can be found on the
            vaults' documentation page.
          type: object
        created_at:
          description: Unix epoch when the resource was created.
          type: integer
          example: 1422386534
        description:
          description: The description of the Vault entity.
          type: string
          example: This vault is used to retrieve redis database access credentials
        id:
          type: string
          example: B2A30E8F-C542-49CF-8015-FB674987D1A5
        name:
          description: >-
            The name of the Vault that's going to be added. Currently, the Vault
            implementation must be installed in every Kong instance.
          type: string
          example: env
        prefix:
          description: >-
            The unique prefix (or identifier) for this Vault configuration. The
            prefix is used to load the right Vault configuration and
            implementation when referencing secrets with the other entities.
          type: string
          example: env
        tags:
          description: >-
            An optional set of strings associated with the Vault for grouping
            and filtering.
          type: array
          items:
            type: string
            example: database-credentials
        updated_at:
          description: Unix epoch when the resource was last updated.
          type: integer
          example: 1422386534
      x-examples:
        Example Vault:
          id: B2A30E8F-C542-49CF-8015-FB674987D1A5
          prefix: env
          name: env
          description: This vault is used to retrieve redis database access credentials
          config:
            prefix: SSL_
          created_at: 1422386534
          updated_at: 1422386534
          tags:
            - database-credentials
            - data-plane
    pagination-offset-response:
      description: >-
        Offset is used to paginate through the API. Provide this value to the
        next list operation to fetch the next page
      type: string
    CreateRuntimeGroupRequest:
      title: CreateRuntimeGroupRequest
      description: The request schema for the create runtime group request.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test Runtime Group
          description: The name of the runtime group.
        description:
          type: string
          example: A test runtime group for exploration.
          description: The description of the runtime group in Konnect.
        cluster_type:
          type: string
          description: >-
            The ClusterType value of the cluster associated with the Runtime
            Group.
          example: CLUSTER_TYPE_HYBRID
          enum:
            - CLUSTER_TYPE_HYBRID
            - CLUSTER_TYPE_K8S_INGRESS_CONTROLLER
            - CLUSTER_TYPE_COMPOSITE
        labels:
          $ref: '#/components/schemas/Labels'
      required:
        - name
    UpdateRuntimeGroupRequest:
      title: UpdateRuntimeGroupRequest
      description: The request schema for the update runtime group request.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test Runtime Group
          description: The name of the runtime group.
        description:
          type: string
          example: A test runtime group for exploration.
          description: The description of the runtime group in Konnect.
        labels:
          $ref: '#/components/schemas/Labels'
    RuntimeGroup:
      x-speakeasy-entity: RuntimeGroup
      allOf:
        - $ref: '#/components/schemas/RuntimeGroupSummary'
        - type: object
          properties:
            labels:
              $ref: '#/components/schemas/Labels'
            config:
              type: object
              description: CP configuration object for related access endpoints.
              properties:
                control_plane_endpoint:
                  type: string
                  format: url
                  example: https://acfe5f253f.cp0.konghq.com
                  description: Control Plane Endpoint.
                  readOnly: true
                telemetry_endpoint:
                  type: string
                  format: url
                  example: https://acfe5f253f.tp0.konghq.com
                  description: Telemetry Endpoint.
                  readOnly: true
            created_at:
              x-speakeasy-param-readonly: true
              type: string
              format: date-time
              example: '2022-11-04T20:10:06.927Z'
              description: >-
                An ISO-8604 timestamp representation of runtime group creation
                date.
              readOnly: true
            updated_at:
              x-speakeasy-param-readonly: true
              type: string
              format: date-time
              example: '2022-11-04T20:10:06.927Z'
              description: >-
                An ISO-8604 timestamp representation of runtime group update
                date.
              readOnly: true
      x-examples:
        Example 1:
          id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          name: Test Runtime Group
          description: A test runtime group for exploration.
          labels:
            test: 'true'
          config:
            control_plane_endpoint: https://acfe5f253f.cp0.konghq.com
            telemetry_endpoint: https://acfe5f253f.tp0.konghq.com
            cluster_type: CLUSTER_TYPE_HYBRID
          created_at: '2022-11-04T20:10:06.927Z'
          updated_at: '2022-11-04T20:10:06.927Z'
    RuntimeGroupSummary:
      title: RuntimeGroupSummary
      type: object
      description: >-
        The runtime group object contains information about a Kong control
        plane.
      additionalProperties: false
      properties:
        id:
          x-speakeasy-param-readonly: true
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The runtime group ID.
          readOnly: true
        name:
          type: string
          example: Test Runtime Group
          description: The name of the runtime group.
        description:
          type: string
          example: A test runtime group for exploration.
          description: The description of the runtime group in Konnect.
        labels:
          $ref: '#/components/schemas/Labels'
        config:
          x-speakeasy-param-readonly: true
          type: object
          description: CP configuration object for related access endpoints.
          additionalProperties: false
          properties:
            control_plane_endpoint:
              type: string
              format: url
              example: https://acfe5f253f.cp0.konghq.com
              description: Control Plane Endpoint.
              readOnly: true
            telemetry_endpoint:
              type: string
              format: url
              example: https://acfe5f253f.tp0.konghq.com
              description: Telemetry Endpoint.
              readOnly: true
            cluster_type:
              type: string
              description: >-
                The ClusterType value of the cluster associated with the Runtime
                Group.
              example: CLUSTER_TYPE_HYBRID
              enum:
                - CLUSTER_TYPE_HYBRID
                - CLUSTER_TYPE_K8S_INGRESS_CONTROLLER
                - CLUSTER_TYPE_COMPOSITE
              readOnly: true
          required:
            - control_plane_endpoint
            - telemetry_endpoint
            - cluster_type
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CompositeStatus:
      title: CompositeStatus
      type: object
      description: >-
        The Composite Status object contains information about the status of a
        composite runtime group.
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The composite runtime group ID.
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An ISO-8604 timestamp representation of composite runtime group
            status creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An ISO-8604 timestamp representation of composite runtime group
            status update date.
          readOnly: true
        conflicts:
          type: array
          maxItems: 256
          items:
            $ref: '#/components/schemas/CompositeConflict'
        state:
          type: string
          description: The state of the composite runtime group.
          example: COMPOSITE_STATE_CONFLICT
          readOnly: true
          enum:
            - COMPOSITE_STATE_OK
            - COMPOSITE_STATE_CONFLICT
            - COMPOSITE_STATE_UNKNOWN
    CompositeConflict:
      title: CompositeConflict
      type: object
      description: >-
        The Composite Conflict object contains information about a conflict in a
        composite runtime group.
      properties:
        cluster_id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The ID of a runtime group member of a composite runtime group.
          readOnly: true
        description:
          type: string
          example: >-
            conflicting entity found: ID=38d790ad-8b08-4ff5-a074-2e1e9e64d8bd,
            Name=foo
          description: The description of the conflict.
          readOnly: true
        resource:
          $ref: '#/components/schemas/CompositeConflictResource'
    CompositeConflictResource:
      title: CompositeConflictResource
      type: object
      description: A resource causing a conflict in a composite runtime group.
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The ID of the resource.
          readOnly: true
        type:
          type: string
          example: service
          description: The type of the resource.
          readOnly: true
      required:
        - id
        - type
    Labels:
      title: Labels
      type: object
      example:
        test: 'true'
      description: >-
        Labels to facilitate tagged search on runtime groups. Keys must be of
        length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh',
        'kic', or '_'.
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z\-\.\_]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
  parameters:
    PageSize:
      name: page[size]
      description: >-
        The maximum number of items to include per page. The last page of a
        collection may include fewer items.
      in: query
      required: false
      schema:
        type: integer
        example: 10
      allowEmptyValue: true
    PageNumber:
      name: page[number]
      description: Determines which page of the entities to retrieve.
      in: query
      required: false
      schema:
        type: integer
        example: 1
      allowEmptyValue: true
    APIProductFilters:
      name: filter
      description: Filters API Products in the response.
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/APIProductFilterParameters'
    APIProductVersionFilters:
      name: filter
      description: Filters API Product Versions in the response.
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/APIProductVersionFilterParameters'
    LabelsFilter:
      name: labels
      description: Filters requested resource by associated labels.
      required: false
      in: query
      schema:
        type: string
        example: key:value,keyExists
    APIProductSort:
      name: sort
      description: |
        Sorts a collection of API products. Supported sort attributes are:
          - name
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SortQuery'
    APIProductVersionSort:
      name: sort
      description: >
        Sorts a collection of API products versions. Supported sort attributes
        are:
          - name
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SortQuery'
    PortalId:
      schema:
        type: string
        format: uuid
      name: portalId
      in: path
      required: true
      description: ID of the portal.
    TeamId:
      schema:
        type: string
        format: uuid
        example: d32d905a-ed33-46a3-a093-d8f536af9a8a
      name: teamId
      in: path
      required: true
      description: ID of the team.
    DeveloperId:
      schema:
        type: string
        example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        format: uuid
      name: developerId
      in: path
      required: true
      description: ID of the developer.
    RoleId:
      schema:
        type: string
        example: 8350205f-a305-4e39-abe9-bc082a80091a
        format: uuid
      name: roleId
      in: path
      required: true
    pagination-offset:
      description: >-
        Offset from which to return the next set of resources. Use the value of
        the 'offset' field from the response of a list operation as input here
        to paginate through all the resources
      in: query
      name: offset
      schema:
        type: string
    pagination-size:
      description: Number of resources to be returned.
      in: query
      name: size
      schema:
        default: 100
        maximum: 1000
        minimum: 1
        type: integer
    pagination-tags-filter:
      description: >-
        A list of tags to filter the list of resources on. Multiple tags can be
        concatenated using ',' to mean AND or using '/' to mean OR.
      example: tag1,tag2
      in: query
      name: tags
      schema:
        type: string
    service_id:
      name: service_id
      description: ID **or** name of the service to lookup
      example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
      in: path
      required: true
      schema:
        type: string
    ca_certificate_id:
      name: ca_certificate_id
      description: ID of the related certificate
      in: path
      required: true
      schema:
        type: string
        example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
    certificate_id:
      name: certificate_id
      in: path
      required: true
      schema:
        type: string
        example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
      description: The unique identifier of the Certificate to retrieve.
    certificate_name_or_id:
      name: certificate_name_or_id
      in: path
      required: true
      schema:
        type: string
        enum:
          - a3ad71a8-6685-4b03-a101-980a953544f6
          - name
        example: name
      description: >-
        The unique identifier or the `name` attribute of the Certificate whose
        SNIs are to be retrieved. When using this endpoint, only SNIs associated
        to the specified Certificate will be listed.
    sni_id:
      name: sni_id
      in: path
      required: true
      schema:
        type: string
        example: my-sni
      description: The unique identifier or the name of the SNI to retrieve.
    consumer_id:
      name: consumer_id
      in: path
      schema:
        type: string
        example: e94215b0-9198-42ce-bf0b-98afff31b2a7
      description: The unique identifier or the username of the Consumer to retrieve.
      required: true
    plugin_id_or_instance_name:
      name: plugin_id_or_instance_name
      in: path
      required: true
      schema:
        type: string
        example: response-ratelimiting
      description: The unique identifier of the Plugin to create or update.
    key-set_id_or_name:
      name: key-set_id_or_name
      in: path
      required: true
      schema:
        type: string
        example: 46CA83EE-671C-11ED-BFAB-2FE47512C77A
      description: >-
        The unique identifier or the `name` attribute of the Key Set that should
        be associated to the newly-created Key.
    key_id_or_name:
      name: key_id_or_name
      in: path
      required: true
      schema:
        type: string
        example: 24D0DBDA-671C-11ED-BA0B-EF1DCCD3725
      description: The unique identifier or the name of the Key to retrieve.
    upstream_id:
      name: upstream_id
      in: path
      required: true
      schema:
        type: string
        example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
      description: >-
        The unique identifier of the Upstream associated to the Certificate to
        be retrieved.
    target_id:
      name: target_id
      in: path
      required: true
      schema:
        type: string
        example: e94215b0-9198-42ce-bf0b-98afff31b2a7
      description: The `id` of an existing target entry.
    vault_id_or_prefix:
      name: vault_id_or_prefix
      in: path
      required: true
      schema:
        type: string
        example: env
      description: The unique identifier or the prefix of the Vault to retrieve.
    log_level:
      name: log_level
      in: path
      required: true
      schema:
        type: string
        enum:
          - info
          - notice
          - warn
          - error
          - crit
        example: warn
      description: >-
        Log levels are set in Kong’s configuration. Log levels increase in order
        of their severity
    runtimeGroupId:
      name: runtimeGroupId
      in: path
      required: true
      schema:
        type: string
        example: 9524ec7d-36d9-465d-a8c5-83a3c9390458
      description: >-
        The ID of your runtime group. This variable is available in the Konnect
        manager
    route_id:
      name: route_id
      in: path
      required: true
      schema:
        type: string
        example: e94215b0-9198-42ce-bf0b-98afff31b2a7
      description: The unique identifier or the name of the route to retrieve.
    group_id:
      name: group_id
      in: path
      required: true
      schema:
        type: string
        example: be4bcfca-b1df-4fac-83cc-5cf6774bf48e
      description: The UUID of the consumer group.
    page_size:
      name: page_size
      in: query
      required: false
      schema:
        type: integer
      description: The number of items to include in a page.
    page_number:
      name: page_number
      in: query
      required: false
      schema:
        type: integer
      description: The specific page number in the collection results.
    FilterByLabels:
      name: labels
      description: Filter runtime groups in the response by associated labels.
      in: query
      required: false
      schema:
        type: string
        example: key:value,existCheck
    FilterByNameEquality:
      name: filter[name][eq]
      description: >-
        Filter by direct equality comparison of the name property with a
        supplied value.
      in: query
      required: false
      schema:
        type: string
        example: test
    FilterByNameEqualityShort:
      name: filter[name]
      description: >-
        Filter by direct equality comparison (short-hand) of the name property
        with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: test
    FilterByNameContains:
      name: filter[name][contains]
      description: >-
        Filter by contains comparison of the name property with a supplied
        substring.
      in: query
      required: false
      schema:
        type: string
        example: test
    FilterByNameNotEquals:
      name: filter[name][neq]
      description: >-
        Filter by non-equality comparison of the name property with a supplied
        value.
      in: query
      required: false
      schema:
        type: string
        example: test
    FilterByIdEquality:
      name: filter[id][eq]
      description: >-
        Filter by direct equality comparison of the id property with a supplied
        value.
      in: query
      required: false
      schema:
        type: string
        example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
    FilterByIdEqualityShort:
      name: filter[id]
      description: >-
        Filter by direct equality comparison (short-hand) of the id property
        with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
    FilterByClusterTypeEquality:
      name: filter[cluster_type][eq]
      description: >-
        Filter by direct equality comparison of the cluster_type property with a
        supplied value.
      in: query
      required: false
      schema:
        type: string
      example: CLUSTER_TYPE_HYBRID
    FilterByClusterTypeEqualityShort:
      name: filter[cluster_type]
      description: >-
        Filter by direct equality comparison (short-hand) of the cluster_type
        property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: CLUSTER_TYPE_HYBRID
    FilterByClusterTypeNotEquals:
      name: filter[cluster_type][neq]
      description: >-
        Filter by non-equality comparison of the cluster_type property with a
        supplied value.
      in: query
      required: false
      schema:
        type: string
        example: test
  requestBodies:
    CreateReport:
      description: >-
        The request schema for the create report request.


        If you pass the same `name` and `description` of an existing report in
        the request, a report with the same `name` and `description` will be
        created. The two reports will have different `id` values to
        differentiate them.


        Note that all fields are optional: if you pass an empty JSON object as
        the request (`{}`), a new report will be created with a default
        configuration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Report'
          examples:
            basicBarChart:
              summary: Bar chart of status codes by API product for the past 24 hours
              description: >-
                A vertical bar chart grouping data first by API product, then by
                status code, for the past 24 hours.
              value:
                name: Status codes by service
                chart_type: VERTICAL_BAR
                time_range:
                  type: RELATIVE
                  time_period: 24H
                query:
                  metrics:
                    - REQUEST_COUNT
                  dimensions:
                    - API_PRODUCT
                    - STATUS_CODE
            barChartWithFilter:
              summary: Bar chart of status codes for one product
              description: >-
                A horizontal bar chart, showing status codes, filtered down to
                only one API product.
              value:
                name: Status codes for product A
                chart_type: HORIZONTAL_BAR
                query:
                  metrics:
                    - REQUEST_COUNT
                  dimensions:
                    - STATUS_CODE
                  filter:
                    - dimension: API_PRODUCT
                      type: IN
                      values:
                        - 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
            lineChartWithPercentiles:
              summary: Line chart of p99 latencies by application
              description: >-
                A line chart showing p99 latency over time for each application
                for the past 24 hours.
              value:
                name: Latency by application
                chart_type: LINE
                time_range:
                  type: RELATIVE
                  time_period: 24H
                query:
                  metrics:
                    - RESPONSE_LATENCY_P99
                  granularity: HOURLY
                  dimensions:
                    - TIME
                    - APPLICATION
            lineChartWithFixedPeriod:
              summary: Line chart of p99 latencies by service
              description: A line chart showing p99 latency for the first week of 2023.
              value:
                name: Latency by service
                chart_type: LINE
                time_range:
                  type: ABSOLUTE
                  start: '2023-01-01'
                  end: '2023-01-07'
                query:
                  metrics:
                    - RESPONSE_LATENCY_P99
                  dimensions:
                    - TIME
                    - API_PRODUCT
    UpdateReport:
      description: The request schema for the update report request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Report'
          examples:
            basicBarChart:
              summary: Bar chart of status codes by API product for the past 24 hours
              description: >-
                A vertical bar chart grouping data first by API product, then by
                status code, for the past 24 hours.
              value:
                name: Status codes by service
                chart_type: VERTICAL_BAR
                time_range:
                  type: RELATIVE
                  time_period: 24H
                query:
                  metrics:
                    - REQUEST_COUNT
                  dimensions:
                    - API_PRODUCT
                    - STATUS_CODE
            barChartWithFilter:
              summary: Bar chart of status codes for one product
              description: >-
                A horizontal bar chart, showing status codes, filtered down to
                only one API product.
              value:
                name: Status codes for product A
                chart_type: HORIZONTAL_BAR
                query:
                  metrics:
                    - REQUEST_COUNT
                  dimensions:
                    - STATUS_CODE
                  filter:
                    - dimension: API_PRODUCT
                      type: IN
                      values:
                        - 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
            lineChartWithPercentiles:
              summary: Line chart of p99 latencies by application
              description: >-
                A line chart showing p99 latency over time for each application
                for the past 24 hours.
              value:
                name: Latency by application
                chart_type: LINE
                time_range:
                  type: RELATIVE
                  time_period: 24H
                query:
                  metrics:
                    - RESPONSE_LATENCY_P99
                  granularity: HOURLY
                  dimensions:
                    - TIME
                    - APPLICATION
            lineChartWithFixedPeriod:
              summary: Line chart of p99 latencies by service
              description: A line chart showing p99 latency for the first week of 2023.
              value:
                name: Latency by service
                chart_type: LINE
                time_range:
                  type: ABSOLUTE
                  start: '2023-01-01'
                  end: '2023-01-07'
                query:
                  metrics:
                    - RESPONSE_LATENCY_P99
                  dimensions:
                    - TIME
                    - API_PRODUCT
    CreateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductDTO'
          examples:
            CreateAPIProductRequestMinimalExample:
              $ref: '#/components/examples/CreateAPIProductRequestMinimalExample'
            CreateAPIProductRequestExample:
              $ref: '#/components/examples/CreateAPIProductRequestExample'
    UpdateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductDTO'
          examples:
            UpdateAPIProductRequestExample:
              $ref: '#/components/examples/UpdateAPIProductRequestExample'
            PublishAPIProductToPortalExample:
              $ref: '#/components/examples/PublishAPIProductToPortalExample'
    CreateAPIProductVersionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductVersionDTO'
          examples:
            UnlinkedAPIProductVersion:
              $ref: >-
                #/components/examples/CreateAPIProductVersionRequestMinimalExample
            LinkedAPIProductVersion:
              $ref: >-
                #/components/examples/CreateLinkedAPIProductVersionRequestExample
    CreateAPIProductVersionSpecRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductVersionSpecDTO'
          examples:
            CreateAPIProductVersionSpecificationRequestExample:
              $ref: >-
                #/components/examples/CreateAPIProductVersionSpecificationRequestExample
    CreateAPIProductDocumentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductDocumentDTO'
          examples:
            CreateAPIProductDocumentRequestMinimalExample:
              $ref: >-
                #/components/examples/CreateAPIProductDocumentRequestMinimalExample
            CreateAPIProductDocumentRequestExample:
              $ref: '#/components/examples/CreateAPIProductDocumentRequestExample'
    UpdateAPIProductVersionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductVersionDTO'
          examples:
            PublishAPIProductVersion:
              $ref: '#/components/examples/PublishApiProductVersionRequestExample'
            LinkAPIProductVersionRequest:
              $ref: '#/components/examples/LinkAPIProductVersionRequestExample'
            UnlinkAPIProductVersionRequest:
              $ref: '#/components/examples/UnlinkAPIProductVersionRequestExample'
            DeprecateAPIProductVersionRequest:
              $ref: '#/components/examples/DeprecateAPIProductVersionRequestExample'
    UpdateAPIProductDocumentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductDocumentDTO'
          examples:
            UpdateAPIProductDocumentAttributes:
              $ref: >-
                #/components/examples/UpdateAPIProductDocumentAttributesRequestExample
            UpdateAPIProductDocumentContent:
              $ref: >-
                #/components/examples/UpdateAPIProductDocumentContentRequestExample
            UpdateAPIProductDocumentAttributesAndContent:
              $ref: >-
                #/components/examples/UpdateAPIProductDocumentAttributesAndContentRequestExample
    UpdateAPIProductVersionSpecRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductVersionSpecDTO'
          examples:
            UpdateAPIProductVersionSpecContentRequest:
              $ref: >-
                #/components/examples/UpdateAPIProductVersionSpecContentRequestExample
            UpdateAPIProductVersionSpecNameRequest:
              $ref: >-
                #/components/examples/UpdateAPIProductVersionSpecNameRequestExample
            UpdateAPIProductVersionSpecRequest:
              $ref: '#/components/examples/UpdateAPIProductVersionSpecRequestExample'
    ReplaceAuditLogReplayJob:
      description: The request schema to replace an audit log replay job.
      content:
        application/json:
          schema:
            type: object
            required:
              - start_at
              - end_at
            properties:
              start_at:
                type: string
                format: date-time
                description: >-
                  The start of a date-time range in RFC3339 format e.g.
                  2017-07-21T17:32:28Z.

                  Must be within the last 7 days.
              end_at:
                type: string
                format: date-time
                description: >-
                  The end of a date-time range in RFC3339 format e.g.
                  2017-07-21T17:32:28Z.

                  Must be within the last 7 days.
    UpdateAuditLogWebhook:
      description: The request schema to modify an audit log webhook.
      content:
        application/json:
          schema:
            type: object
            properties:
              endpoint:
                type: string
                example: https://example.com/audit-logs
                description: The endpoint that will receive audit log messages.
              authorization:
                type: string
                example: Bearer sometoken
                description: >-
                  The value to include in the `Authorization` header when
                  sending audit logs to the webhook.
              enabled:
                type: boolean
                example: true
                description: Indicates if the data should be sent to the webhook.
                default: false
              log_format:
                type: string
                example: cef
                enum:
                  - cef
                  - json
                description: The output format of each log message.
                default: cef
          examples:
            Disable Webhook:
              $ref: '#/components/examples/Disable-Audit-Log-Webhook'
            Enable Webhook:
              $ref: '#/components/examples/Enable-Audit-Log-Webhook'
            Update Webhook:
              $ref: '#/components/examples/Update-Audit-Log-Webhook'
    UpdateUser:
      description: The request schema for the update user request.
      content:
        application/json:
          schema:
            type: object
            properties:
              full_name:
                type: string
                pattern: ^[\w \W]+$
                example: James C. Woods
                description: The user's full name.
                writeOnly: true
              preferred_name:
                type: string
                maxLength: 250
                example: Jimmy
                description: The user's desired name.
                writeOnly: true
          examples:
            Example Request Body:
              $ref: '#/components/examples/Update-User-Request'
    CreateTeam:
      description: >-
        The request schema for the create team request.


        If you pass the same `name` and `description` of an existing team in the
        request, a team with the same `name` and `description` will be created.
        The two teams will have different `team_id` values to differentiate
        them.
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: IDM - Developers
                pattern: ^[\w \W]+$
                description: A name for the team being created.
                writeOnly: true
              description:
                type: string
                maxLength: 250
                example: The Identity Management (IDM) team.
                description: The description of the new team.
                writeOnly: true
            required:
              - name
          examples:
            Example Request Body:
              $ref: '#/components/examples/CreateTeamExample'
    UpdateTeam:
      description: The request schema for the update team request.
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: IDM - Developers
                pattern: ^[\w \W]+$
                description: The name of the team.
                writeOnly: true
              description:
                type: string
                maxLength: 250
                example: The Identity Management (IDM) API team.
                description: The description of the team.
                writeOnly: true
          examples:
            Example Request Body:
              $ref: '#/components/examples/Update-Team-Request'
    AddUserToTeam:
      description: The request schema for adding a user to a team.
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                example: df120cb4-f60b-47bc-a2f8-6a28e6a3c63b
                format: uuid
                description: The user ID for the user being added to a team.
                writeOnly: true
            required:
              - id
          examples:
            Example request body:
              $ref: '#/components/examples/Add-User-Request'
    UpdateTeamMappings:
      content:
        application/json:
          schema:
            type: object
            example:
              mappings:
                - group: Service Developers
                  team_ids:
                    - af91db4c-6e51-403e-a2bf-33d27ae50c0a
            properties:
              mappings:
                type: array
                description: The mappings object.
                items:
                  type: object
                  properties:
                    group:
                      type: string
                    team_ids:
                      type: array
                      items:
                        type: string
          examples:
            Example Request Body:
              $ref: '#/components/examples/Update-Team-Mappings'
      description: The request schema for updating IdP team mappings.
    PatchTeamGroupMappings:
      content:
        application/json:
          schema:
            type: object
            example:
              data:
                - group: Service Developers
                  team_ids:
                    - af91db4c-6e51-403e-a2bf-33d27ae50c0a
            properties:
              data:
                type: array
                description: The IdP groups to map to the given team.
                items:
                  type: object
                  properties:
                    team_id:
                      type: string
                      format: uuid
                    groups:
                      type: array
                      items:
                        type: string
          examples:
            Example Request Body:
              $ref: '#/components/examples/Patch-Team-Group-Mappings'
      description: >-
        The request schema for a partial update of mappings from Konnect Teams
        to IdP Groups.
    AssignRole:
      content:
        application/json:
          schema:
            type: object
            description: >-
              An assigned role is a role that has been assigned to a user or
              team.
            properties:
              role_name:
                type: string
                example: Viewer
                description: The desired role.
              entity_id:
                type: string
                format: uuid
                example: e67490ce-44dc-4cbd-b65e-b52c746fc26a
                description: The ID of the entity.
              entity_type_name:
                type: string
                example: Runtime Groups
                description: The type of entity.
              entity_region:
                type: string
                enum:
                  - us
                  - eu
                  - '*'
                example: eu
                description: The region of the team.
          examples:
            Assigned Roles US:
              $ref: '#/components/examples/Assign-Roles-US'
            Assigned Roles Global:
              $ref: '#/components/examples/Assign-Roles-Global'
      description: The request schema for assigning a role.
    AcceptInvite:
      content:
        application/json:
          schema:
            type: object
            properties:
              password:
                type: string
                example: TestPassword123!!
                format: password
                writeOnly: true
                description: Sets the password for the user.
              full_name:
                type: string
                example: James C. Woods
                writeOnly: true
                description: Full name of the user.
              preferred_name:
                type: string
                example: Tiger
                description: Preferred name of the user.
                nullable: true
              token:
                type: string
                format: uuid
                example: 7690d649-86fc-4d10-8771-c094d2efbd85
                writeOnly: true
                description: The one time token in accept-invitation link.
            required:
              - password
              - full_name
              - token
      description: The request schema for the accept invite request.
    InviteUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                example: james.c.woods@example.com
                writeOnly: true
            required:
              - email
      description: >-
        The request schema for the invite user request.


        If you pass an `email` that is not already an active user in the
        request, a fresh invitation email will be created and sent to the new
        user.
    CreateSystemAccount:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - description
            properties:
              name:
                type: string
                description: Name of the system account.
              description:
                type: string
                description: >-
                  Description of the system account. Useful when the system
                  account name is not sufficient to differentiate one system
                  account from another.
              konnect_managed:
                type: boolean
                description: The system account is managed by Konnect (true/false).
          examples:
            Sample System Account:
              value:
                name: Sample System Account
                description: This is a sample system account description.
                konnect_managed: false
      description: The request schema to create a system account.
    UpdateSystemAccount:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the system account.
              description:
                type: string
                description: Description of the system account.
      description: The request schema for the update system account request.
    UpdateSystemAccountAccessToken:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the system account access token.
    CreateSystemAccountAccessToken:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              expires_at:
                type: string
                format: date-time
          examples:
            Sample Access Token:
              value:
                name: Sample Access Token
                expires_at: '2019-08-24T14:15:22Z'
      description: The request body to create a system account access token.
    AddSystemAccountToTeam:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID of the system account.
                format: uuid
          examples:
            Sample System Account:
              value:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
      description: The request schema for adding a system account to a team.
    UpdateAuthenticationSettings:
      description: The request schema to update an organization's authentication settings.
      content:
        application/json:
          schema:
            type: object
            properties:
              basic_auth_enabled:
                type: boolean
                example: true
                description: The organization has basic auth enabled.
              oidc_auth_enabled:
                type: boolean
                example: false
                description: The organization has OIDC disabled.
              idp_mapping_enabled:
                type: boolean
                example: true
                description: Whether IdP groups determine the Konnect teams a user has.
              konnect_mapping_enabled:
                type: boolean
                example: false
                description: Whether a Konnect Identity Admin assigns teams to a user.
          examples:
            Example Request Body:
              $ref: '#/components/examples/Update-Authentication-Settings'
    UpdateIdPConfiguration:
      content:
        application/json:
          schema:
            type: object
            properties:
              issuer:
                type: string
                format: uri
                example: https://myidp.com/oauth2
              login_path:
                type: string
                example: myapp
              client_id:
                type: string
                example: YOUR_CLIENT_ID
              client_secret:
                type: string
                example: YOUR_CLIENT_SECRET
              scopes:
                type: array
                default:
                  - email
                  - openid
                  - profile
                items:
                  type: string
                  default: openid
              claim_mappings:
                type: object
                minProperties: 3
                properties:
                  name:
                    type: string
                    example: name
                    default: name
                  email:
                    type: string
                    example: email
                    default: email
                  groups:
                    type: string
                    default: groups
                    example: custom-group-claim
      description: The request schema for the update IdP configuration request.
    PatchPortalTeamGroupMappings:
      content:
        application/json:
          schema:
            type: object
            example:
              data:
                - group: Service Developers
                  team_ids:
                    - af91db4c-6e51-403e-a2bf-33d27ae50c0a
            properties:
              data:
                type: array
                description: The IdP groups to map to the given team.
                items:
                  type: object
                  properties:
                    team_id:
                      type: string
                      format: uuid
                    groups:
                      type: array
                      items:
                        type: string
    UpdatePortalAuthenticationSettings:
      description: The request schema to update an organization's authentication settings.
      content:
        application/json:
          schema:
            type: object
            properties:
              basic_auth_enabled:
                type: boolean
                example: true
                description: The organization has basic auth enabled.
              oidc_auth_enabled:
                type: boolean
                example: false
                description: The organization has OIDC disabled.
              oidc_team_mapping_enabled:
                type: boolean
                example: true
                description: >-
                  Whether IdP groups determine the Konnect Portal teams a
                  developer has.
              konnect_mapping_enabled:
                type: boolean
                example: false
                description: Whether a Konnect Identity Admin assigns teams to a developer.
    PortalCreateTeam:
      description: The request schema for the create team request.
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: IDM - Developers
                pattern: ^[\w \W]+$
                writeOnly: true
              description:
                type: string
                maxLength: 250
                example: The Identity Management (IDM) team.
                writeOnly: true
            required:
              - name
          examples:
            Example:
              value:
                name: IDM - Developers
                description: The Identity Management (IDM) team.
    PortalUpdateTeam:
      description: The request schema for the update team request.
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: IDM - Developers
                pattern: ^[\w \W]+$
                writeOnly: true
              description:
                type: string
                maxLength: 250
                example: The Identity Management (IDM) API team.
                writeOnly: true
          examples:
            Example:
              value:
                name: IDM - Developers
                description: The Identity Management (IDM) API team.
    AddDeveloperToTeam:
      description: The request schema for adding a developer to a team.
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                example: df120cb4-f60b-47bc-a2f8-6a28e6a3c63b
                format: uuid
                writeOnly: true
            required:
              - id
          examples:
            Example:
              value:
                id: df120cb4-f60b-47bc-a2f8-6a28e6a3c63b
    PortalAssignRole:
      content:
        application/json:
          schema:
            type: object
            description: An assigned role associates a service and an action to a team.
            properties:
              role_name:
                type: string
                example: API Viewer
              entity_id:
                type: string
                format: uuid
                example: e67490ce-44dc-4cbd-b65e-b52c746fc26a
              entity_type_name:
                type: string
                example: Services
              entity_region:
                type: string
                enum:
                  - us
                  - eu
                  - '*'
                example: eu
          examples:
            Example:
              value:
                role_name: API Viewer
                entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
                entity_type_name: Services
                entity_region: us
      description: Assign a role to a team.
    CA-cert-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                cert: '-----BEGIN CERTIFICATE-----...'
                cert_digest: c641e28d77e93544f2fa87b2cf3f3d51...
                tags:
                  - user-level
                  - low-priority
            properties:
              cert:
                type: string
                description: |
                  PEM-encoded public certificate of the CA.
                example: '-----BEGIN CERTIFICATE-----...'
              cert_digest:
                type: string
                example: c641e28d77e93544f2fa87b2cf3f3d51...
                description: |
                  SHA256 hex digest of the public certificate.
              tags:
                type: array
                description: >-
                  An optional set of strings associated with the Certificate for
                  grouping and filtering.
                items:
                  type: string
            required:
              - cert
      description: >-
        This request body represents a new Certificate Authority (CA)
        certificate and includes the properties required to create a new
        certificate.
    cert-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example:
                id: 7fca84d6-7d37-4a74-a7b0-93e576089a41
                created_at: 1422386534
                cert: '-----BEGIN CERTIFICATE-----...'
                key: '-----BEGIN RSA PRIVATE KEY-----...'
                cert_alt: '-----BEGIN CERTIFICATE-----...'
                key_alt: '-----BEGIN EC PRIVATE KEY-----...'
                snis:
                  - foo.test
                  - example.com
                tags:
                  - user-level
                  - low-priority
            properties:
              cert:
                type: string
                description: 'PEM-encoded public certificate chain of the SSL key pair. '
                example: '-----BEGIN CERTIFICATE-----...,'
              key:
                type: string
                example: '-----BEGIN RSA PRIVATE KEY-----...'
                description: 'PEM-encoded private key of the SSL key pair. '
              cert_alt:
                type: string
                description: >-
                  PEM-encoded public certificate chain of the alternate SSL key
                  pair. 
              key_alt:
                type: string
                description: 'PEM-encoded private key of the alternate SSL key pair. '
                example: '-----BEGIN EC PRIVATE KEY-----...'
              tags:
                type: array
                description: >
                  An optional set of strings associated with the Certificate for
                  grouping and filtering.
                items:
                  type: string
            required:
              - cert
              - key
    create-sni:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                name: my-sni
                tags:
                  - user-level
                  - low-priority
                certificate:
                  id: a2e013e8-7623-4494-a347-6d29108ff68b
            properties:
              name:
                type: string
                description: The SNI name to associate with the given certificate.
                example: my-sni
              tags:
                type: array
                description: >
                  An optional set of strings associated with the SNIs for
                  grouping and filtering.
                items:
                  type: string
                  example: '[user-level, low-priority]'
              certificate:
                type: object
                description: >-
                  The id (a UUID) of the certificate with which to associate the
                  SNI hostname. The Certificate must have a valid private key
                  associated with it to be used by the SNI object. With
                  form-encoded, the notation is `certificate.id=<certificate
                  id>`. With JSON, use `“certificate:{id:<certificate id>”}`.
                required:
                  - id
                properties:
                  id:
                    type: string
                    example: 91020192-062d-416f-a275-9addeeaffaf2
                    description: 91020192-062d-416f-a275-9addeeaffaf2
            required:
              - name
              - certificate
      description: >-
        A JSON object containing the details of the new SNI, including the name,
        certificate, and tags.
    consumer-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                id: ec1a1f6f-2aa4-4e58-93ff-b56368f19b27
                created_at: 1422386534
                username: my-username
                custom_id: my-custom-id
                tags:
                  - user-level
                  - low-priority
            properties:
              username:
                type: string
                description: >
                  The unique username of the Consumer. You must send either this
                  field or custom_id with the request.
              custom_id:
                type: string
                description: >
                  Field for storing an existing unique ID for the Consumer -
                  useful for mapping Kong with users in your existing database.
                  You must send either this field or username with the request.
              tags:
                type: array
                description: >
                  An optional set of strings associated with the Consumer for
                  grouping and filtering.
                items:
                  type: string
            required:
              - username
              - custom_id
      description: Consumer request body
    plugin-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                name: rate-limiting
                route: null
                service: null
                consumer: null
                instance_name: rate-limiting-foo
                config:
                  hour: 500
                  minute: 20
                protocols:
                  - http
                  - https
                enabled: true
                tags:
                  - user-level
                  - low-priority
                ordering:
                  before:
                    - plugin-name
            properties:
              name:
                type: string
                nullable: true
                description: >-
                  The name of the Plugin that’s going to be added. Currently,
                  the Plugin must be installed in every Kong instance
                  separately.
                example: rate-limiting
              route:
                type: object
                description: >-
                  If set, the plugin will only activate when receiving requests
                  via the specified route. Leave unset for the plugin to
                  activate regardless of the route being used. Default:
                  `null`.With form-encoded, the notation is `route.id=<route id>
                  or route.name=<route name>`. With JSON, use `route:{id:<route
                  id>}` or `route:{name:<route name>}`.
                properties:
                  id:
                    type: string
                    description: The Id of the route.
                    example: a2e013e8-7623-4494-a347-6d29108ff68b
              service:
                type: object
                nullable: true
                description: >-
                  If set, the plugin will only activate when receiving requests
                  via one of the routes belonging to the specified service.
                properties:
                  id:
                    type: string
                    description: The Id of the route.
                    example: a2e013e8-7623-4494-a347-6d29108ff68b
              instance_name:
                type: string
                description: |
                  The Plugin instance name.
                example: rate-limiting-foo
              config:
                type: object
                description: The configuration properties for the Plugin
                properties:
                  hour:
                    type: integer
                    example: 500
                  minute:
                    type: integer
                    example: 500
              protocols:
                type: array
                description: A list of the request protocols that will trigger this plugin.
                items:
                  type: string
                  enum:
                    - http
                    - grpc
                    - grpcs
                    - tls
                    - tcp
                  default: http
              enabled:
                type: boolean
                description: |
                  Whether the plugin is applied. Default: `true`.
                default: true
              tags:
                type: array
                description: >
                  An optional set of strings associated with the Plugin for
                  grouping and filtering.
                items:
                  type: string
          examples:
            request example:
              value:
                name: rate-limiting
                consumer: string
                instance_name: rate-limiting-foo
                config:
                  hour: 500
                  minute: 500
                protocols:
                  - http
                enabled: true
                tags:
                  - string
      description: Plugin request body
    key-set-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                name: my-key_set
                tags:
                  - google-keys
                  - mozilla-keys
            properties:
              name:
                type: string
                description: |
                  The name to associate with the given key-set.
                example: my-key_set
              tags:
                type: array
                description: >
                  An optional set of strings associated with the Key for
                  grouping and filtering.
                items:
                  type: string
    keys-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                set:
                  id: 46CA83EE-671C-11ED-BFAB-2FE47512C77A
                name: my-key
                kid: '42'
                jwk: '{alg:RSA,  kid: 42,  ...}'
                pem:
                  private_key: '-----BEGIN'
                  public_key: '-----BEGIN'
                tags:
                  - application-a
                  - public-key-xyz
            properties:
              set:
                type: object
                description: >-
                  The id (an UUID) of the key-set with which to associate the
                  key .With form-encoded, the notation is `set.id=<set id>` or
                  `set.name=<set name>`. With JSON, use `“set:{id:<set id>}` or
                  `set:{name:<set name>}.`
                properties:
                  id:
                    type: string
                    description: 46CA83EE-671C-11ED-BFAB-2FE47512C77A
              name:
                type: string
                example: my-key
                description: |
                  The name to associate with the given keys.
              kid:
                type: string
                description: |
                  A unique identifier for a key.
                example: '42'
              jwk:
                type: string
                description: A JSON Web Key represented as a string.
                example: '{\alg\:\RSA\,  \kid\: \42\,  ...}'
              pem:
                type: object
                description: |
                  A keypair in PEM format.
                properties:
                  private_key:
                    type: string
                    example: 'private_key: -----BEGIN'
                  public_key:
                    type: string
                    example: 'public_key: -----BEGIN'
              tags:
                type: array
                description: >
                  An optional set of strings associated with the Key for
                  grouping and filtering.
                items:
                  type: string
            required:
              - kid
    route-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                name: my-route
                protocols:
                  - http
                  - https
                methods:
                  - GET
                  - POST
                hosts:
                  - example.com
                  - foo.test
                paths:
                  - /foo
                  - /bar
                headers:
                  x-my-header:
                    - foo
                    - bar
                  x-another-header:
                    - bla
                https_redirect_status_code: 426
                regex_priority: 0
                strip_path: true
                path_handling: v0
                preserve_host: false
                request_buffering: true
                response_buffering: true
                snis:
                  - foo.test
                  - example.com
                sources:
                  - ip: 10.1.0.0/16
                    port: 1234
                  - ip: 10.2.2.2
                  - port: 9123
                destinations:
                  - ip: 10.1.0.0/16
                    port: 1234
                  - ip: 10.2.2.2
                  - port: 9123
                tags:
                  - user-level
                  - low-priority
                service:
                  id: af8330d3-dbdc-48bd-b1be-55b98608834b
            properties:
              name:
                type: string
                description: >
                  The name of the route. Route names must be unique, and they
                  are case sensitive. For example, there can be two different
                  routes named “test” and “Test”.
              protocols:
                type: array
                description: An array of the protocols this route should allow
                items:
                  type: string
                  default: https
                  example: tcp
              methods:
                type: array
                description: |
                  A list of HTTP methods that match this route.
                items:
                  type: string
                  example: GET
              hosts:
                type: array
                description: >-
                  A list of domain names that match this route. Note that the
                  hosts value is case sensitive. With form-encoded, the notation
                  is `hosts[]=example.com&hosts[]=foo.test`. With JSON, use an
                  Array.
                items:
                  type: string
              paths:
                type: array
                description: >-
                  A list of paths that match this route. With form-encoded, the
                  notation is `paths[]=/foo&paths[]=/bar`. With JSON, use an
                  array. The path can be a regular expression, or a plain text
                  pattern. 
                items:
                  type: string
              headers:
                type: object
                description: >-
                  One or more lists of values indexed by header name that will
                  cause this route to match if present in the request. The Host
                  header cannot be used with this attribute: hosts should be
                  specified using the `hosts` attribute. When headers contains
                  only one value and that value starts with the special prefix`
                  ~*`, the value is interpreted as a regular expression.
                properties:
                  x-my-header:
                    type: array
                    items:
                      type: string
                  x-another-header:
                    type: array
                    items:
                      type: string
              https_redirect_status_code:
                type: integer
                description: >-
                  The status code Kong responds with when all properties of a
                  route match except the protocol i.e. if the protocol of the
                  request is `HTTP` instead of `HTTPS`

                  Location header is injected by Kong if the field is set to
                  `301`, `302`, `307` or `308`. Note: This config applies only
                  if the route is configured to only accept the https protocol.
                  Accepted values are: `426`, `301`, `302`, `307`, `308`.
                  Default: `426`.
                default: 426
                enum:
                  - 426
                  - 301
                  - 302
                  - 307
                  - 308
                example: 426
              regex_priority:
                type: integer
                description: >-
                  A number used to choose which route resolves a given request
                  when several routes match it using regexes simultaneously.
                  When two routes match the path and have the same
                  regex_priority, the older one (lowest `created_at`) is used.
                  Note that the priority for non-regex routes is different
                  (longer non-regex routes are matched before shorter ones).
                  Default: `0`.
                default: 0
                example: 0
              strip_path:
                type: boolean
                description: >-
                  When matching a route via one of the paths, strip the matching
                  prefix from the upstream request URL. Default: `true`.
                default: true
              path_handling:
                type: string
                description: >-
                  Controls how the service path, route path and requested path
                  are combined when sending a request to the upstream. Accepted
                  values are: `v0`, `v1`. Default: `v0`.
                enum:
                  - v1
                  - v0
                example: v0
              preserve_host:
                type: boolean
                description: >-
                  When matching a route via one of the `hosts` domain names, use
                  the request `host` header in the upstream request headers. If
                  set to `false`, the upstream Host header will be that of the
                  service’s host.
                default: true
              request_buffering:
                type: boolean
                default: true
                description: >
                  Whether to enable request body buffering or not. With HTTP
                  1.1, it may make sense to turn this off on services that
                  receive data with chunked transfer encoding. Default: true.
              response_buffering:
                type: boolean
                default: true
                description: >
                  Whether to enable response body buffering or not. With HTTP
                  1.1, it may make sense to turn this off on services that send
                  data with chunked transfer encoding. Default: `true`.
              snis:
                type: array
                description: >
                  A list of SNIs that match this route when using stream
                  routing.
                items:
                  type: string
              sources:
                type: array
                description: >
                  A list of IP sources of incoming connections that match this
                  route when using stream routing. Each entry is an object with
                  fields “ip” (optionally in CIDR range notation) and/or “port”.
                items:
                  type: object
                  properties:
                    ip:
                      type: string
                      example: 10.1.0.0/16
                    port:
                      type: integer
                      example: 1234
              destinations:
                type: array
                description: >
                  A list of IP destinations of incoming connections that match
                  this route when using stream routing. Each entry is an object
                  with fields “ip” (optionally in CIDR range notation) and/or
                  “port”.
                items:
                  type: object
                  properties:
                    ip:
                      type: string
                      example: 0.1.0.0/16
                    port:
                      type: integer
              tags:
                type: array
                description: >
                  An optional set of strings associated with the route for
                  grouping and filtering.
                items:
                  type: string
              service:
                type: object
                description: >-
                  The service this route is associated to. This is where the
                  route proxies traffic to. With form-encoded, the notation is
                  service.id=<service id> or service.name=<service name>. With
                  JSON, use “`service:{id:<service id>}` or
                  `service:{name:<service name>}`.
                properties:
                  id:
                    type: string
                    example: af8330d3-dbdc-48bd-b1be-55b98608834b
            required:
              - protocols
              - https_redirect_status_code
              - preserve_host
              - request_buffering
              - response_buffering
          examples:
            Create a route:
              value:
                name: my-route
                protocols:
                  - http
                  - https
                methods:
                  - GET
                  - POST
                hosts:
                  - example.com
                  - foo.test
                paths:
                  - /foo
                  - /bar
                headers:
                  x-my-header:
                    - foo
                    - bar
                  x-another-header:
                    - bla
                https_redirect_status_code: 426
                regex_priority: 0
                strip_path: true
                path_handling: v0
                preserve_host: false
                request_buffering: true
                response_buffering: true
                tags:
                  - user-level
                  - low-priority
                service:
                  id: af8330d3-dbdc-48bd-b1be-55b98608834b
      description: Route request body
    service-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                id: 9748f662-7711-4a90-8186-dc02f10eb0f5
                created_at: 1422386534
                updated_at: 1422386534
                name: my-service
                retries: 5
                protocol: http
                host: example.com
                port: 80
                path: /some_api
                connect_timeout: 60000
                write_timeout: 60000
                read_timeout: 60000
                tags:
                  - user-level
                  - low-priority
                client_certificate:
                  id: 4e3ad2e4-0bc4-4638-8e34-c84a417ba39b
                tls_verify: true
                tls_verify_depth: null
                ca_certificates:
                  - 4e3ad2e4-0bc4-4638-8e34-c84a417ba39b
                  - 51e77dc2-8f3e-4afa-9d0e-0e3bbbcfd515
                enabled: true
            properties:
              name:
                type: string
                description: |
                  The service name.
                example: my-service
              retries:
                type: integer
                description: >
                  The number of retries to execute upon failure to proxy.
                  Default:`5`.
                default: 5
                example: 5
              protocol:
                type: string
                description: >-
                  The protocol used to communicate with the upstream. Accepted
                  values are: `grpc`, `grpcs`, `http`, `https`, `tcp`, `tls`,
                  `tls_passthrough`, `udp`, `ws` 

                  , `wss` 

                  . Default: `http`.
                default: http
                enum:
                  - grpc
                  - grpcs
                  - http
                  - https
                  - tcp
                  - 'tls '
                  - tls_passthrough
                  - udp
                  - ws
                  - wss
                example: http
              host:
                type: string
                description: >
                  The host of the upstream server. Note that the host value is
                  case sensitive.
                example: example.com
              port:
                type: integer
                description: |
                  The upstream server port. Default: `80`.
                default: 80
                example: 80
              path:
                type: string
                description: |
                  The path to be used in requests to the upstream server.
                example: /some_api
              connect_timeout:
                type: integer
                description: >-
                  The timeout in milliseconds for establishing a connection to
                  the upstream server. Default: `60000`.
                default: 6000
                example: 6000
              write_timeout:
                type: integer
                description: >
                  The timeout in milliseconds between two successive write
                  operations for transmitting a request to the upstream server.
                  Default: `60000`.
                default: 6000
                example: 6000
              read_timeout:
                type: integer
                description: >
                  The timeout in milliseconds between two successive read
                  operations for transmitting a request to the upstream server.
                  Default: `60000`.
                default: 6000
                example: 6000
              tags:
                type: array
                description: >
                  An optional set of strings associated with the service for
                  grouping and filtering.
                items:
                  type: string
                  example: user-level
              client_certificate:
                type: object
                description: >-
                  Certificate to be used as client certificate while TLS
                  handshaking to the upstream server. With form-encoded, the
                  notation is `client_certificate.id=<client_certificate id>`.
                  With JSON, use `client_certificate:{id:<client_certificate
                  id>}`.
                properties:
                  id:
                    type: string
                    example: 4e3ad2e4-0bc4-4638-8e34-c84a417ba39b
              tls_verify:
                type: boolean
                description: >
                  Whether to enable verification of upstream server TLS
                  certificate. If set to null, then the Nginx default is
                  respected.
                default: true
              tls_verify_depth:
                type: string
                description: >
                  Maximum depth of chain while verifying Upstream server’s TLS
                  certificate. If set to null, then the Nginx default is
                  respected. Default: null.
                example: respected
                default: null
                nullable: true
              ca_certificates:
                type: array
                description: >-
                  Array of CA Certificate object UUIDs that are used to build
                  the trust store while verifying upstream server’s TLS
                  certificate. If set to null when Nginx default is respected.
                  With form-encoded, the notation is
                  `ca_certificates[]=4e3ad2e4-0bc4-4638-8e34-c84a417ba39b&ca_certificates[]=51e77dc2-8f3e-4afa-9d0e-0e3bbbcfd515`.
                  With JSON, use an Array.
                items:
                  type: string
                  example: 4e3ad2e4-0bc4-4638-8e34-c84a417ba39b
              enabled:
                type: boolean
                default: true
                description: >-
                  Whether the service is active. If set to `false`, the proxy
                  behavior will be as if any routes attached to it do not exist
                  (404). Default: `true`.
            required:
              - protocol
              - host
              - port
              - enabled
          examples:
            Example:
              value:
                name: my-service
                retries: 5
                protocol: http
                host: example.com
                port: 80
                path: /some_api
                connect_timeout: 6000
                write_timeout: 6000
                read_timeout: 6000
                tags:
                  - user-level
                client_certificate:
                  id: 4e3ad2e4-0bc4-4638-8e34-c84a417ba39b
                tls_verify: true
                tls_verify_depth: null
                ca_certificates:
                  - 4e3ad2e4-0bc4-4638-8e34-c84a417ba39b
                enabled: true
            http service:
              value:
                name: my-service2
                retries: 5
                protocol: http
                host: example.com
                port: 80
                path: /some_api
                connect_timeout: 6000
                write_timeout: 6000
                read_timeout: 6000
                enabled: true
    upstream-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                id: 58c8ccbb-eafb-4566-991f-2ed4f678fa70
                created_at: 1422386534
                name: my-upstream
                algorithm: round-robin
                hash_on: none
                hash_fallback: none
                hash_on_cookie_path: /
                slots: 10000
                healthchecks:
                  passive:
                    type: http
                    healthy:
                      http_statuses:
                        - 200
                        - 201
                        - 202
                        - 203
                        - 204
                        - 205
                        - 206
                        - 207
                        - 208
                        - 226
                        - 300
                        - 301
                        - 302
                        - 303
                        - 304
                        - 305
                        - 306
                        - 307
                        - 308
                      successes: 0
                    unhealthy:
                      http_statuses:
                        - 429
                        - 500
                        - 503
                      timeouts: 0
                      http_failures: 0
                      tcp_failures: 0
                  active:
                    https_verify_certificate: true
                    healthy:
                      http_statuses:
                        - 200
                        - 302
                      successes: 0
                      interval: 0
                    unhealthy:
                      http_failures: 0
                      http_statuses:
                        - 429
                        - 404
                        - 500
                        - 501
                        - 502
                        - 503
                        - 504
                        - 505
                      timeouts: 0
                      tcp_failures: 0
                      interval: 0
                    type: http
                    concurrency: 10
                    headers:
                      - x-my-header:
                          - foo
                          - bar
                        x-another-header:
                          - bla
                    timeout: 1
                    http_path: /
                    https_sni: example.com
                  threshold: 0
                tags:
                  - user-level
                  - low-priority
                host_header: example.com
                client_certificate:
                  id: ea29aaa3-3b2d-488c-b90c-56df8e0dd8c6
                use_srv_name: false
            properties:
              name:
                type: string
                description: >-
                  This is a hostname, which must be equal to the `host` of a
                  service.
                example: my-upstream
              algorithm:
                type: string
                description: >
                  Which load balancing algorithm to use. Accepted values are:
                  `consistent-hashing`, `least-connections`,` round-robin`.
                  Default: `round-robin`.
                enum:
                  - consistent-hashing
                  - least-connections
                  - round-robin
                default: round-robin
                example: round-robin
              hash_on:
                type: string
                description: >-
                  What to use as hashing input. Using none results in a
                  weighted-round-robin scheme with no hashing
                default: none
                enum:
                  - none
                  - consumer
                  - ip
                  - cookie
                  - uri_capture
                  - path
                  - query_arg
              hash_fallback:
                type: string
                description: >-
                  What to use as hashing input if the primary hash_on does not
                  return a hash (eg. header is missing, or no Consumer
                  identified). Not available if hash_on is set to cookie.
                default: none
                enum:
                  - none
                  - consumer
                  - ip
                  - cookie
                  - uri_capture
                  - path
                  - query_arg
                example: none
              hash_on_header:
                type: string
                description: >-
                  The header name to take the value from as hash input. Only
                  required when `hash_on` is set to header.
                example: none
              hash_fallback_header:
                type: string
                description: >-
                  The header name to take the value from as hash input. Only
                  required when hash_fallback is set to header.
                default: none
                example: none
              hash_on_cookie:
                type: string
                description: >-
                  The cookie name to take the value from as hash input. Only
                  required when `hash_on` or `hash_fallback` is set to `cookie`.
                  If the specified cookie is not in the request, Kong will
                  generate a value and set the cookie in the response.
                example: none
              hash_on_cookie_path:
                type: string
                description: >-
                  The cookie path to set in the response headers. Only required
                  when `hash_on` or `hash_fallback` is set to `cookie`. Default:
                  `/`.
                default: /
                example: /
              hash_on_query_arg:
                type: string
                description: >-
                  The name of the query string argument to take the value from
                  as hash input. Only required when `hash_on` is set to
                  `query_arg`.
                example: hash_value
              hash_fallback_query_arg:
                type: string
                description: >-
                  The name of the query string argument to take the value from
                  as hash input. Only required when `hash_fallback` is set to
                  `query_arg`.
                example: hash_value
              hash_on_uri_capture:
                type: string
                description: >-
                  The name of the route URI capture to take the value from as
                  hash input. Only required when `hash_on` is set to
                  `uri_capture`.
                example: hash_value
              hash_fallback_uri_capture:
                type: string
                description: >-
                  The name of the route URI capture to take the value from as
                  hash input. Only required when `hash_fallback` is set to
                  `uri_capture`.
                example: hash_value
              slots:
                type: integer
                description: >-
                  The number of slots in the load balancer algorithm. If the
                  algorithm is set to `round-robin`, this setting determines the
                  maximum number of slots. If the algorithm is set to
                  `consistent-hashing`, this setting determines the actual
                  number of slots in the algorithm. Accepts an integer in the
                  range 10-65536.
                minimum: 10
                maximum: 65536
                default: 10000
                example: 5000
              healthchecks:
                type: object
                properties:
                  passive:
                    type: object
                    properties:
                      type:
                        type: string
                        description: >-
                          Whether to perform passive health checks interpreting
                          HTTP/HTTPS statuses, or just check for TCP connection
                          success. In passive checks, http and https options are
                          equivalent. Accepted values are: `tcp`, `http`,
                          `https`, `grpc`, `grpcs`.
                        default: http
                        enum:
                          - tcp
                          - http
                          - https
                          - grpc
                          - grpcs
                        example: tcp
                      healthy:
                        type: object
                        properties:
                          http_statuses:
                            type: array
                            description: >-
                              An array of HTTP statuses which represent
                              healthiness when produced by proxied traffic, as
                              observed by passive health checks.  With
                              form-encoded, the notation is
                              `http_statuses[]=200&http_statuses[]=201`. With
                              JSON, use an array.
                            default:
                              - 200
                              - 201
                              - 202
                              - 203
                              - 204
                              - 205
                              - 206
                              - 207
                              - 208
                              - 226
                              - 300
                              - 301
                              - 302
                              - 303
                              - 304
                              - 305
                              - 306
                              - 307
                              - 308
                            example:
                              - 200
                              - 201
                              - 202
                            items:
                              type: integer
                              enum:
                                - 200
                                - 201
                                - 202
                                - 203
                                - 204
                                - 205
                                - 206
                                - 207
                                - 208
                                - 226
                                - 300
                                - 301
                                - 302
                                - 303
                                - 304
                                - 305
                                - 306
                                - 307
                                - 308
                          successes:
                            type: integer
                            description: >-
                              Number of successes in proxied traffic (as defined
                              by `healthchecks.passive.healthy.http_statuses`)
                              to consider a target healthy, as observed by
                              passive health checks.
                            default: 0
                            example: 2
                      unhealthy:
                        type: object
                        properties:
                          http_statuses:
                            type: array
                            description: >-
                              An array of HTTP statuses which represent
                              unhealthiness when produced by proxied traffic, as
                              observed by passive health checks. With
                              form-encoded, the notation is
                              `http_statuses[]=429&http_statuses[]=500`. With
                              JSON, use an array.
                            default:
                              - 429
                              - 500
                              - 503
                            example:
                              - 500
                              - 503
                            items:
                              type: integer
                              enum:
                                - 429
                                - 500
                                - 503
                          timeouts:
                            type: integer
                            description: >-
                              Number of timeouts in proxied traffic to consider
                              a target unhealthy, as observed by passive health
                              checks.
                            default: 0
                            example: 1
                          http_failures:
                            type: integer
                            description: >-
                              Number of HTTP failures in proxied traffic (as
                              defined by
                              `healthchecks.passive.unhealthy.http_statuses`) to
                              consider a target unhealthy, as observed by
                              passive health checks.
                            default: 0
                            example: 3
                          tcp_failures:
                            type: integer
                            description: >-
                              Number of TCP connection failures to consider a
                              target unhealthy, as observed by passive health
                              checks.
                            default: 0
                            example: 1
                  active:
                    type: object
                    properties:
                      https_verify_certificate:
                        type: boolean
                      healthy:
                        type: object
                        properties:
                          http_statuses:
                            type: array
                            description: >-
                              An array of HTTP statuses to consider a success,
                              indicating healthiness, when returned by a probe
                              in active health checks. With form-encoded, the
                              notation is
                              `http_statuses[]=200&http_statuses[]=302`. With
                              JSON, use an array.
                            default:
                              - 200
                              - 302
                            example:
                              - 200
                              - 201
                            items:
                              type: integer
                          successes:
                            type: integer
                            description: >-
                              Number of successes in active probes (as defined
                              by `healthchecks.active.healthy.http_statuses`) to
                              consider a target healthy.
                            default: 0
                            example: 3
                          interval:
                            type: integer
                            description: >-
                              Interval between active health checks for healthy
                              targets (in seconds). A value of zero indicates
                              that active probes for healthy targets should not
                              be performed.
                            default: 0
                            example: 30
                      unhealthy:
                        type: object
                        properties:
                          http_failures:
                            type: integer
                            description: >-
                              Number of HTTP failures in active probes (as
                              defined by
                              `healthchecks.active.unhealthy.http_statuses`) to
                              consider a target unhealthy.
                            default: 0
                            example: 2
                          http_statuses:
                            type: array
                            description: >-
                              An array of HTTP statuses to consider a failure,
                              indicating unhealthiness, when returned by a probe
                              in active health checks. With form-encoded, the
                              notation is
                              `http_statuses[]=429&http_statuses[]=404`. With
                              JSON, use an array.
                            default:
                              - 429
                              - 404
                              - 500
                              - 501
                              - 502
                              - 503
                              - 504
                              - 505
                            example:
                              - 400
                              - 404
                            items:
                              type: integer
                          timeouts:
                            type: integer
                            description: >-
                              Number of timeouts in active probes to consider a
                              target unhealthy.
                            default: 0
                            example: 2
                          tcp_failures:
                            type: integer
                            description: >-
                              Number of TCP failures in active probes to
                              consider a target unhealthy.
                            default: 0
                            example: 1
                          interval:
                            type: integer
                            description: >-
                              Interval between active health checks for
                              unhealthy targets (in seconds). A value of zero
                              indicates that active probes for unhealthy targets
                              should not be performed.
                            default: 0
                            example: 10
                      type:
                        type: string
                        description: >-
                          Whether to perform active health checks using HTTP or
                          HTTPS, or just attempt a TCP connection.
                        enum:
                          - tcp
                          - http
                          - https
                          - grpc
                          - grpcs
                        default: http
                        example: https
                      concurrency:
                        type: integer
                        description: >-
                          Number of targets to check concurrently in active
                          health checks.
                        default: 10
                        example: 5
                      timeout:
                        type: integer
                        description: Socket timeout for active health checks (in seconds).
                        default: 1
                        example: 5
                      http_path:
                        type: string
                        description: >-
                          Path to use in GET HTTP request to run as a probe on
                          active health checks.
                        default: /
                      https_sni:
                        type: string
                        description: >-
                          The hostname to use as an SNI (Server Name
                          Identification) when performing active health checks
                          using HTTPS. This is particularly useful when Targets
                          are configured using IPs, so that the target host’s
                          certificate can be verified with the proper SNI.
                  threshold:
                    type: integer
                    description: >-
                      The minimum percentage of the upstream’s targets’ weight
                      that must be available for the whole upstream to be
                      considered healthy.
                    minimum: 0
                    maximum: 100
                    default: 0
              tags:
                type: array
                description: >-
                  An optional set of strings associated with the Upstream for
                  grouping and filtering.
                example:
                  - user-level
                  - low-priority
                items:
                  type: string
              host_header:
                type: string
                description: >-
                  The hostname to be used as Host header when proxying requests
                  through Kong.
              client_certificate:
                type: object
                description: >-
                  If set, the certificate to be used as client certificate while
                  TLS handshaking to the upstream server.
                properties:
                  id:
                    type: string
                    example: ea29aaa3-3b2d-488c-b90c-56df8e0dd8c6
            required:
              - name
          examples:
            Upstream:
              value:
                name: my-upstream
                algorithm: round-robin
                hash_on: none
                hash_fallback: none
                hash_on_cookie_path: /
                slots: 10000
                healthchecks:
                  passive:
                    type: http
                    healthy:
                      http_statuses:
                        - 200
                        - 201
                        - 202
                        - 203
                        - 204
                        - 205
                        - 206
                        - 207
                        - 208
                        - 226
                        - 300
                        - 301
                        - 302
                        - 303
                        - 304
                        - 305
                        - 306
                        - 307
                        - 308
                      successes: 0
                    unhealthy:
                      http_statuses:
                        - 429
                        - 500
                        - 503
                      timeouts: 0
                      http_failures: 0
                      tcp_failures: 0
                  active:
                    https_verify_certificate: true
                    healthy:
                      http_statuses:
                        - 200
                        - 302
                      successes: 0
                      interval: 0
                    unhealthy:
                      http_failures: 0
                      http_statuses:
                        - 429
                        - 404
                        - 500
                        - 501
                        - 502
                        - 503
                        - 504
                        - 505
                      timeouts: 0
                      tcp_failures: 0
                      interval: 0
                    type: http
                    concurrency: 10
                    headers:
                      type: object
                      properties:
                        x-my-header:
                          type: array
                          items:
                            type: string
                          description: The value(s) of the x-my-header header.
                        x-another-header:
                          type: array
                          items:
                            type: string
                          description: The value(s) of the x-another-header header.
                    timeout: 1
                    http_path: /
                    https_sni: example.com
                  threshold: 0
                tags:
                  - user-level
                  - low-priority
                host_header: example.com
                client_certificate:
                  id: ea29aaa3-3b2d-488c-b90c-56df8e0dd8c6
                use_srv_name: false
            Example request:
              value:
                name: my-upstream
                tags:
                  - user-level
                  - low-priority
                algorithm: round-robin
    target-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                upstream:
                  id: bdab0e47-4e37-4f0b-8fd0-87d95cc4addc
                target: example.com:8000
                weight: 100
                tags:
                  - user-level
                  - low-priority
            properties:
              upstream:
                type: object
                description: >
                  The unique identifier or the name of the upstream for which to
                  update the target.
                properties:
                  id:
                    type: string
                    example: 173a6cee-90d1-40a7-89cf-0329eca780a6
                    description: >-
                      The unique identifier or the name of the upstream for
                      which to update the target.
              weight:
                default: 100
                description: >-
                  The weight this target gets within the upstream loadbalancer
                  (`0`-`65535`). If the hostname resolves to an SRV record, the
                  `weight` value will be overridden by the value from the DNS
                  record.
                type: integer
                minimum: 0
                maximum: 65535
              tags:
                type: array
                description: >-
                  An optional set of strings associated with the Target for
                  grouping and filtering.
                items:
                  type: string
              target:
                type: string
                description: The target IP address
                example: 192.158.1.38
          examples:
            Example:
              value:
                upstream:
                  id: fe335516-b679-44e5-8bf0-f9af0524e230
                target: 192.158.1.38
                weight: 100
                tags:
                  - string
    vault-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                prefix: env
                name: env
                description: >-
                  This vault is used to retrieve redis database access
                  credentials
                config:
                  prefix: SSL_
                tags:
                  - database-credentials
                  - data-plane
            properties:
              prefix:
                type: string
                description: >
                  The unique prefix (or identifier) for this Vault
                  configuration. The prefix is used to load the right Vault
                  configuration and implementation when referencing secrets with
                  the other entities.
                example: pre
              name:
                type: string
                description: >
                  The name of the Vault that’s going to be added. Currently, the
                  Vault implementation must be installed in every Kong instance.
                example: env
              description:
                type: string
                description: |
                  The description of the Vault object.
                example: >-
                  This vault is used to retrieve redis database access
                  credentials
              config:
                type: object
                description: >
                  The configuration properties for the Vault which can be found
                  on the vaults’ documentation page.
                properties:
                  prefix:
                    type: string
                    example: SSL_
              tags:
                type: array
                description: >
                  An optional set of strings associated with the Vault for
                  grouping and filtering.
                items:
                  type: string
          examples:
            Example 1:
              value:
                prefix: pre
                name: env
                description: >-
                  This vault is used to retrieve redis database access
                  credentials
                config:
                  prefix: SSL_
                tags:
                  - database-credentials
                  - data-plane
    consumer-groups-request:
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                name: JL
                tags:
                  - tag1
                  - tag2
            properties:
              name:
                type: string
                description: A unique name for the consumer group you want to create.
                example: Example
              tags:
                type: array
                description: >-
                  An optional set of strings associated with the consumer group
                  for grouping and filtering.
                items:
                  type: string
            required:
              - name
          examples:
            Example 1:
              value:
                name: Example
                tags:
                  - string
      description: Consumer groups request body
    create-dp-client-cert:
      content:
        application/json:
          schema:
            type: object
            properties:
              cert:
                type: string
                description: JSON escaped string of the certificate.
            required:
              - cert
          examples:
            Sample DP Client Certificate:
              value:
                cert: "-----BEGIN CERTIFICATE-----\r\n*****\r\n-----END CERTIFICATE-----\r\n"
      description: Request body for creating a dp-client-certificate.
    CompositeMemebershipAdd:
      content:
        application/json:
          schema:
            type: object
            properties:
              members:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
          examples:
            Example 1:
              value:
                members:
                  - id: 1beb9ad3-d21b-4090-b6e3-574784d1166d
                  - id: 778a0474-687d-41af-8e51-a0488d790586
                  - id: fa85f8e8-2e5a-496e-b6d0-4e534eaab459
      description: >-
        Request body for adding a list of child runtime groups to a composite
        runtime group membership.
    CompositeMembershipRemove:
      content:
        application/json:
          schema:
            type: object
            properties:
              members:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
          examples:
            Example 1:
              value:
                members:
                  - id: 1beb9ad3-d21b-4090-b6e3-574784d1166d
                  - id: 778a0474-687d-41af-8e51-a0488d790586
                  - id: fa85f8e8-2e5a-496e-b6d0-4e534eaab459
      description: >-
        Request body for removing a list of child runtime groups from a
        composite runtime group membership.
  responses:
    ReportSingle:
      description: A response including a single report.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Report'
    ReportCollection:
      description: A paginated list response for a collection of reports.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            type: object
            example:
              Example 1:
                status: 404
                title: Not Found
                instance: konnect:trace:2287285207635123011
                detail: The requested report was not found
            description: The error response object.
            properties:
              type:
                type: string
                description: Documentation for this error.
              status:
                type: integer
                description: The HTTP status code.
                example: 404
              title:
                type: string
                description: The error response code.
                example: Not Found
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: The requested report was not found
                description: Details about the error.
            $ref: '#/components/schemas/NotFoundError'
          examples:
            NotFoundExample:
              $ref: '#/components/examples/NotFoundExample'
    TooManyRequests:
      description: Too many requests
      content:
        application/problem+json:
          schema:
            type: object
            example:
              status: 429
              type: https://kongapi.info/konnect/too-many-requests
              title: Too Many Requests
              instance: konnect:trace:2287285207635123011
              detail: >-
                You have exceeded your rate limit for this time period.  Please
                wait and try again.
            description: The error response object.
            properties:
              type:
                type: string
                description: Documentation for this error.
              status:
                type: integer
                description: The HTTP status code.
                example: 429
              title:
                type: string
                description: The error response code.
                example: Too Many Requests
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: >-
                  You have exceeded your rate limit for this time period. 
                  Please wait and try again.
                description: Details about the error.
    PermissionDenied:
      description: Permission denied
      content:
        application/problem+json:
          schema:
            type: object
            example:
              status: 403
              type: https://kongapi.info/konnect/permission-denied
              title: Permission denied
              instance: konnect:trace:2822394689570210664
              detail: You do not have sufficient permissions to perform this action.
            description: The error object.
            properties:
              type:
                type: string
                description: Documentation for this error.
              status:
                type: integer
                description: HTTP status code.
                example: 403
              title:
                type: string
                example: Bad Request
                description: HTTP status code
              instance:
                type: string
                description: Konnect traceback error code.
                example: konnect:trace:3674017986744198214
              detail:
                type: string
                description: Information about the error response.
                example: Only org admins or analytics admins can create reports.
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            type: object
            description: The error object
            properties:
              type:
                type: string
                description: Documentation for this error.
              status:
                type: integer
                description: The HTTP response code
                example: 400
              title:
                type: string
                example: Bad Request
                description: The Error response
              instance:
                type: string
                description: The Konnect traceback ID.
                example: konnect:trace:3674017986744198214
              invalid_parameters:
                type: array
                description: >-
                  An array of objects that contains information related to the
                  error response.
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    reason:
                      type: string
                    rule:
                      type: string
            $ref: '#/components/schemas/BadRequestError'
    SlugConflict:
      description: Conflict - `slug` property must be unique
      content:
        application/problem+json:
          schema:
            type: object
            required:
              - status
              - title
              - instance
            properties:
              status:
                type: number
              title:
                type: string
              type:
                type: string
              instance:
                type: string
          examples:
            SlugConflictExample:
              $ref: '#/components/examples/SlugConflictExample'
    VersionSpecConflict:
      description: Conflict - only one version specification can exist
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          examples:
            VersionSpecConflictExample:
              $ref: '#/components/examples/VersionSpecConflictExample'
    VersionSpecHiddenConflict:
      description: >-
        Conflict - name attribute must be unique accross legacy version
        specifications
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          examples:
            VersionSpecConflictExample:
              $ref: '#/components/examples/VersionSpecHiddenConflictExample'
    ApiProductUnauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
    ApiProductNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
          examples:
            NotFoundExample:
              $ref: '#/components/examples/NotFoundExample'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
          examples:
            ForbiddenExample:
              $ref: '#/components/examples/ForbiddenExample'
            UnauthorizedExample:
              $ref: '#/components/examples/ForbiddenExample'
    APIProductResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProduct'
          examples:
            Create API Product Response:
              $ref: '#/components/examples/APIProductExample'
    ListAPIProductResponse:
      description: List of API products
      content:
        application/json:
          schema:
            title: ListAPIProductsResponse
            type: object
            required:
              - data
              - meta
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProduct'
          examples:
            API Product Collection:
              value:
                data:
                  - id: e7a4f6c0-5777-4a37-bcb9-2d37d3b362ee
                    name: API Product
                    description: Text describing the API product
                    portal_ids: []
                    created_at: '2023-01-01T00:00:00.000Z'
                    updated_at: '2023-01-01T00:00:00.000Z'
                    labels:
                      env: test
                meta:
                  page:
                    number: 1
                    size: 1
                    total: 10
    APIProductVersionResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductVersion'
          examples:
            Create API Product Response:
              $ref: '#/components/examples/APIProductVersionExample'
    ListAPIProductVersionResponse:
      description: List of API products
      content:
        application/json:
          schema:
            title: ListAPIProductVersionsResponse
            type: object
            required:
              - data
              - meta
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProductVersion'
          examples:
            API Product Version Collection:
              value:
                data:
                  - id: 9f5061ce-78f6-4452-9108-ad7c02821fd5
                    name: v1
                    gateway_service:
                      runtime_group_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
                      id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
                    publish_status: unpublished
                    deprecated: false
                    created_at: '2023-01-01T00:00:00.000Z'
                    updated_at: '2023-01-01T00:00:00.000Z'
                meta:
                  page:
                    number: 1
                    size: 1
                    total: 10
    APIProductDocumentResponse:
      description: API product document
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductDocument'
          examples:
            Create API Product Document Response:
              $ref: '#/components/examples/APIProductDocumentExample'
    ListAPIProductDocumentResponse:
      description: List of API product documents
      content:
        application/json:
          schema:
            type: object
            required:
              - data
              - meta
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProductDocumentSummary'
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
          examples:
            List API Product Document Response:
              $ref: '#/components/examples/ListAPIProductDocumentSummaryExample'
        application/vnd.konnect.document-tree+json:
          schema:
            type: object
            required:
              - data
              - meta
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentTree'
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
          examples:
            List API Product Document Response:
              $ref: '#/components/examples/APIProductDocumentTreeExample'
    ListAPIProductVersionSpecResponse:
      description: List of API product version specification
      content:
        application/json:
          schema:
            title: ListAPIProductVersionSpecResponse
            type: object
            required:
              - data
              - meta
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIProductVersionSpec'
          examples:
            List API Product Version Document Response:
              $ref: '#/components/examples/ListAPIProductVersionSpecExample'
    APIProductVersionSpecResponse:
      description: API product version specification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductVersionSpec'
          examples:
            API Product Version Document Response:
              $ref: '#/components/examples/APIProductVersionSpecExample'
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnsupportedMediaTypeError'
          examples:
            UnsupportedMediaTypeExample:
              $ref: '#/components/examples/UnsupportedMediaTypeExample'
    AuditLogReplayJob:
      description: Response from fetching or updating an audit log replay job
      content:
        application/json:
          schema:
            type: object
            properties:
              start_at:
                type: string
                format: date-time
                example: '2017-07-21T17:32:28Z'
                description: >-
                  The start of a date-time range. Initial value is
                  0001-01-01T00:00:0Z.
              end_at:
                type: string
                format: date-time
                example: '2017-07-21T17:32:28Z'
                description: >-
                  The end of a date-time range. Initial value is
                  0001-01-01T00:00:0Z.
              status:
                type: string
                enum:
                  - unconfigured
                  - accepted
                  - pending
                  - running
                  - completed
                  - failed
                readOnly: true
              updated_at:
                type: string
                description: >-
                  Timestamp when this job was last updated. Initial value is
                  0001-01-01T00:00:0Z.
                format: date-time
                readOnly: true
    AuditLogWebhook:
      description: Get response for audit log webhook
      content:
        application/json:
          schema:
            type: object
            properties:
              endpoint:
                type: string
                example: https://example.com/audit-logs
                description: The endpoint that will receive audit log messages.
              enabled:
                type: boolean
                example: true
                description: Indicates whether audit data should be sent to the webhook.
              log_format:
                type: string
                example: cef
                enum:
                  - cef
                  - json
                description: The output format of each log messages.
                default: cef
              updated_at:
                type: string
                description: >-
                  Timestamp when this webhook was last updated. Initial value is
                  0001-01-01T00:00:0Z.
                format: date-time
                readOnly: true
          examples:
            Get Audit Log Webhook:
              $ref: '#/components/examples/Get-Audit-Log-Webhook'
    AuditLogWebhookStatus:
      description: Get response for audit log webhook status
      content:
        application/json:
          schema:
            type: object
            properties:
              webhook_status:
                type: string
                example: active
                enum:
                  - active
                  - inactive
                description: >-
                  Current status of a webhook. `active` indicates the webhook is
                  sending or ready to send requests. 

                  `inactive` indicates the webhook has been turned off due to
                  failed attempts.
              webhook_enabled:
                type: boolean
                example: true
                description: >-
                  Configured status of a webhook. `enabled` indicates the client
                  will accept requests. 

                  `disabled` indicates the client will not accept requests.
              last_attempt_at:
                type: string
                format: date-time
                example: '2023-03-21T09:29:14.52Z'
                description: >-
                  The last time a request was made to the webhook, regardless of
                  outcome.
              last_response_code:
                type: integer
                example: 401
                description: The last response code received from the webhook.
              last_response_message:
                type: string
                example: Unauthenticated
                description: >-
                  The last message received from the webhook. Useful for
                  debugging.
          examples:
            Get Audit Log Webhook Status:
              $ref: '#/components/examples/Get-Audit-Log-Webhook-Status'
    JWKS:
      description: Get response for the audit log JSON Web Keys
      content:
        application/json:
          schema:
            type: object
            properties:
              keys:
                type: array
                items:
                  $ref: '#/components/schemas/JWK'
          examples:
            JWKS:
              $ref: '#/components/examples/JWKS'
    WebhookBadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
          examples:
            Request Format is Invalid:
              $ref: '#/components/examples/400-request-format-is-invalid'
            Authorization Cannot be Blank:
              $ref: '#/components/examples/400-authorization-cannot-be-blank'
            Endpoint Cannot be Blank:
              $ref: '#/components/examples/400-endpoint-cannot-be-blank'
            Endpoint Must be a valid URL:
              $ref: '#/components/examples/400-endpoint-must-be-valid-url'
    ReplayJobBadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    ReplayJobConflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          examples:
            Job Running:
              $ref: '#/components/examples/409-job-running'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
            type: object
            description: The error response object.
            properties:
              status:
                type: integer
                example: 403
                description: The HTTP status code.
              title:
                type: string
                description: The Error Response.
                example: Unauthorized
              instance:
                type: string
                description: The Konnect traceback code.
                example: konnect:trace:952172606039454040
              detail:
                type: string
                description: Details about the error response.
                example: You do not have permission to perform this action
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
            Unauthorized:
              $ref: '#/components/examples/403-permission-denied'
    UserSingle:
      description: A get action response of a single user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            Example:
              $ref: '#/components/examples/Get-User-Response'
    UserCollection:
      description: A paginated list response for a collection of users.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          examples:
            User Collection Response:
              $ref: '#/components/examples/user-collection-response-example'
    TeamSingle:
      description: A response including a single team.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Team'
          examples:
            Single team response:
              $ref: '#/components/examples/single-team-response'
    TeamCollection:
      description: A paginated list response for a collection of users.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
          examples:
            Team Collection:
              value:
                meta:
                  page:
                    number: 1
                    size: 1
                    total: 10
                data:
                  - id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
                    name: IDM - Developers
                    description: The developers for the IDM API.
                    system_team: false
                    created_at: '2022-02-07T17:46:57.52Z'
                    updated_at: '2022-09-25T13:00:00.00Z'
    TeamMappingCollection:
      description: A paginated list response for a collection of team mappings.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMapping'
          examples:
            Team Mapping Collection:
              $ref: '#/components/examples/team-mapping-collection'
    TeamGroupMappingCollection:
      description: A paginated collection of mappings grouped by team_id.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/TeamGroupMapping'
          examples:
            Team Mapping Collection:
              $ref: '#/components/examples/team-mapping-collection'
    AssignedRoleSingle:
      description: A get action response of a single assigned role.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssignedRole'
          examples:
            Assigned Role Example:
              $ref: '#/components/examples/Assigned-Role-Example'
    AssignedRoleCollection:
      description: A paginated list response for a collection of assigned roles.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                description: An Array
                items:
                  $ref: '#/components/schemas/AssignedRole'
          examples:
            CollectionExample:
              $ref: '#/components/examples/collection-example'
    AuthenticationSettings:
      description: Response for authentication settings endpoint
      content:
        application/json:
          schema:
            type: object
            properties:
              basic_auth_enabled:
                type: boolean
                example: true
                description: The organization has basic auth enabled.
              oidc_auth_enabled:
                type: boolean
                example: false
                description: The organization has OIDC disabled.
              idp_mapping_enabled:
                type: boolean
                example: true
                description: IdP groups determine the Konnect teams a user has.
              konnect_mapping_enabled:
                type: boolean
                example: false
                description: A Konnect Identity Admin assigns teams to a user.
          examples:
            Get Authorization Settings:
              $ref: '#/components/examples/Get-Authentication-Settings'
    IdentityBadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
          examples:
            Request Format is Invalid:
              $ref: '#/components/examples/400-request-format-is-invalid'
            Cannot be Blank:
              $ref: '#/components/examples/400-cannot-be-blank'
            Invalid ID format:
              $ref: '#/components/examples/400-invalid-id-format'
            Must be a valid UUID v4:
              $ref: '#/components/examples/400-valid-uuid'
            System teams cannot be modified:
              $ref: '#/components/examples/400-systems-team-modified'
            Password Complexity:
              $ref: '#/components/examples/400-password-complexity'
            Authentication Settings cannot be both Disabled:
              $ref: >-
                #/components/examples/400-authentication-settings-cannot-be-both-disabled
            OIDC needs an IdP configuration:
              $ref: '#/components/examples/400-oidc-auth-enabled-needs-idp'
            IdP configuration is required:
              $ref: '#/components/examples/400-idp-config-is-required'
            Unsupported filter operation:
              value:
                status: 400
                title: Bad Request
                instance: konnect:trace:3674017986744198214
                invalid_parameters:
                  - field: '[filter][actions][contains]'
                    reason: '[contains] is not a supported filter operation'
    IdentityConflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          examples:
            User is Already Active:
              $ref: '#/components/examples/409-user-is-already-active'
    IdentityPermissionDenied:
      description: Permission denied
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
          examples:
            Permission Denied:
              $ref: '#/components/examples/403-permission-denied'
            Invalid Permissions:
              $ref: '#/components/examples/403-invalid-permissions'
            Username or Password invalid:
              $ref: '#/components/examples/403-auth-invalid'
    PreconditionFailed:
      description: Precondition Failed
      content:
        application/problem+json:
          schema:
            type: object
            description: The error response object.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 412
              title:
                type: string
                description: The error response code.
                example: Precondition Failed
              instance:
                type: string
                description: The Konnect traceback code.
                example: konnect:trace:1896611024257578096
              detail:
                type: string
                description: Details about the error response.
                example: IdP configuration not found
          examples:
            Precondition Failed:
              $ref: '#/components/examples/412-precondition-failed'
    RateLimited:
      description: Rate Limited
      content:
        application/problem+json:
          schema:
            type: object
            description: The error object
            properties:
              status:
                type: integer
                description: The HTTP response code
                example: 429
              title:
                type: string
                example: Rate Limited
                description: The Error response
              instance:
                type: string
                description: The Konnect traceback ID.
                example: konnect:trace:3674017986744198214
              detail:
                type: string
                description: Detailed explanation of the error response.
                example: Too many requests
          examples:
            Rate Limited:
              $ref: '#/components/examples/429-rate-limited'
    IdentityUnauthenticated:
      description: Unauthenticated
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
          examples:
            Unauthorized:
              $ref: '#/components/examples/401-unauthenticated'
    IdentityNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
          examples:
            Not Found:
              $ref: '#/components/examples/404-not-found'
    TeamMappingResponse:
      description: A paginated list response for a collection of team mappings.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                description: Contains pagination data.
                properties:
                  page:
                    type: object
                    description: The page object.
                    properties:
                      number:
                        type: integer
                        description: Page number.
                        example: 1
                      size:
                        type: integer
                        description: Page size.
                        example: 9
                      total:
                        type: integer
                        description: Total number of results.
                        example: 5
              data:
                type: array
                items:
                  type: object
                  properties:
                    group:
                      type: string
                      description: Group names.
                      example: 111(@&*$)(@*#_@(gfds re gdsf dfg
                    team_ids:
                      type: array
                      description: Team ID's that belong to the specified group.
                      items:
                        type: string
                        example: 3df49db8-39ff-490d-9fe1-251a3361fb13
          examples:
            Group Collection:
              $ref: '#/components/examples/group-collection-example'
    Roles:
      description: The predefined, or system managed, roles.
      content:
        application/json:
          schema:
            type: object
            properties:
              runtime_groups:
                type: object
                additionalProperties: false
                required:
                  - name
                  - roles
                properties:
                  name:
                    type: string
                    enum:
                      - Runtime Groups
                  roles:
                    type: object
                    properties:
                      admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to all entities
                              within a runtime group.
                            enum:
                              - >-
                                This role grants full write access to all
                                entities within a runtime group.
                      certificate_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Certificate Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              certificates.
                            enum:
                              - >-
                                This role grants full write access to administer
                                certificates.
                      consumer_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Consumer Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              consumers.
                            enum:
                              - >-
                                This role grants full write access to administer
                                consumers.
                      creator:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Creator
                          description:
                            type: string
                            example: >-
                              Creates a new Runtime Group in an organization.
                              The creator becomes the owner of the Runtime Group
                              they create.
                            enum:
                              - >-
                                Creates a new Runtime Group in an organization.
                                The creator becomes the owner of the Runtime
                                Group they create.
                      deployer:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Deployer
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              services, routes and plugins necessary to deploy
                              services in Service Hub.
                            enum:
                              - >-
                                This role grants full write access to administer
                                services, routes and plugins necessary to deploy
                                services in Service Hub.
                      gateway_service_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Gateway Service Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              gateway services.
                            enum:
                              - >-
                                This role grants full write access to administer
                                gateway services.
                      plugin_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Plugin Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              plugins.
                            enum:
                              - >-
                                This role grants full write access to administer
                                plugins.
                      route_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Route Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              routes.
                            enum:
                              - >-
                                This role grants full write access to administer
                                routes.
                      sni_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - SNI Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              SNIs.
                            enum:
                              - >-
                                This role grants full write access to administer
                                SNIs.
                      upstream_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Upstream Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to administer
                              upstreams.
                            enum:
                              - >-
                                This role grants full write access to administer
                                upstreams.
                      viewer:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Viewer
                          description:
                            type: string
                            example: >-
                              This role grants read only access to all entities
                              within a runtime group.
                            enum:
                              - >-
                                This role grants read only access to all
                                entities within a runtime group.
              services:
                type: object
                additionalProperties: false
                required:
                  - name
                  - roles
                properties:
                  name:
                    type: string
                    enum:
                      - Services
                  roles:
                    type: object
                    properties:
                      admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Admin
                          description:
                            type: string
                            example: >-
                              Admin of an existing Service. The admins have all
                              write access permissions related to a Service,
                              service version, service package etc.
                            enum:
                              - >-
                                Admin of an existing Service. The admins have
                                all write access permissions related to a
                                Service, service version, service package etc.
                      application_registration:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Application Registration
                          description:
                            type: string
                            example: >-
                              This role grants permission to enable and disable
                              application registration on a service.
                            enum:
                              - >-
                                This role grants permission to enable and
                                disable application registration on a service.
                      creator:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Creator
                          description:
                            type: string
                            example: >-
                              This access is required to create a service. In
                              addition the creators are granted Admin access to
                              the service they create. This access is not for
                              creating sub-entities such as service versions,
                              implementations, API specs etc.
                            enum:
                              - >-
                                This access is required to create a service. In
                                addition the creators are granted Admin access
                                to the service they create. This access is not
                                for creating sub-entities such as service
                                versions, implementations, API specs etc.
                      deployer:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Deployer
                          description:
                            type: string
                            example: >-
                              This role grants permission to deploy and remove a
                              service from a runtime group.
                            enum:
                              - >-
                                This role grants permission to deploy and remove
                                a service from a runtime group.
                      maintainer:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Maintainer
                          description:
                            type: string
                            example: >-
                              This role grants all write permission to manage a
                              service and to administer plugins.
                            enum:
                              - >-
                                This role grants all write permission to manage
                                a service and to administer plugins.
                      plugins_admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Plugins Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write permission to
                              administer plugins.
                            enum:
                              - >-
                                This role grants full write permission to
                                administer plugins.
                      publisher:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Publisher
                          description:
                            type: string
                            example: >-
                              This role grants permission to publish a service
                              to one or more portals.
                            enum:
                              - >-
                                This role grants permission to publish a service
                                to one or more portals.
                      viewer:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Viewer
                          description:
                            type: string
                            example: >-
                              Viewer has read-only access to all the
                              configurations of a service, attributes, versions,
                              reports, vitals and plugins.
                            enum:
                              - >-
                                Viewer has read-only access to all the
                                configurations of a service, attributes,
                                versions, reports, vitals and plugins.
              audit_logs:
                type: object
                additionalProperties: false
                required:
                  - name
                  - roles
                properties:
                  name:
                    type: string
                    enum:
                      - Audit Logs
                  roles:
                    type: object
                    properties:
                      admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to the Audit
                              log configuration.
                            enum:
                              - >-
                                This role grants full write access to the Audit
                                log configuration.
              identity:
                type: object
                additionalProperties: false
                required:
                  - name
                  - roles
                properties:
                  name:
                    type: string
                    enum:
                      - Identity
                  roles:
                    type: object
                    properties:
                      admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to the Identity
                              configuration.
                            enum:
                              - >-
                                This role grants full write access to the
                                Identity configuration.
              mesh_control_planes:
                type: object
                additionalProperties: false
                required:
                  - name
                  - roles
                properties:
                  name:
                    type: string
                    enum:
                      - Mesh Control Plane
                  roles:
                    type: object
                    properties:
                      admin:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Admin
                          description:
                            type: string
                            example: >-
                              This role grants full write access to the related
                              to Mesh control planes.
                            enum:
                              - >-
                                This role grants full write access to the
                                related to Mesh control planes.
                      creator:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Creator
                          description:
                            type: string
                            example: >-
                              This role grants access to create new Mesh control
                              planes.
                            enum:
                              - >-
                                This role grants access to create new Mesh
                                control planes.
                      viewer:
                        type: object
                        additionalProperties: false
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - Viewer
                          description:
                            type: string
                            example: >-
                              This role grants access to read-only permissions
                              to Mesh control planes.
                            enum:
                              - >-
                                This role grants access to read-only permissions
                                to Mesh control planes.
          examples:
            Predefined Roles:
              value:
                runtime_groups:
                  name: Runtime Groups
                  roles:
                    admin:
                      name: Admin
                      description: >-
                        This role grants full write access to all entities
                        within a runtime group.
                    certificate_admin:
                      name: Certificate Admin
                      description: >-
                        This role grants full write access to administer
                        certificates.
                    consumer_admin:
                      name: Consumer Admin
                      description: >-
                        This role grants full write access to administer
                        consumers.
                    creator:
                      name: Creator
                      description: >-
                        Creates a new Runtime Group in an organization. The
                        creator becomes the owner of the Runtime Group they
                        create.
                    deployer:
                      name: Deployer
                      description: >-
                        This role grants full write access to administer
                        services, routes and plugins necessary to deploy
                        services in Service Hub.
                    gateway_service_admin:
                      name: Gateway Service Admin
                      description: >-
                        This role grants full write access to administer gateway
                        services.
                    plugin_admin:
                      name: Plugin Admin
                      description: >-
                        This role grants full write access to administer
                        plugins.
                    route_admin:
                      name: Route Admin
                      description: This role grants full write access to administer routes.
                    sni_admin:
                      name: SNI Admin
                      description: This role grants full write access to administer SNIs.
                    upstream_admin:
                      name: Upstream Admin
                      description: >-
                        This role grants full write access to administer
                        upstreams.
                    viewer:
                      name: Viewer
                      description: >-
                        This role grants read only access to all entities within
                        a runtime group.
                services:
                  name: Services
                  roles:
                    admin:
                      name: Admin
                      description: >-
                        Admin of an existing Service. The admins have all write
                        access permissions related to a Service, service
                        version, service package etc.
                    application_registration:
                      name: Application Registration
                      description: >-
                        This role grants permission to enable and disable
                        application registration on a service.
                    creator:
                      name: Creator
                      description: >-
                        This access is required to create a service. In addition
                        the creators are granted Admin access to the service
                        they create. This access is not for creating
                        sub-entities such as service versions, implementations,
                        API specs etc.
                    deployer:
                      name: Deployer
                      description: >-
                        This role grants permission to deploy and remove a
                        service from a runtime group.
                    maintainer:
                      name: Maintainer
                      description: >-
                        This role grants all write permission to manage a
                        service and to administer plugins.
                    plugins_admin:
                      name: Plugins Admin
                      description: >-
                        This role grants full write permission to administer
                        plugins.
                    publisher:
                      name: Publisher
                      description: >-
                        This role grants permission to publish a service to one
                        or more portals.
                    viewer:
                      name: Viewer
                      description: >-
                        Viewer has read-only access to all the configurations of
                        a service, attributes, versions, reports, vitals and
                        plugins.
                audit_logs:
                  name: Audit Logs
                  roles:
                    admin:
                      name: Admin
                      description: >-
                        This role grants full write access to the Audit log
                        configuration.
                identity:
                  name: Identity
                  roles:
                    admin:
                      name: Admin
                      description: >-
                        This role grants full write access to the Identity
                        configuration.
                mesh_control_planes:
                  name: Mesh Control Plane
                  roles:
                    admin:
                      name: Admin
                      description: >-
                        This role grants full write access to the related to
                        Mesh control planes.
                    creator:
                      name: Creator
                      description: >-
                        This role grants access to create new Mesh control
                        planes.
                    viewer:
                      name: Viewer
                      description: >-
                        This role grants access to read-only permissions to Mesh
                        control planes.
    SystemAccountCollection:
      description: A paginated list response for a collection of system accounts.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/SystemAccount'
          examples:
            Sample System Accounts:
              value:
                meta:
                  page:
                    number: 1
                    size: 10
                    total: 100
                data:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: Sample System Account
                    created_at: '2019-08-24T14:15:22Z'
                    updated_at: '2019-08-24T14:15:22Z'
                    konnect_managed: false
    SystemAccountSingle:
      description: A response including a single system account.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemAccount'
          examples:
            Sample System Account:
              value:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                name: Sample System Account
                description: This is a sample system account description.
                created_at: '2019-08-24T14:15:22Z'
                updated_at: '2019-08-24T14:15:22Z'
                konnect_managed: false
    SystemAccountAccessTokenSingle:
      description: A response including a single system account access token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemAccountAccessToken'
          examples:
            Sample System Account Access Token:
              value:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                name: Sample Access Token
                created_at: '2019-08-24T14:15:22Z'
                updated_at: '2019-08-24T14:15:22Z'
                expires_at: '2019-08-24T14:15:22Z'
                last_used_at: '2019-08-24T14:15:22Z'
    SystemAccountAccessTokenCollection:
      description: >-
        A paginated list response for a collection of system accounts access
        tokens.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/SystemAccountAccessToken'
          examples:
            Sample System Account Access Token:
              value:
                meta:
                  page:
                    number: 1
                    size: 10
                    total: 100
                data:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: Sample Access Token
                    created_at: '2019-08-24T14:15:22Z'
                    updated_at: '2019-08-24T14:15:22Z'
                    expires_at: '2019-08-24T14:15:22Z'
                    last_used_at: '2019-08-24T14:15:22Z'
    SystemAccountAccessTokenCreated:
      description: >-
        A response including a single system account access token with the
        token.
      content:
        application/json:
          schema:
            type: object
            example:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: Sample Access Token
              created_at: '2022-08-01T14:16:09Z'
              updated_at: '2022-08-02T08:35:49Z'
              expires_at: '2022-12-31T12:52:23Z'
              last_used_at: '2022-10-24T13:05:42Z'
            properties:
              id:
                type: string
                description: ID of the system account access token.
                format: uuid
                readOnly: true
              name:
                type: string
                description: Name of the system account access token.
              created_at:
                type: string
                description: Timestamp of when the system account access token was created.
                format: date-time
                readOnly: true
              updated_at:
                type: string
                description: >-
                  Timestamp of when the system account access token was last
                  updated.
                format: date-time
                readOnly: true
              expires_at:
                type: string
                description: Timestamp of when the system account access token will expire.
                format: date-time
                readOnly: true
              last_used_at:
                type: string
                description: >-
                  Timestamp of when the system account access token was last
                  used.
                format: date-time
                readOnly: true
              token:
                type: string
                description: The token of the system account access token.
                readOnly: true
          examples:
            Sample Access Token:
              value:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                name: Sample Access Token
                created_at: '2019-08-24T14:15:22Z'
                updated_at: '2019-08-24T14:15:22Z'
                expires_at: '2019-08-24T14:15:22Z'
                last_used_at: '2019-08-24T14:15:22Z'
                token: npat_12345678901234567890123456789012345678901234567890
    IdPConfiguration:
      description: A get action response of the IdP configuration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IdP'
    PortalAuthenticationSettings:
      description: Response for authentication settings endpoint
      content:
        application/json:
          schema:
            type: object
            properties:
              basic_auth_enabled:
                type: boolean
                example: true
                description: The organization has basic auth enabled.
              oidc_auth_enabled:
                type: boolean
                example: false
                description: The organization has OIDC disabled.
              oidc_team_mapping_enabled:
                type: boolean
                example: true
                description: IdP groups determine the Portal Teams a developer has.
              konnect_mapping_enabled:
                type: boolean
                example: false
                description: A Konnect Identity Admin assigns teams to a developer.
              oidc_config:
                type: object
                properties:
                  issuer:
                    type: string
                  client_id:
                    type: string
                required:
                  - issuer
                  - client_id
            required:
              - basic_auth_enabled
              - konnect_mapping_enabled
              - oidc_auth_enabled
              - oidc_team_mapping_enabled
    PortalTeamGroupMappingCollection:
      description: A paginated collection of mappings grouped by team_id.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/PortalTeamGroupMapping'
    DeveloperCollection:
      description: A paginated list of developers.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Developer'
          examples:
            Example:
              value:
                meta:
                  page:
                    number: 1
                    size: 10
                    total: 10
                data:
                  - id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
                    email: james.woods@email.com
                    full_name: James Woods
                    preferred_name: Jimmy
                    active: true
                    created_at: '2022-08-17T17:46:57.52Z'
                    updated_at: '2022-10-03T17:00:00.00Z'
    PortalTeamSingle:
      description: A response including a single team.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalTeam'
          examples:
            Example:
              value:
                id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
                name: Gold Tier
                description: Team with access to APIs in the Gold tier
                created_at: '2022-02-07T17:46:57.52Z'
                updated_at: '2022-09-25T13:00:00.00Z'
    PortalTeamCollection:
      description: A paginated list of teams.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
              - meta
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/PortalTeam'
          examples:
            Example:
              value:
                meta:
                  page:
                    number: 1
                    size: 10
                    total: 10
                data:
                  - id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
                    name: Partner
                    description: Team with access to Partner APIs
                    created_at: '2022-02-07T17:46:57.52Z'
                    updated_at: '2022-09-25T13:00:00.00Z'
    RolesDocument:
      description: A set of roles available in portals.
      content:
        application/json:
          schema:
            type: object
            properties:
              services:
                type: object
                required:
                  - name
                  - roles
                properties:
                  name:
                    type: string
                    enum:
                      - Services
                  roles:
                    type: object
                    required:
                      - apiviewer
                      - apiconsumer
                    properties:
                      apiviewer:
                        type: object
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - API Viewer
                          description:
                            type: string
                            enum:
                              - >-
                                API Viewers have read-only access to the
                                documentation of a service in a portal
                      apiconsumer:
                        type: object
                        required:
                          - name
                          - description
                        properties:
                          name:
                            type: string
                            enum:
                              - API Consumer
                          description:
                            type: string
                            enum:
                              - >-
                                API Consumers can make calls to the given
                                service
            required:
              - services
          examples:
            roles:
              value:
                services:
                  name: Services
                  roles:
                    apiviewer:
                      name: API Viewer
                      description: >-
                        API Viewers have read-only access to the documentation
                        of a service in a portal
                    apiconsumer:
                      name: API Consumer
                      description: API Consumers can make calls to the given service
    PortalAssignedRoleResponse:
      description: A get action response of a single assigned role.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAssignedRole'
          examples:
            US Example:
              value:
                id: 1a3c2169-27f8-4594-926b-41df3432d5dc
                role_name: API Viewer
                entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
                entity_type_name: Services
                entity_region: us
            All Regions Example:
              value:
                id: 034cb810-1f2d-40d2-a1ce-31944144668e
                role_name: API Consumer
                entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
                entity_type_name: Services
                entity_region: '*'
    AssignedPortalRoleCollection:
      description: A paginated collection of assigned roles.
      content:
        application/json:
          schema:
            type: object
            required:
              - meta
              - data
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/PortalAssignedRole'
          examples:
            CollectionExample:
              value:
                meta:
                  page:
                    number: 1
                    size: 10
                    total: 100
                data:
                  - id: b02e23c5-8ee4-4e5a-99f4-43329923adce
                    role_name: API Viewer
                    entity_id: 437c7192-fea0-4f35-8478-c8d57783f8c1
                    entity_type_name: Services
                    entity_region: us
                  - id: b02e23c5-8ee4-4e5a-99f4-43329923adce
                    role_name: API Consumer
                    entity_id: 437c7192-fea0-4f35-8478-c8d57783f8c1
                    entity_type: Services
                    entity_region: us
                  - id: 869d9402-f117-4f9a-840f-69acaf70a81a
                    role_name: API Viewer
                    entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
                    entity_type_name: Services
                    entity_region: us
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    sni-response:
      description: SNI response object
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                data:
                  - id: 147f5ef0-1ed6-4711-b77f-489262f8bff7
                    name: my-sni
                    created_at: 1422386534
                    tags:
                      - user-level
                      - low-priority
                    certificate:
                      id: a3ad71a8-6685-4b03-a101-980a953544f6
                  - id: b87eb55d-69a1-41d2-8653-8d706eecefc0
                    name: my-sni
                    created_at: 1422386534
                    tags:
                      - admin
                      - high-priority
                      - critical
                    certificate:
                      id: 4e8d95d4-40f2-4818-adcb-30e00c349618
                next: >-
                  http://localhost:8001/snis?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
            properties:
              data:
                type: array
                description: Array of SNIs
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 147f5ef0-1ed6-4711-b77f-489262f8bff7
                      description: >-
                        The unique identifier or the name attribute of the
                        Certificate whose SNIs are to be retrieved. When using
                        this endpoint, only SNIs associated to the specified
                        Certificate will be listed.
                    name:
                      type: string
                      description: |
                        The SNI name to associate with the given certificate.
                      example: my-sni
                    created_at:
                      type: integer
                      example: 1422386534
                      description: |
                        Unix epoch when the resource was created.
                    tags:
                      type: array
                      description: >
                        An optional set of strings associated with the SNIs for
                        grouping and filtering.
                      items:
                        type: string
                    certificate:
                      type: object
                      description: >
                        The id (a UUID) of the certificate with which to
                        associate the SNI hostname. The Certificate must have a
                        valid private key associated with it to be used by the
                        SNI object.
                      properties:
                        id:
                          type: string
                          example: 2e013e8-7623-4494-a347-6d29108ff68b
                          description: >-
                            The unique identifier or the name attribute of the
                            Certificate whose SNIs
              next:
                type: string
                example: >-
                  http://localhost:8001/snis?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
                description: >-
                  Offset is used to paginate through the API. Provide this value
                  to the next list operation to fetch the next page
          examples:
            Example SNI response:
              value:
                certificate:
                  id: e94215b0-9198-42ce-bf0b-98afff31b2a7
                created_at: 1685646239
                id: cf3b640e-100e-4fa4-aef6-2dc0488d7a58
                name: my-sni
                updated_at: 1685646239
    consumer-response-data:
      description: The consumer object response body
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                data:
                  - id: a4407883-c166-43fd-80ca-3ca035b0cdb7
                    created_at: 1422386534
                    username: my-username
                    custom_id: my-custom-id
                    tags:
                      - user-level
                      - low-priority
                  - id: 01c23299-839c-49a5-a6d5-8864c09184af
                    created_at: 1422386534
                    username: my-username
                    custom_id: my-custom-id
                    tags:
                      - admin
                      - high-priority
                      - critical
                next: >-
                  http://localhost:8001/consumers?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: >-
                        The unique identifier or the name attribute of the
                        consumer.
                      example: a4407883-c166-43fd-80ca-3ca035b0cdb7
                    created_at:
                      type: integer
                      description: Unix epoch when the resource was created.
                      example: 1422386534
                    username:
                      type: string
                      description: >-
                        The unique username of the consumer. You must send
                        either this field or` custom_i`d with the request.
                      example: my-username
                    custom_id:
                      type: string
                      description: >-
                        Field for storing an existing unique ID for the Consumer
                        - useful for mapping Kong with users in your existing
                        database.
                      example: my-custom-id
                    updated_at:
                      type: string
                      description: Unix epoch when the resource was created.
                      example: '1422386534'
                    tags:
                      type: array
                      description: >
                        An optional set of strings associated with the Consumer
                        for grouping and filtering.
                      items:
                        type: string
                        example: admin
              next:
                type: string
                description: Pagination information
                example: >-
                  http://localhost:8001/consumers?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
    consumer-create-response:
      description: New consumer created response
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                id: ec1a1f6f-2aa4-4e58-93ff-b56368f19b27
                created_at: 1422386534
                username: my-username
                custom_id: my-custom-id
                tags:
                  - user-level
                  - low-priority
            properties:
              created_at:
                type: integer
                description: |
                  Unix epoch when the resource was created.
                example: 1684424758
              custom_id:
                type: string
                description: Field for the unique consumer ID
              id:
                type: string
                description: The unique id of the consumer.
                example: c1a1f6f-2aa4-4e58-93ff-b56368f19b27
              tags:
                type: array
                description: >-
                  An optional set of strings associated with the Consumer for
                  grouping and filtering.
                items:
                  type: string
              updated_at:
                type: integer
                description: |
                  Unix epoch when the resource was updated.
                example: 1684424758
              username:
                type: string
                description: The unique username of the consumer.
          examples:
            Example 1:
              value:
                created_at: 1684424758
                custom_id: string
                id: c1a1f6f-2aa4-4e58-93ff-b56368f19b27
                tags:
                  - string
                updated_at: 1684424758
                username: string
    plugin-response:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
                description: >-
                  The name of the Plugin that’s going to be added. Currently,
                  the Plugin must be installed in every Kong instance
                  separately.
                example: rate-limiting
              created_at:
                type: integer
                description: Unix epoch when the resource was created.
              route:
                type: string
                description: >-
                  If set, the plugin will only activate when receiving requests
                  via the specified route. Leave unset for the plugin to
                  activate regardless of the route being used. Default:
                  `null`.With form-encoded, the notation is `route.id=<route id>
                  or route.name=<route name>`. With JSON, use `route:{id:<route
                  id>}` or `route:{name:<route name>}`.
                nullable: true
              service:
                type: string
                description: >-
                  If set, the plugin will only activate when receiving requests
                  via one of the routes belonging to the specified service.
                nullable: true
              consumer:
                type: string
                description: >-
                  If set, the plugin will activate only for requests where the
                  specified has been authenticated. (Note that some plugins can
                  not be restricted to consumers this way.)
                nullable: true
              instance_name:
                type: string
                description: |
                  The Plugin instance name.
                example: rate-limiting-foo
              config:
                type: object
                description: The configuration properties for the Plugin
                properties:
                  hour:
                    type: integer
                    example: 500
                  minute:
                    type: integer
                    example: 500
              protocols:
                type: array
                description: A list of the request protocols that will trigger this plugin.
                items:
                  type: string
                  enum:
                    - http
                    - grpc
                    - grpcs
                    - tls
                    - tcp
                  default: http
              enabled:
                type: boolean
                description: |
                  Whether the plugin is applied. Default: `true`.
                default: true
              tags:
                type: array
                description: >
                  An optional set of strings associated with the Plugin for
                  grouping and filtering.
                items:
                  type: string
          x-examples:
            Example 1:
              id: ce44eef5-41ed-47f6-baab-f725cecf98c7
              name: rate-limiting
              created_at: 1422386534
              route: null
              service: null
              consumer: null
              instance_name: rate-limiting-foo
              config:
                hour: 500
                minute: 20
              protocols:
                - http
                - https
              enabled: true
              tags:
                - user-level
                - low-priority
              ordering:
                before:
                  - plugin-name
          examples:
            Plugin response:
              value:
                data:
                  - id: 02621eee-8309-4bf6-b36b-a82017a5393e
                    name: rate-limiting
                    created_at: 1422386534
                    route: null
                    service: null
                    consumer: null
                    config:
                      hour: 500
                      minute: 20
                    protocols:
                      - http
                      - https
                    enabled: true
                    tags:
                      - user-level
                      - low-priority
                    ordering:
                      before:
                        - plugin-name
                  - id: 66c7b5c4-4aaf-4119-af1e-ee3ad75d0af4
                    name: rate-limiting
                    created_at: 1422386534
                    route: null
                    service: null
                    consumer: null
                    config:
                      hour: 500
                      minute: 20
                    protocols:
                      - tcp
                      - tls
                    enabled: true
                    tags:
                      - admin
                      - high-priority
                      - critical
                next: >-
                  http://localhost:8001/plugins?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
    key-set-response:
      description: Key set object response body
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                id: b58c7d9d-e54f-444c-b24d-cdfc4159f61e
                name: example-key-set
                created_at: 1422386534
                updated_at: 1422386534
                tags:
                  - idp-keys
                next: >-
                  http://localhost:8001/key-sets?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
            properties:
              id:
                type: string
                example: 4D0DBDA-671C-11ED-BA0B-EF1DCCD3725F
              name:
                type: string
                description: |
                  The name to associate with the given key-set.
                example: my-key_set
              created_at:
                type: integer
                description: Unix epoch when the resource was last created.
                example: 1422386534
              updated_at:
                type: integer
                description: |
                  Unix epoch when the resource was last updated.
                example: 1422386534
              tags:
                type: array
                description: |
                  The name to associate with the given key-set.
                items:
                  type: string
              next:
                type: string
                description: >
                  Offset is used to paginate through the API. Provide this value
                  to the next list operation to fetch the next page
                example: >-
                  http://localhost:8001/key-sets?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
          examples:
            example:
              value:
                id: 4D0DBDA-671C-11ED-BA0B-EF1DCCD3725F
                name: my-key_set
                created_at: 1422386534
                updated_at: 1422386534
                tags:
                  - string
                next: >-
                  http://localhost:8001/key-sets?offset=6378122c-a0a1-438d-a5c6-efabae9fb969
    service-response:
      description: >-
        The service response object is returned when creating a new service or
        retreiving an existing service.
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                connect_timeout: 6000
                created_at: 1684437851
                enabled: true
                host: example.com
                id: ebf4e826-b17a-4e23-9d58-2621c9faa135
                name: my-service
                path: /some_api
                port: 80
                protocol: http
                read_timeout: 6000
                retries: 5
                updated_at: 1684437851
                write_timeout: 6000
            properties:
              connect_timeout:
                type: integer
              created_at:
                type: integer
                description: Unix epoch when the resource was last created.
              enabled:
                type: boolean
                description: Service enabled boolean
              host:
                type: string
              id:
                type: string
              name:
                type: string
              path:
                type: string
              port:
                type: integer
              protocol:
                type: string
              read_timeout:
                type: integer
              retries:
                type: integer
              updated_at:
                type: integer
              write_timeout:
                type: integer
          examples:
            Returned Service:
              value:
                connect_timeout: 0
                created_at: 0
                enabled: true
                host: string
                id: string
                name: string
                path: string
                port: 0
                protocol: string
                read_timeout: 0
                retries: 0
                updated_at: 0
                write_timeout: 0
    certificate_response:
      description: >-
        A certificate object represents a public certificate. These fields are
        _referenceable_.
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                data:
                  - cert: >-
                      -----BEGIN CERTIFICATE-----

                      MIIDgzCCAmugAwIBAgIEV6GD9DANBgkqhkiG9w0BAQsFADBbMScwJQYDVQQDDB5SZWdlcnkgU2Vs

                      Zi1TaWduZWQgQ2VydGlmaWNhdGUxIzAhBgNVBAoMGlJlZ2VyeSwgaHR0cHM6Ly9yZWdlcnkuY29t

                      MQswCQYDVQQGEwJVQTAgFw0yMzA1MjUwMDAwMDBaGA8yMTIzMDUyNTE0MTAxOFowRTERMA8GA1UE

                      AwwIYXNkYXNkYXMxIzAhBgNVBAoMGlJlZ2VyeSwgaHR0cHM6Ly9yZWdlcnkuY29tMQswCQYDVQQG

                      EwJVQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKodSp1dIdaK6BVj90gAWZFH5AcQ

                      HY/oRtmheZNWY+9kY3VtuIWVzhxuP3y+ZG5j/TuzDpIoH/aUfinwoQwDSgbhCrG7wbQhoihJQKU1

                      XUjodI8aayQdSiHkE6Q1DXAPnFVOWXmSSA0djRyvNH9ixqjNTBcibt0bCiV9iOt2t/QajEGdF6ia

                      Yf9kjLkxQ/4XWkNgwPhL4aSOOObrdT4pVphHBogfvIwtBL4fI8ZI2qojYtfJM8f/kMdScvN7aZ8r

                      0QKzapelJjFsMTIPOHmPg7HcKVjvpuVGCO9vAso/PURD+g6nXBxsrmQqkCe8Y/41tBJ5GF97+is4

                      oDuyQBjY2f8CAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O

                      BBYEFJgYiJ7UCq9XaLE9Y0vYfHBVWlLlMB8GA1UdIwQYMBaAFJgYiJ7UCq9XaLE9Y0vYfHBVWlLl

                      MA0GCSqGSIb3DQEBCwUAA4IBAQBMD8wnPXCYCxImu5+3fotKnmen4FnL1zd9E1nHFZbGvImsgUFz

                      kfK3KTNrihkqVSrSoP02mUvDVUDZDUU9Lwd9DzUsRT9QdoSnSKdcS5b31Dk8D8evR2zpYWBwJvaZ

                      rm3e3z/9zUXxo5W4Y8N4HL90HqTwA0L2KzPZoc3LaQTpbcPQy5C6BbPZ3eSJH4h7fX8V+korNDnN

                      u+y5qfAXs6YNPozsQeFKgIB673+nI+cC/Y5toDQbFA6ibcXLMszlsJVN+Ko1QalcgwZjX7jG1TbA

                      yrN1eYw5JwCJPLR5vXt+6qlQ0dHcAqlzb7VTiumzLPz72Z3atsfhJNpSQ3cvM+p7

                      -----END CERTIFICATE-----
                    created_at: 1685023857
                    id: e94215b0-9198-42ce-bf0b-98afff31b2a7
                    key: >-
                      -----BEGIN RSA PRIVATE KEY-----

                      MIIEpAIBAAKCAQEAqh1KnV0h1oroFWP3SABZkUfkBxAdj+hG2aF5k1Zj72RjdW24

                      hZXOHG4/fL5kbmP9O7MOkigf9pR+KfChDANKBuEKsbvBtCGiKElApTVdSOh0jxpr

                      JB1KIeQTpDUNcA+cVU5ZeZJIDR2NHK80f2LGqM1MFyJu3RsKJX2I63a39BqMQZ0X

                      qJph/2SMuTFD/hdaQ2DA+EvhpI445ut1PilWmEcGiB+8jC0Evh8jxkjaqiNi18kz

                      x/+Qx1Jy83tpnyvRArNql6UmMWwxMg84eY+DsdwpWO+m5UYI728Cyj89REP6Dqdc

                      HGyuZCqQJ7xj/jW0EnkYX3v6KzigO7JAGNjZ/wIDAQABAoIBAByut6f0zgHIhf0l

                      T8paFMAEKRRvySw8c8W6Di+jf1Ib0RE5oMUVTx1IEXhM+c4LGeV4+Vn3XfxLaUJV

                      CjJmU5L5Wr5A9BYVHaxBPZ8dck8aspx2Td5W+erg89baAxwD5c4UWc2/tlpPwz00

                      5VsdInXPt6am7Z5mMr3DftSEvdtwX+k2DQAHK+dpwe+w4P74ndmzWz9ljLlBi1Jq

                      To6xBtcpxAagLQccDV04Ml58pu81E4VY427pM9xg7RMb4bK18y4jm3YHUFNWy8dM

                      Hr38iPss8DDd1IGOPAkiim72ncun3adf97YGgdTM1odWJGFFydfWkDQadmmwhTYv

                      eBS2SXECgYEA4KtgbPsmy4G4VYuc4P0Zy/ZHPjEvhLx57h+mXUk1JZv6+Hp2F4Q9

                      eRt5D//Ca8wjDy1adr9OhZN66YS8U6Jg4scTselxpQc6RIclE6nSQpMEx5nzDFFc

                      PI3xmXJ3naoAXw1r3pkhyivrmZ5291qiIILVUDyQR/zK6bw/sILIi70CgYEAwdZR

                      psiZiaSCWArPQyzg5uLTbjvnB1qRAxluH6vwlowPYAK5FQnzDlEEVPPo3JdjAM8q

                      p4oLMYf3wJH8Ls8pOXqHRBBpwSNbmZZMR7L7ac8ls88/8WCOnvDiA7Ibv/v9+u9+

                      sm1q3af9dguwL7ji9+5WudmOpMl9WmoGaMDeWmsCgYEArN3wUaplTUzAgsHrsYnN

                      YYxbgNTjlSRYRQqBPWHozMlZr/q6BpovmpGy8sZ91+e4SiNBagEE7+5sMmV5aniU

                      R6mZ09ilIq+O+89ojdqq96KbmOExi5bGe6lT7hePRfbaVkjDaQE2aJKmswqkyuon

                      uRAyBYy0D0/I6VN5Rd07ZZkCgYA3KSBPUCKxUsls+JaGzUyrJ713T0CtjQ5bTW9T

                      QADVNsJhViUJYa1zU4biDg8kR0h7QHko+FW7ILBWcrTLNVTL8JxxuCIAPmmgyW6n

                      sL1vHO3jv4S40fuEK5SF7LeM6M8cC++IIy8YKOguIaFf00NzvrWbadf3+QbdJfLw

                      +IHORQKBgQDOGcFOPRUV48emb6wkm45WYVMsBIsbiAwKbZ9uLdo108vK5x/nlE8Z

                      OXC1xqkec312HAzzjCUxKpSfTaIr1gV6YDGDEeHrYZrwsNo2Q6mBRbL/ZweDTegd

                      ggsmaDVo4kHoApfm7qi+BwCNnehxUR2FhBPs57vHZXYbQBr4unlWGA==

                      -----END RSA PRIVATE KEY-----
                    metadata:
                      expiry: '4840697418'
                      issuer: >-
                        CN=Regery Self-Signed Certificate,O=Regery\,
                        https://regery.com,C=UA
                      key_usages:
                        - KEY_USAGE_TYPE_DIGITAL_SIGNATURE
                        - KEY_USAGE_TYPE_KEY_CERT_SIGN
                        - KEY_USAGE_TYPE_CRL_SIGN
                        - KEY_USAGE_TYPE_ENCIPHER_ONLY
                      subject: CN=asdasdas,O=Regery\, https://regery.com,C=UA
                    tags:
                      - tag1
                    updated_at: 1685023857
            properties:
              data:
                type: array
                description: An array containing certificate information.
                items:
                  type: object
                  properties:
                    cert:
                      type: string
                      description: >-
                        PEM-encoded public certificate chain of the SSL key This
                        field is referenceable and can be stored in a vault
                      example: >-
                        -----BEGIN
                        CERTIFICATE-----\ncertificate-content\n-----END
                        CERTIFICATE-----
                    created_at:
                      type: integer
                      description: Unix epoch when the resource was created
                      example: 1422386534
                    id:
                      type: string
                      description: The UUID representation of the certificate object.
                      example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
                    key:
                      type: string
                      description: >-
                        PEM-encoded private key of the SSL key pair. This field
                        is _referenceable_, which means it can be securely
                        stored as a
                        [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
                        in a vault. References must follow a [specific
                        format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
                      example: ' -----BEGIN RSA PRIVATE KEY-----...'
                    metadata:
                      type: object
                      description: metadata obtained from the certificate
                      properties:
                        expiry:
                          type: string
                          description: The expiration date of the certificate
                          example: '4840697418'
                        issuer:
                          type: string
                          description: Information about the certificate issuer
                          example: >-
                            CN=Example certificate name Self-Signed
                            Certificate,O=example\, https://example.com,C=UA
                        key_usages:
                          type: array
                          description: Key usage flags for the certificate
                          items:
                            type: string
                            example: KEY_USAGE_TYPE_KEY_CERT_SIGN
                          example:
                            - KEY_USAGE_TYPE_DIGITAL_SIGNATURE
                            - KEY_USAGE_TYPE_KEY_CERT_SIGN
                            - KEY_USAGE_TYPE_CRL_SIGN
                            - KEY_USAGE_TYPE_ENCIPHER_ONLY
                        subject:
                          type: string
                          description: Information about the certificate
                          example: CN=cert_name,O=Example\, https://example.com,C=UA
                    tags:
                      type: array
                      description: >-
                        An optional set of strings associated with the
                        Certificate for grouping and filtering
                      items:
                        type: string
                        example: high-level
                      example:
                        - high-level
                        - temporary
                    updated_at:
                      type: integer
                      description: Unix epoch when the resource was updated
                      example: 1422386534
    consumer-groups-response:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                data:
                  - created_at: 1685551597
                    id: 0cf03a37-8987-4c3b-a792-5b1db3eeedc6
                    name: test
                    tags:
                      - tag1
                    updated_at: 1685551597
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    created_at:
                      type: integer
                      description: Unix epoch when the resource was created.
                      example: 1685551597
                    id:
                      type: string
                      description: Consumer group ID
                      example: 0cf03a37-8987-4c3b-a792-5b1db3eeedc6
                    name:
                      type: string
                      description: The name of the consumer group
                      example: example
                    tags:
                      type: array
                      description: >
                        An optional set of strings associated with the Consumer
                        for grouping and filtering.
                      items:
                        type: string
                    updated_at:
                      type: integer
                      description: >-
                        The unix epoc representation of when the consumer group
                        was updated.
                      example: 1685551597
          examples:
            Example consumer group response:
              value:
                data:
                  - created_at: 1685551597
                    id: 0cf03a37-8987-4c3b-a792-5b1db3eeedc6
                    name: test
                    tags:
                      - tag1
                    updated_at: 1685551597
        application/xml:
          schema:
            type: object
            properties: {}
    return-consumer-group:
      description: The response body returns a consumer group and the associated consumers.
      content:
        application/json:
          schema:
            type: object
            properties:
              consumer_group:
                type: object
                properties:
                  created_at:
                    type: integer
                    description: Unix epoch when the resource was created.
                    example: 1685551597
                  id:
                    type: string
                    example: 04fbeacf-a9f1-4a5d-ae4a-b0407445db3f
                    format: uuid
                  name:
                    type: string
                    description: The name of the consumer group
                    example: example
                  tags:
                    type: array
                    description: >
                      An optional set of strings associated with the Consumer
                      for grouping and filtering.
                    items:
                      type: string
                  updated_at:
                    type: integer
                    description: >-
                      The unix epoc representation of when the consumer group
                      was updated.
                    example: 1685551597
              consumers:
                type: array
                items:
                  type: object
                  properties:
                    created_at:
                      type: integer
                      description: Unix epoch when the resource was created.
                      example: 1685551597
                    custom_id:
                      type: string
                      description: A custom ID for the resource
                      nullable: true
                      example: null
                    id:
                      type: string
                      description: The UUID of the consumer
                      example: 0cf03a37-8987-4c3b-a792-5b1db3eeedc6
                    tags:
                      type: array
                      items:
                        type: string
                    updated_at:
                      type: integer
                      description: Unix epoch when the resource was updated.
                      example: 1685551597
                    username:
                      type: string
                      description: the username for the consumer
                      example: example-username
            x-examples:
              Example 1:
                consumer_group:
                  created_at: 1685551597
                  id: 0cf03a37-8987-4c3b-a792-5b1db3eeedc6
                  name: test
                  tags:
                    - tag1
                  updated_at: 1685551597
                consumers:
                  - created_at: 1685023220
                    custom_id: Example-custom-id
                    id: 28384076-31e3-4c27-bd76-7edc57434382
                    tags:
                      - string
                    updated_at: 1685023220
                    username: ExampleUsername
    get-dp-client-cert:
      description: Response body for retrieving a dp-client-certificate.
      content:
        application/json:
          schema:
            type: object
            properties:
              item:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID of the certificate entity.
                  created_at:
                    type: integer
                    description: Date certificate was created.
                  updated_at:
                    type: integer
                    description: Date certificate was last updated.
                  cert:
                    type: string
                    description: JSON escaped string of the certificate.
    get-expected-config-hash:
      description: >-
        Response body for retrieving the expected config hash of the runtime
        group.
      content:
        application/json:
          schema:
            type: object
            properties:
              expected_hash:
                type: string
                description: The expected configuration hash.
              created_at:
                type: integer
                description: Date the runtime group configuration was created.
              updated_at:
                type: integer
                description: Date the runtime group configuration was last updated.
    list-dp-client-certs:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique ID of the certificate entity.
                    created_at:
                      type: integer
                      description: Date certificate was created.
                    updated_at:
                      type: integer
                      description: Date certificate was last updated.
                    cert:
                      type: string
                      description: JSON escaped string of the certificate.
              page:
                type: object
                properties:
                  total_count:
                    type: integer
    list-nodes:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    version:
                      type: string
                    hostname:
                      type: string
                    last_ping:
                      type: integer
                    type:
                      type: string
                    created_at:
                      type: integer
                    updated_at:
                      type: integer
                    config_hash:
                      type: string
                    compatibility_status:
                      type: object
                      properties:
                        state:
                          type: string
              page:
                type: object
                properties:
                  total_count:
                    type: integer
    get-node:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              item:
                type: object
                properties:
                  id:
                    type: string
                  version:
                    type: string
                  hostname:
                    type: string
                  last_ping:
                    type: integer
                  type:
                    type: string
                  created_at:
                    type: integer
                  updated_at:
                    type: integer
                  config_hash:
                    type: string
                  compatibility_status:
                    type: object
                    properties:
                      state:
                        type: string
    RetrieveRuntimeGroupResponse:
      description: A response to retrieving a single runtime group.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuntimeGroup'
          examples:
            Single runtime group response:
              $ref: '#/components/examples/RuntimeGroupExample'
    CreateRuntimeGroupResponse:
      description: A response to creating a runtime group.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuntimeGroup'
          examples:
            Create Runtime Group Response:
              $ref: '#/components/examples/RuntimeGroupExample'
    UpdateRuntimeGroupResponse:
      description: A response to updating a runtime group.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuntimeGroup'
          examples:
            Update Runtime Group Response:
              $ref: '#/components/examples/RuntimeGroupExample'
    ListRuntimeGroupsResponse:
      description: A paginated list response for a collection of runtime groups.
      content:
        application/json:
          schema:
            title: ListRuntimeGroupsResponse
            type: object
            additionalProperties: false
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/RuntimeGroup'
            required:
              - meta
              - data
          examples: {}
    RuntimeGroupsBadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
          examples:
            Request Format Invalid:
              $ref: '#/components/examples/400RequestFormatInvalidExample'
            Cannot Be Blank:
              $ref: '#/components/examples/400CannotBeBlankExample'
            Invalid ID Format:
              $ref: '#/components/examples/400InvalidIDFormatExample'
            Usage Limits Reached:
              $ref: '#/components/examples/400UsageLimitsReachedExample'
            Unknown Property:
              $ref: '#/components/examples/400UnknownPropertyExample'
    RuntimeGroupPermissionDenied:
      description: Permission denied
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
          examples:
            Permission Denied:
              $ref: '#/components/examples/403PermissionDeniedExample'
    RuntimeGroupUnauthenticated:
      description: Unauthenticated
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
          examples:
            Unauthorized:
              $ref: '#/components/examples/401UnauthenticatedExample'
    RuntimeGroupNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
          examples:
            Not Found:
              $ref: '#/components/examples/404NotFoundExample'
    RuntimeGroupConflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          examples:
            Conflict:
              $ref: '#/components/examples/409ConflictExample'
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            title: InternalServerError
            type: object
            description: The error response object.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 500
                enum:
                  - 500
              title:
                type: string
                description: The error response code.
                example: Internal Server Error
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: >-
                  Could not propagate runtime group changes to control plane
                  cluster service.
                description: Details about the error.
            required:
              - status
              - title
              - instance
          examples:
            Internal Server Error:
              $ref: '#/components/examples/500InternalErrorExample'
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            title: ServiceUnavailableError
            type: object
            description: Error response for temporary service unavailability.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 503
                enum:
                  - 503
              title:
                type: string
                description: The error response code.
                example: Service Unavailable
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: >-
                  Could not retrieve permissions to check resource
                  accessibility.
                description: Details about the error.
            required:
              - status
              - title
              - instance
          examples:
            Service Unavailable:
              $ref: '#/components/examples/503PermissionReadFailureExample'
    ListCompositeMemberships:
      description: >-
        A paginated list response for a collection of composite runtime group
        memberships.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                description: >-
                  Array of runtime groups summary who are a child to this
                  composite runtime group.
                items:
                  $ref: '#/components/schemas/RuntimeGroupSummary'
          examples:
            List Composite Memberships Example:
              $ref: '#/components/examples/ListCompositeMembershipsExample'
    GetCompositeStatus:
      description: Status of a composite runtime group, including existing conflicts.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompositeStatus'
          examples:
            Composite Conflict Status Example:
              $ref: '#/components/examples/CompositeConflictStatusExample'
            Composite No Conflict Status Example:
              $ref: '#/components/examples/CompositeNoConflictStatusExample'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The personal access token is meant to be used as an alternative to
        basic-auth when accessing Konnect via APIs.

        You can generate a Personal Access Token (PAT) from the [personal access
        token page](https://cloud.konghq.com/global/tokens/) in the Konnect
        dashboard.

        The PAT token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer kpat_xgfT...'`
    systemAccountAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The system account access token is meant for automations and
        integrations that are not directly associated with a human identity.

        You can generate a system account Access Token by creating a system
        account and then obtaining a system account access token for that
        account.

        The access token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer spat_i2Ej...'`
    konnectAccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >-
        The Konnect access token is meant to be used by the Konnect dashboard
        and the decK CLI to 

        authenticate with.
  examples:
    APIProductExample:
      value:
        id: e7a4f6c0-5777-4a37-bcb9-2d37d3b362ee
        name: API Product
        description: Text describing the API product
        portal_ids: []
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
        labels:
          env: test
    APIProductVersionExample:
      value:
        id: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: v1
        gateway_service:
          runtime_group_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
          id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        publish_status: unpublished
        deprecated: false
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    APIProductVersionSpecExample:
      value:
        id: 7710d5c4-d902-410b-992f-18b814155b53
        name: oas.yaml
        content: My YAML or JSON formatted OAS content
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    ListAPIProductVersionSpecExample:
      value:
        data:
          - id: 7710d5c4-d902-410b-992f-18b814155b53
            name: oas.yaml
            content: My YAML or JSON formatted OAS content
            created_at: '2023-01-01T00:00:00.000Z'
            updated_at: '2023-01-01T00:00:00.000Z'
        meta:
          page:
            number: 1
            size: 1
            total: 1
    CreateAPIProductRequestExample:
      summary: Create API Product Request
      value:
        name: API Product
        description: Text describing the API product
        labels:
          env: test
    CreateAPIProductRequestMinimalExample:
      summary: Create API Product Request (Minimal)
      value:
        name: API Product
    UpdateAPIProductRequestExample:
      summary: Update API Product Request
      value:
        name: API Product with Update Name
        description: Updated text describing the API product
    PublishAPIProductToPortalExample:
      summary: Publish API Product to Portal
      value:
        portal_ids:
          - 07087c41-495a-4599-bc98-4904f1b46654
    CreateAPIProductVersionRequestMinimalExample:
      summary: Create API Product Request (Minimal)
      value:
        name: v1
    CreateLinkedAPIProductVersionRequestExample:
      summary: Create API Product Request
      value:
        name: v1
        publish_status: unpublished
        deprecated: false
        gateway_service:
          runtime_group_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
          id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
    CreateAPIProductVersionSpecificationRequestExample:
      summary: Create API Product Version Specification Request
      value:
        name: oas.yaml
        content: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
    PublishApiProductVersionRequestExample:
      summary: Publish API Product Version
      value:
        publish_status: published
    LinkAPIProductVersionRequestExample:
      summary: Link API Product Version
      value:
        gateway_service:
          runtime_group_id: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
          id: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
    UnlinkAPIProductVersionRequestExample:
      summary: Unlink API Product Version
      value:
        gateway_service: null
    DeprecateAPIProductVersionRequestExample:
      summary: Deprecate API Product Version and Notify Developers
      value:
        deprecated: true
        notify: true
    UpdateAPIProductVersionSpecNameRequestExample:
      summary: Update API Product Version Name
      value:
        name: oas.yaml
    UpdateAPIProductVersionSpecContentRequestExample:
      summary: Update API Product Version Content
      value:
        content: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
    UpdateAPIProductVersionSpecRequestExample:
      summary: Update API Product Version Name and Content
      value:
        name: oas.yaml
        content: TXkgWUFNTCBvciBKU09OIGZvcm1hdHRlZCBPQVMgY29udGVudA==
    APIProductDocumentExample:
      value:
        id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
        parent_document_id: null
        title: API Product Document
        slug: api-product-document
        status: published
        ast:
          - children:
              - text: API Product Document Header
                type: text
            level: 1
            type: heading
          - children:
              - children:
                  - text: API product document content
                    type: text
                type: paragraph
        metadata: {}
        created_at: '2023-01-01T00:00:00.000Z'
        updated_at: '2023-01-01T00:00:00.000Z'
    APIProductDocumentTreeExample:
      value:
        data:
          - id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
            parent_document_id: null
            slug: api-product-document
            status: published
            title: API Product Document
            metadata: {}
            children:
              - children: []
                id: d1da26c9-02a8-4492-868e-b069e2efa221
                metadata: {}
                parent_document_id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
                slug: api-product-document-child
                status: published
                title: API Product Document Child
        meta:
          page:
            number: 1
            size: 1
            total: 10
    ListAPIProductDocumentSummaryExample:
      value:
        data:
          - id: de5c9818-be5c-42e6-b514-e3d4bc30ddeb
            parent_document_id: null
            slug: api-product-document
            status: published
            title: API Product Document
        meta:
          page:
            number: 1
            size: 1
            total: 10
    CreateAPIProductDocumentRequestExample:
      summary: Create API Product Document Request
      value:
        slug: api-product-document
        status: published
        title: API Product Document
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudA==
        parent_document_id: 417a2aed-9a75-4eca-a943-fa7d88ed6a73
        metadata:
          author: John Doe
    CreateAPIProductDocumentRequestMinimalExample:
      summary: Create API Product Document Request (Minimal)
      value:
        slug: api-product-document
        status: published
        title: API Product Document
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudA==
    UpdateAPIProductDocumentAttributesRequestExample:
      summary: Update API Product Document Attributes Request
      value:
        parent_document_id: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug: api-product-document
        status: published
        title: API Product Document
        metadata:
          author: Jane Doe
    UpdateAPIProductDocumentContentRequestExample:
      summary: Update API Product Document Content Request
      value:
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudCB1cGRhdGVk
    UpdateAPIProductDocumentAttributesAndContentRequestExample:
      summary: Update API Product Document Attributes and Content Request
      value:
        parent_document_id: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug: api-product-document
        status: published
        title: API Product Document
        content: >-
          IyBBUEkgUHJvZHVjdCBEb2N1bWVudCBIZWFkZXIKQVBJIHByb2R1Y3QgZG9jdW1lbnQgY29udGVudCB1cGRhdGVk
        metadata:
          author: Jane Doe
    APIProductNameBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:8405749052424858251
        detail: Invalid Parameters
        invalid_parameters:
          - field: name
            rule: min_length
            choices: []
            reason: name must be longer than or equal to 1 characters
    APIProductDocumentBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:5832302153563197721
        detail: Invalid Parameters
        invalid_parameters:
          - field: slug
            rule: matches_regex
            choices: []
            reason: slug must match /^[\w-]+$/ regular expression
    APIProductVersionSpecContentBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:1433447772874964729
        detail: Invalid Parameters
        invalid_parameters:
          - field: content
            rule: min_length
            choices: []
            reason: content must be longer than or equal to 1 characters
    UnauthorizedExample:
      value:
        status: 401
        title: Unauthorized
        instance: kong:trace:8347343766220159418
        detail: Unauthorized
    NotFoundExample:
      value:
        status: 404
        title: Not Found
        instance: kong:trace:6816496025408232265
        detail: Not Found
    ForbiddenExample:
      value:
        status: 403
        title: Forbidden
        instance: kong:trace:2723154947768991354
        detail: You do not have permission to perform this action
    SlugConflictExample:
      value:
        status: 409
        title: Conflict
        instance: kong:trace:3169213858331814220
    VersionSpecConflictExample:
      value:
        status: 409
        title: Conflict
        instance: kong:trace:3169213858331814220
        detail: >-
          Specification for API product version
          '9f5061ce-78f6-4452-9108-ad7c02821fd5' already exists
    VersionSpecHiddenConflictExample:
      value:
        status: 409
        title: Conflict
        instance: kong:trace:9039922446017540182
        detail: >-
          Key (service_version_id, path)=(23380be0-c15e-4ca8-bcf7-43aadddc91b1,
          hidden.yaml) already exists.
    InvalidSortQueryBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:4725061142075238974
        detail: Invalid Parameters
        invalid_parameters:
          - field: sort
            rule: enum
            choices: []
            reason: '"sort" field must contain any of: []'
    InvalidSortQueryNameBadRequestExample:
      value:
        status: 400
        title: Invalid Request
        instance: kong:trace:4725061142075238974
        detail: Invalid Parameters
        invalid_parameters:
          - field: sort
            rule: enum
            choices:
              - name
            reason: '"sort" field must contain any of: [name]'
    UnsupportedMediaTypeExample:
      value:
        status: 415
        title: Unsupported Media Type
        instance: kong:trace:8347343766220159418
        detail: 'This API only supports requests with `Content-Type: application/json`'
    400-request-format-is-invalid:
      value:
        status: 400
        title: Bad Request
        detail: Could not parse request body
        instance: konnect:trace:3674017986744198214
        invalid_parameters:
          - field: body
            reason: request format is invalid
          - field: body
            reason: request format is invalid
    400-authorization-cannot-be-blank:
      value:
        status: 400
        title: Bad Request
        detail: Required field missing
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: authorization
            reason: cannot be blank
    400-endpoint-cannot-be-blank:
      value:
        status: 400
        title: Bad Request
        detail: Required field missing
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: endpoint
            reason: cannot be blank
    400-endpoint-must-be-valid-url:
      value:
        status: 400
        title: Bad Request
        detail: Invalid endpoint
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: endpoint
            reason: must be a valid URL
    409-job-running:
      value:
        status: 409
        title: Resource Conflict
        instance: konnect:trace:6644808935508571943
        detail: A replay job is currently running
    Update-Audit-Log-Webhook:
      value:
        endpoint: https://example.com/audit-log-json
        log_format: json
    Disable-Audit-Log-Webhook:
      value:
        enabled: false
    Enable-Audit-Log-Webhook:
      value:
        enabled: true
    Get-Audit-Log-Webhook:
      value:
        endpoint: https://example.com/audit-log
        enabled: true
        log_format: cef
        updated_at: '2023-03-21T09:29:14.52Z'
    Get-Audit-Log-Webhook-Status:
      value:
        webhook_enabled: true
        webhook_status: inactive
        last_attempt_at: '2023-03-21T09:29:14.52Z'
        last_response_code: 401
        last_response_message: Unauthorized
    JWKS:
      value:
        keys:
          - kty: OKP
            alg: EdDSA
            kid: 3f60bc4376c937154f3c004ebd180433ac0d03e6
            crv: Ed25519
            x: XWxGtApfcqmKI7p0OKnF5JSEWMVoLsytFXLEP7xZ_l8
    400-cannot-be-blank:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: name
            reason: cannot be blank
    400-invalid-id-format:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:8988732526256293040
        invalid_parameters:
          - field: teamID
            reason: invalid ID format
    400-valid-uuid:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:7680390984800447837
        invalid_parameters:
          - field: id
            reason: must be a valid UUID v4
    400-password-complexity:
      value:
        status: 400
        title: Bad Request
        detail: Password does not meet complexity requirements.
        instance: konnect:trace:1738820719742148545
        invalid_parameters:
          - field: new_password
            reason: 'is too short (minimum length: 8)'
            rule: min_length
            minimum: 8
          - field: new_password
            reason: must contain at least 1 digit
            rule: min_digits
            minimum: 1
          - field: new_password
            reason: must contain at least 1 lower case character
            rule: min_lowercase
            minimum: 1
          - field: new_password
            reason: must contain at least 1 upper case character
            rule: min_uppercase
            minimum: 1
          - field: new_password
            reason: must contain at least 1 special character
            rule: min_symbols
            minimum: 1
    400-systems-team-modified:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:1738820719742148545
        invalid_parameters:
          - field: teamID
            reason: system teams cannot be modified
    400-authentication-settings-cannot-be-both-disabled:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: oidc_auth_enabled
            reason: cannot be disabled when basic auth is also disabled
          - field: basic_auth_enabled
            reason: cannot be disabled when OIDC is also disabled
    400-oidc-auth-enabled-needs-idp:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: oidc_auth_enabled
            reason: cannot be set before configuring an identity provider
    400-idp-config-is-required:
      value:
        status: 400
        title: Bad Request
        detail: An IdP configuration is required
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: data
            reason: cannot be set before configuring an identity provider
    404-not-found:
      value:
        status: 404
        title: Not Found
        instance: konnect:trace:2287285207635123011
        detail: The requested team was not found
    403-permission-denied:
      value:
        status: 403
        title: Permission denied
        instance: konnect:trace:2822394689570210664
        detail: Only enterprise organizations can create teams
    403-invalid-permissions:
      value:
        status: 403
        title: Invalid Permissions
        detail: You must have the [administrator] role to perform this action
        instance: konnect:trace:6c1ef33ae5bce33634d7d7d695c7f203
    403-auth-invalid:
      value:
        type: https://kongapi.info/konnect/invalid-permissions
        status: 403
        title: Invalid Permissions
        detail: You must have the [administrator] role to perform this action
        instance: konnect:trace:6c1ef33ae5bce33634d7d7d695c7f203
    409-user-is-already-active:
      value:
        status: 409
        title: Resource Conflict
        instance: konnect:trace:6644808935508571943
        detail: User is already active
    412-precondition-failed:
      value:
        status: 412
        title: Precondition Failed
        instance: konnect:trace:1896611024257578096
        detail: IdP configuration not found
    429-rate-limited:
      value:
        status: 429
        title: Rate Limited
        instance: konnect:trace:6644808935508571943
        detail: Too many requests
    collection-example:
      value:
        meta:
          page:
            number: 1
            size: 10
            total: 100
        data:
          - id: b02e23c5-8ee4-4e5a-99f4-43329923adcd
            role_name: Viewer
            entity_id: 437c7192-fea0-4f35-8478-c8d57783f8c1
            entity_type_name: Runtime Groups
            entity_region: eu
          - id: 869d9402-f117-4f9a-840f-69acaf70a81a
            role_name: Admin
            entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
            entity_type_name: Services
            entity_region: '*'
    Parameterized-Assigned-Roles-Collection-Example:
      value:
        meta:
          page:
            number: 1
            size: 10
            total: 100
        data:
          - id: b02e23c5-8ee4-4e5a-99f4-43329923adcd
            role_name: Connector
            entity_id: 437c7192-fea0-4f35-8478-c8d57783f8c1
            entity_type_name: Mesh Control Planes
            entity_region: us
            parameters:
              zoneName: zone2
          - id: 869d9402-f117-4f9a-840f-69acaf70a81a
            role_name: Connector
            entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
            entity_type_name: Mesh Control Planes
            entity_region: eu
            parameters:
              zoneName: zone3
    Assigned-Role-Example:
      value:
        id: eaf7adf1-32c8-4bbf-b960-d1f8456afe67
        role_name: Viewer
        entity_id: 817d0422-45c9-4d88-8d64-45aef05c1ae7
        entity_type_name: Runtime Groups
        entity_region: eu
    Parameterized-Assigned-Role-Example:
      value:
        id: eaf7adf1-32c8-4bbf-b960-d1f8456afe67
        role_name: Connector
        entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
        entity_type_name: Mesh Control Planes
        entity_region: eu
        parameters:
          zoneName: zone4
    group-collection-example:
      value:
        meta:
          page:
            number: 1
            size: 10
            total: 6
        data:
          - group: 111(@&*$)(@*#_@(gfds re gdsf dfg
            team_ids:
              - c0010105-e840-4824-b7ee-787f22267c36
          - group: '2222'
            team_ids:
              - af91db4c-6e51-403e-a2bf-33d27ae50c0a
    single-team-response:
      value:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        name: IDM - Developers
        description: The developers for the IDM API.
        system_team: false
        created_at: '2022-02-07T17:46:57.52Z'
        updated_at: '2022-09-25T13:00:00.00Z'
    team-mapping-collection:
      value:
        mappings:
          - group: Service Developers
            team_ids:
              - 6801e673-cc10-498a-94cd-4271de07a0d3
    401-unauthenticated:
      value:
        status: 401
        title: Unauthenticated
        instance: konnect:trace:952172606039454040
        detail: A valid token is required
    user-collection-response-example:
      value:
        meta:
          page:
            number: 1
            size: 10
            total: 10
        data:
          - id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
            email: james.woods@email.com
            full_name: James Woods
            preferred_name: Jimmy
            active: true
            created_at: '2022-08-17T17:46:57.52Z'
            updated_at: '2022-10-03T17:00:00.00Z'
    Get-User-Response:
      value:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        email: james.woods@email.com
        full_name: James Woods
        preferred_name: Jimmy
        active: true
        created_at: '1992-02-07T17:46:57.52Z'
        updated_at: '2022-02-07T17:00:00.52Z'
    Assign-Roles-US:
      value:
        role_name: Viewer
        entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
        entity_type_name: Runtime Groups
        entity_region: us
    Assign-Roles-Global:
      value:
        role_name: Admin
        entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
        entity_type_name: Services
        entity_region: '*'
    CreateTeamExample:
      value:
        name: IDM - Developers
        description: The Identity Management (IDM) team.
    Update-Team-Request:
      value:
        name: IDM - Developers
        description: The Identity Management (IDM) API team.
    Update-Team-Mappings:
      value:
        mappings:
          - group: API Engineers
            team_ids:
              - af91db4c-6e51-403e-a2bf-33d27ae50c0a
    Patch-Team-Group-Mappings:
      value:
        data:
          - team_id: af91db4c-6e51-403e-a2bf-33d27ae50c0a
            groups:
              - Team Leads
              - API Engineers
    Update-User-Request:
      value:
        full_name: James C Woods
        preferred_name: Jimmy
    Add-User-Request:
      value:
        id: df120cb4-f60b-47bc-a2f8-6a28e6a3c63b
    Get-Authentication-Settings:
      value:
        oidc_auth_enabled: true
        basic_auth_enabled: false
        idp_mapping_enabled: false
        konnect_mapping_enabled: true
    Update-Authentication-Settings:
      value:
        oidc_auth_enabled: false
        basic_auth_enabled: true
        idp_mapping_enabled: false
        konnect_mapping_enabled: true
    400RequestFormatInvalidExample:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:3674017986744198214
        invalid_parameters:
          - field: body
            reason: request format is invalid
    400CannotBeBlankExample:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:6644808935508571943
        invalid_parameters:
          - field: name
            reason: cannot be blank
    400InvalidIDFormatExample:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:8988732526256293040
        invalid_parameters:
          - field: id
            reason: invalid ID format
    400UsageLimitsReachedExample:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:8988732526256293040
        detail: >-
          Cannot create an additional runtime group because usage limits have
          been reached.
    400UnknownPropertyExample:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:8988732526256293040
        invalid_parameters:
          - field: id
            rule: unknownProperty
            reason: property id should not exist
    401UnauthenticatedExample:
      value:
        status: 401
        title: Unauthenticated
        instance: konnect:trace:952172606039454040
        detail: A valid token is required
    403PermissionDeniedExample:
      value:
        status: 403
        title: Permission denied
        instance: konnect:trace:2822394689570210664
        detail: Insufficient role-set to create runtime groups.
    404NotFoundExample:
      value:
        status: 404
        title: Not Found
        instance: konnect:trace:2287285207635123011
        detail: The requested runtime group was not found.
    409ConflictExample:
      value:
        status: 409
        title: Conflict
        instance: konnect:trace:2287285207635123011
        detail: Runtime group with provided name already exists.
    500InternalErrorExample:
      value:
        status: 500
        title: Internal Server Error
        instance: konnect:trace:2287285207635123011
        detail: >-
          Could not propagate runtime group changes to control plane cluster
          service.
    503PermissionReadFailureExample:
      value:
        status: 503
        title: Service Unavailable
        instance: konnect:trace:2287285207635123011
        detail: Could not retrieve permissions to check resource accessibility.
    CreateRuntimeGroupRequestExample:
      value:
        name: Test Runtime Group
        description: A test runtime group for exploration.
        cluster_type: CLUSTER_TYPE_K8S_INGRESS_CONTROLLER
        labels:
          test: 'true'
    UpdateRuntimeGroupRequestExample:
      value:
        name: Test Runtime Group
        description: A test runtime group for exploration.
        labels:
          otherTest: 'true'
    RuntimeGroupExample:
      value:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        name: Test Runtime Group
        description: A test runtime group for exploration.
        labels:
          test: 'true'
        config:
          control_plane_endpoint: https://acfe5f253f.cp0.konghq.com
          telemetry_endpoint: https://acfe5f253f.tp0.konghq.com
          cluster_type: CLUSTER_TYPE_HYBRID
    CompositeConflictStatusExample:
      value:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        conflicts:
          - cluster_id: 57fdf779-7935-476f-ab2b-7fa1323b70e6
            description: >-
              conflicting entity found: ID=df43b088-cace-4119-9e2a-d83e5fbb0c48,
              Name=svc1
            resource:
              id: df43b088-cace-4119-9e2a-d83e5fbb0c48
              type: service
          - cluster_id: 38ceea96-fe39-11ed-be56-0242ac120002
            description: >-
              conflicting entity found: ID=15f3ab7d-7202-498a-95b4-334f783dbcdd,
              Name=svc1
            resource:
              id: 15f3ab7d-7202-498a-95b4-334f783dbcdd
              type: service
        state: COMPOSITE_STATE_CONFLICT
        created_at: '2022-11-04T20:10:06.927Z'
        updated_at: '2022-11-04T20:10:06.927Z'
    CompositeNoConflictStatusExample:
      value:
        id: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        conflicts:
          - cluster_id: 57fdf779-7935-476f-ab2b-7fa1323b70e6
            description: >-
              conflicting entity found: ID=df43b088-cace-4119-9e2a-d83e5fbb0c48,
              Name=svc1
            resource:
              id: df43b088-cace-4119-9e2a-d83e5fbb0c48
              type: service
          - cluster_id: 38ceea96-fe39-11ed-be56-0242ac120002
            description: >-
              conflicting entity found: ID=15f3ab7d-7202-498a-95b4-334f783dbcdd,
              Name=svc1
            resource:
              id: 15f3ab7d-7202-498a-95b4-334f783dbcdd
              type: service
        state: COMPOSITE_STATE_CONFLICT
        created_at: '2022-11-04T20:10:06.927Z'
        updated_at: '2022-11-04T20:10:06.927Z'
    ListCompositeMembershipsExample:
      value:
        meta:
          page:
            total: 2
            size: 100
            number: 1
        data:
          - id: 774f2a35-509d-4b94-97e9-1ed49563bcb1
            name: Composite Member 1
            description: Child RG
            labels:
              env: prod
            config:
              control_plane_endpoint: https://9e0353434a.us.cp0.konghq.com
              telemetry_endpoint: https://9e0353434a.us.tp0.konghq.com
              cluster_type: CLUSTER_TYPE_HYBRID
            created_at: '2023-03-20T22:23:45.873Z'
            updated_at: '2023-03-30T16:17:55.073Z'
          - id: e4a1917c-bb26-4aa1-9a3e-50ee366f13db
            name: Composite Member 2
            description: Child RG
            labels:
              env: prod
              foo: bar
            config:
              control_plane_endpoint: https://05459046af.us.cp0.konghq.com
              telemetry_endpoint: https://05459046af.us.tp0.konghq.com
              cluster_type: CLUSTER_TYPE_HYBRID
            created_at: '2023-03-23T22:25:30.907Z'
            updated_at: '2023-03-30T16:18:12.067Z'
